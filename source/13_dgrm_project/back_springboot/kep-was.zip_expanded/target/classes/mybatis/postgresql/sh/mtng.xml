<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.sh.mtng.mapper.MtngMapper">

	<!-- 회의체 관리 조회  -->
	<select id="selectMtngList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtngList */
		select
		    sm.mtng_id as mtng_id
		    ,fn_get_cmpy(sm.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		    ,fn_get_cd('ST00000002', sm.wkpl_id, 'nm', #{SESS_LANG}) as wkpl_nm
		    ,substring(sm.mtng_dt, 0, 5) || '-' || substring(sm.mtng_dt, 5, 2) || '-' || substring(sm.mtng_dt, 7, 2) as mtng_dt
		    ,substring(sm.mtng_bgn_hm, 0, 3) || ':' || substring(sm.mtng_bgn_hm, 3, 2) as mtng_bgn_hm
		    ,substring(sm.mtng_end_hm, 0, 3) || ':' || substring(sm.mtng_end_hm, 3, 2) as mtng_end_hm
		    ,'[' || fn_get_cd('SH00000003', sm.mtng_cyc_cd, 'nm', #{SESS_LANG}) || '] ' || sm.mtng_ttl as mtng_ttl
		    ,fn_get_cd('SH00000001', sm.mtng_cl_cd, 'nm', #{SESS_LANG}) as mtng_cl_nm
		    ,sm.mtng_pl_nm
		    ,substring(sm.mtng_bgn_hm, 0, 3) || ':' || substring(sm.mtng_bgn_hm, 3, 2) || '~' || substring(sm.mtng_end_hm, 0, 3) || ':' || substring(sm.mtng_end_hm, 3, 2) as mtng_hm
		    ,sm.mtng_rslt_atfl_no
		    ,sm.mtng_rslt_prst_cd
		    ,fn_get_cd('SH00000064', sm.mtng_rslt_prst_cd, 'nm', #{SESS_LANG}) as mtng_rslt_prst_nm
		    ,sm.mtng_rslt_aprv_no as mtng_rslt_aprv_no
		    ,case when (select dept_cd from tb_co_user where usr_id = sm.crt_usr_id) = #{SESS_DEPT} then 'U'
		     else 'R' end as mode
		    ,sm.del_yn
		from tb_sh_mtng sm
		left outer join tb_sh_wkpl sw on sm.wkpl_id = sw.wkpl_id 
		where (sm.del_yn = 'N' or sm.del_yn is null or sm.del_yn = '')
		<if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
		and sm.mtng_dt between replace(#{sDate},'-','') and replace(#{eDate},'-','')
		</if>
		<if test='wkpl_id != null and wkpl_id != ""'>
			and sm.wkpl_id = #{wkpl_id}
		</if>
		<if test='mtng_cl_cd != null and mtng_cl_cd != ""'>
			and sm.mtng_cl_cd = #{mtng_cl_cd}
		</if>
		<if test='mtng_cyc_cd != null and mtng_cyc_cd != ""'>
			and sm.mtng_cyc_cd = #{mtng_cyc_cd}
		</if>
		<if test='mtng_ttl != null and mtng_ttl != ""'>
			and sm.mtng_ttl like '%' || #{mtng_ttl} || '%'
		</if>
		<if test='mtng_sbjc_cl_cd != null and mtng_sbjc_cl_cd != ""'>
			and exists (select 1 from tb_sh_mtng_sbjc sms where sms.mtng_id = sm.mtng_id and sms.mtng_sbjc_cl_cd = #{mtng_sbjc_cl_cd})
		</if>
		<if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = sm.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		order by mtng_id desc
	</select>
	
	<!-- 회의체 관리 상세 조회 -->
	<select id="selectMtng" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtng */
		select
		    sm.mtng_id as mtng_id
		    ,sm.wkpl_id as wkpl_id
		    ,fn_get_cd('ST00000002', sm.wkpl_id, 'nm', #{SESS_LANG}) as wkpl_nm
		    ,substring(sm.mtng_dt, 0, 5) || '-' || substring(sm.mtng_dt, 5, 2) || '-' || substring(sm.mtng_dt, 7, 2) as mtng_dt
		    ,substring(sm.mtng_bgn_hm, 0, 3) || ':' || substring(sm.mtng_bgn_hm, 3, 2) as mtng_bgn_hm
		    ,substring(sm.mtng_end_hm, 0, 3) || ':' || substring(sm.mtng_end_hm, 3, 2) as mtng_end_hm
		    ,substring(sm.mtng_bgn_hm, 0, 3) as mtng_bgn_hm_h
		    ,substring(sm.mtng_bgn_hm, 3, 2) as mtng_bgn_hm_s
		    ,substring(sm.mtng_end_hm, 0, 3) as mtng_end_hm_h
		    ,substring(sm.mtng_end_hm, 3, 2) as mtng_end_hm_s
		    ,sm.mtng_ttl
		    ,sm.mtng_cl_cd as mtng_cl_cd
		    ,fn_get_cd('SH00000001', sm.mtng_cl_cd, 'nm', #{SESS_LANG}) as mtng_cl_nm
		    ,sm.mtng_cyc_cd as mtng_cyc_cd
		    ,fn_get_cd('SH00000003', sm.mtng_cyc_cd, 'nm', #{SESS_LANG}) as mtng_cyc_nm
		    ,sm.mtng_pl_nm
		    ,sm.mtng_rslt_txt
		    ,sm.mtng_rslt_atfl_no
		    ,sm.mtng_rslt_prst_cd as mtng_rslt_prst_cd
		   	,sm.crt_usr_id
		    ,fn_get_user(sm.upt_usr_id, 'nm', #{SESS_LANG}) as lsch_nm
		from tb_sh_mtng sm
		where mtng_id = #{mtng_id}
	</select>
	
	<select id="selectMtngAtnd" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtngAtnd */
		select
		    mtng_id as mtng_id
		    ,mtng_atnd_sn
		    ,mtng_atnd_cl_cd as mtng_atnd_cl_cd
		    ,fn_get_cd('SH00000007', mtng_atnd_cl_cd, 'nm', #{SESS_LANG}) as mtng_atnd_cl_nm
		    ,mtng_atnc_usr_id
		    ,mtng_atnd_nm
		    ,mtng_atnd_pstn_nm
		    ,mtng_atnd_dept_nm
		    ,mtng_atnd_tphn
		    ,mtng_atnd_emad
		from tb_sh_mtng_atnd
		where mtng_id = #{mtng_id}
		order by mtng_atnd_sn
	</select>
	
	<select id="selectMtngSbjc" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtngSbjc */
		select
		    mtng_id as mtng_id
		    ,mtng_sbjc_sn
		    ,mtng_sbjc_cl_cd as mtng_sbjc_cl_cd
		    ,fn_get_cd('SH00000002', mtng_sbjc_cl_cd, 'nm', #{SESS_LANG}) as mtng_sbjc_cl_nm
		    ,mtng_sbjc_txt
		    ,mtng_sbjc_rslt_txt
		from tb_sh_mtng_sbjc
		where mtng_id = #{mtng_id}
		order by mtng_sbjc_sn
	</select>
	
	<insert id="insertMtng" parameterType="sqlMap">
		<selectKey keyProperty="mtng_id" resultType="String" order="BEFORE">
        	select to_char(now(), 'MTYYMMDD') || to_char(substring(coalesce(MAX(mtng_id), to_char(now(), 'MTYYMMDD0000')), 9, 4)::INTEGER + 1, 'FM0000') mtng_id
			from tb_sh_mtng 
			where mtng_id like to_char(now(), 'MTYYMMDD') || '%'
    	</selectKey>
    	
      	/* insertMtng */
      	insert into tb_sh_mtng (
			mtng_id
			,wkpl_id
			,mtng_cl_cd
			,mtng_cyc_cd
			,mtng_ttl
			,mtng_pl_nm
			,mtng_dt
			,mtng_bgn_hm
			,mtng_end_hm
			,mtng_rslt_aprv_no
			,mtng_rslt_prst_cd
			,mtng_rslt_txt
			,mtng_plan_atfl_no
			,mtng_rslt_atfl_no
			,del_yn
			,crt_usr_id
			,upt_usr_id
		) values (
			#{mtng_id}
       		,#{wkpl_id}
			,#{mtng_cl_cd}
			,#{mtng_cyc_cd}
			,#{mtng_ttl}
			,#{mtng_pl_nm}
			,#{mtng_dt}
			,#{mtng_bgn_hm}
			,#{mtng_end_hm}
			,#{mtng_rslt_aprv_no}
			,#{mtng_rslt_prst_cd}
			,#{mtng_rslt_txt}
			,#{mtng_plan_atfl_no}::INTEGER 
			,#{mtng_rslt_atfl_no}::INTEGER
			,'N'
			,#{SESS_USR_ID}
			,#{SESS_USR_ID}
		)
    </insert>
    
    <insert id="insertMtngAtnd" parameterType="sqlMap">
      	/* insertMtngAtnd */
      	insert into tb_sh_mtng_atnd (
			mtng_id
			,mtng_atnd_sn
			,mtng_atnd_cl_cd
			,mtng_atnc_usr_id
			,mtng_atnd_nm
			,mtng_atnd_pstn_nm
			,mtng_atnd_dept_nm
			,mtng_atnd_tphn
			,mtng_atnd_emad
			,crt_usr_id
			,upt_usr_id
		) values (
			#{mtng_id}
			,#{mtng_atnd_sn}::INTEGER
			,#{mtng_atnd_cl_cd}
			,#{mtng_atnc_usr_id}
			,#{mtng_atnd_nm}
			,#{mtng_atnd_pstn_nm}
			,#{mtng_atnd_dept_nm}
			,#{mtng_atnd_tphn}
			,#{mtng_atnd_emad}
			,#{SESS_USR_ID}
			,#{SESS_USR_ID}
		)
    </insert>
    
    <insert id="insertMtngSbjc" parameterType="sqlMap">
      	/* insertMtngSbjc */
      	insert into tb_sh_mtng_sbjc (
			mtng_id
			,mtng_sbjc_sn
			,mtng_sbjc_cl_cd
			,mtng_sbjc_txt
			,mtng_sbjc_rslt_txt
			,crt_usr_id
			,upt_usr_id
		) values (
			#{mtng_id}
			,#{mtng_sbjc_sn}::INTEGER
			,#{mtng_sbjc_cl_cd}
			,#{mtng_sbjc_txt}
			,#{mtng_sbjc_rslt_txt}
			,#{SESS_USR_ID}
			,#{SESS_USR_ID}
		)
    </insert>
    
    <update id="updateMtng" parameterType="sqlMap">
        /* updateMtng */
        update tb_sh_mtng set
        	wkpl_id = #{wkpl_id}
			,mtng_cl_cd = #{mtng_cl_cd}
			,mtng_cyc_cd = #{mtng_cyc_cd}
			,mtng_ttl = #{mtng_ttl}
			,mtng_pl_nm = #{mtng_pl_nm}
			,mtng_dt = #{mtng_dt}
			,mtng_bgn_hm = #{mtng_bgn_hm}
			,mtng_end_hm = #{mtng_end_hm}
			,mtng_rslt_aprv_no = #{mtng_rslt_aprv_no}
			,mtng_rslt_prst_cd = #{mtng_rslt_prst_cd}
			,mtng_rslt_txt = #{mtng_rslt_txt}
			,mtng_plan_atfl_no = #{mtng_plan_atfl_no}::INTEGER 
			,mtng_rslt_atfl_no = #{mtng_rslt_atfl_no}::INTEGER 
			,upt_usr_id = #{SESS_USR_ID}
			,upt_dt = statement_timestamp()
		where mtng_id = #{mtng_id}
    </update>
    
    <update id="updateAppr" parameterType="sqlMap">
        /* updateAppr */
        update tb_sh_mtng set
			mtng_rslt_aprv_no = #{mtng_rslt_aprv_no}
			,upt_usr_id = #{SESS_USR_ID}
			,upt_dt = statement_timestamp()
		where mtng_id = #{mtng_id}
    </update>
    
    <delete id="deleteMtngAtnd" parameterType="sqlMap">
        /* deleteMtngAtnd */
        delete from tb_sh_mtng_atnd
		where mtng_id = #{mtng_id}
    </delete>
    
    <delete id="deleteMtngSbjc" parameterType="sqlMap">
        /* deleteMtngSbjc */
        delete from tb_sh_mtng_sbjc
		where mtng_id = #{mtng_id}
    </delete>
    
	<delete id="deleteMtng" parameterType="sqlMap">
        /* deleteMtng */
        delete from tb_sh_mtng
		where mtng_id = #{mtng_id}
    </delete>
	
	<select id="selectMtngId" parameterType="sqlMap" resultType="string">
		/* selectMtngId */
		select to_char(now(), 'MTYYMMDD') || to_char(substring(coalesce(MAX(mtng_id), to_char(now(), 'MTYYMMDD0000')), 9, 4)::INTEGER + 1, 'FM0000') mtng_id
		from tb_sh_mtng 
		where mtng_id like to_char(now(), 'MTYYMMDD') || '%'
	</select>
	
	<select id="selectMtngAprvDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtngAprvDtl */
		select mtng_rslt_aprv_no
		      ,mtng_rslt_prst_cd
		  from tb_sh_mtng 
		 where mtng_rslt_aprv_no = #{mtng_rslt_aprv_no}
	</select>
	
	<update id="updateMtngAprvAf" parameterType="sqlMap">
        /* updateMtngAprvAf */
        update tb_sh_mtng
		   set mtng_rslt_prst_cd = #{mtng_rslt_prst_cd}
		      ,upt_dt = now()
		 where mtng_rslt_aprv_no = #{mtng_rslt_aprv_no}
    </update>
    
    <!-- 회의체 관리 삭제  -->
    <update id ="delMtng" parameterType="sqlMap">
    /* delMtng */
        update tb_sh_mtng
		   set	del_yn = 'Y'
				,upt_usr_id  = #{username}
		      	,upt_dt = current_timestamp
		 where mtng_id = #{mtng_id}
    </update>
</mapper>