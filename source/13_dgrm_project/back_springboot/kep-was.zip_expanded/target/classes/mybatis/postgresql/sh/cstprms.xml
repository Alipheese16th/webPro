<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.sh.cstprms.mapper.CstprmsMapper">

	<!-- 업체 관리 조회 -->
	<select id="selectOtsrConBsenList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOtsrConBsenList  */
		select a.otsr_con_bsen_id
		      ,a.otsr_con_bsen_nm
		      ,a.rprv_nm
		      ,(select count(1) as cnt
		          from tb_sh_otsr_con_oprr b
		         where b.otsr_con_bsen_id = a.otsr_con_bsen_id
		           and b.oprr_del_yn = 'N'
		       ) as oprr_cnt
		      ,a.usg_yn 
		      ,(select u.dept_cd 
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		      ,to_char(upt_dt, 'YYYY-MM-DD') as lsch_dt
		  from tb_sh_otsr_con_bsen a
		 <where>
		 <if test='otsr_con_bsen_id != null and otsr_con_bsen_id != ""'>
		   and a.otsr_con_bsen_id = #{otsr_con_bsen_id}
		 </if>
		 <if test='otsr_con_bsen_nm != null and otsr_con_bsen_nm != ""'>
		   and a.otsr_con_bsen_nm like concat('%', rtrim(ltrim(#{otsr_con_bsen_nm})), '%')
		 </if>
		 <if test='usg_yn != null and usg_yn != ""'>
		   and a.usg_yn = #{usg_yn}
		 </if>
		 </where>
	</select>
	
	<!-- 업체 관리 상세 조회 -->
	<select id="selectOtsrConBsenDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectOtsrConBsenDtl */
		select a.otsr_con_bsen_id
		      ,a.otsr_con_bsen_nm
		      ,a.otsr_con_bsen_addr
		      ,a.usg_yn
		      ,a.rprv_nm
		      ,a.bspr_no
		      ,a.otsr_con_bsen_tphn
		      ,a.otsr_con_bsen_dtrm_yn
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		  from tb_sh_otsr_con_bsen a
		 where a.otsr_con_bsen_id = #{otsr_con_bsen_id}
	</select>
	
	<!-- 업체 관리 작업자 정보 목록 조회 -->
	<select id="selectOtsrConBsenOprrList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOtsrConBsenOprrList */
		select 'Y' as chk_gb
		      ,a.otsr_con_bsen_id
		      ,a.oprr_id
		      ,a.oprr_nm
		      ,a.oprr_tphn
		      ,a.oprn_cl_cd
		      ,fn_get_cd('SH00000010', a.oprn_cl_cd, 'NM', #{SESS_LANG}) as oprn_cl_nm
		      ,to_char(to_timestamp(a.crtf_vld_end_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as crtf_vld_end_dt
		      ,to_char(to_timestamp(a.buil_bsc_sft_trn_fcst_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as buil_bsc_sft_trn_fcst_dt
		      ,a.oprr_dtrm_yn
		      ,a.oprr_del_yn
		      ,a.oprr_atfl_no
		      ,(select count(1) as cnt
				  from tb_co_atfl e
				 where e.atfl_no = a.oprr_atfl_no
			   ) as oprr_atfl_cnt
			  ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
			  ,to_char(a.upt_dt, 'YYYY-MM-DD') as upt_dt
		  from tb_sh_otsr_con_oprr a
		 where a.otsr_con_bsen_id = #{otsr_con_bsen_id}
	</select>
	
	<!-- 업체 관리 사업장 교육 이수 정보 조회 -->
	<select id="selectOtsrConBsenWkplFcstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOtsrConBsenWkplFcstList */
		select 'Y' as chk_gb
		      ,a.oprr_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.trn_fcst_sn
		      ,a.trn_cl_cd
		      ,fn_get_cd('SH00000011', a.trn_cl_cd, 'NM', #{SESS_LANG}) as trn_cl_nm
		      ,to_char(to_timestamp(a.trn_fcst_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as trn_fcst_dt
		  from tb_sh_otsr_con_oprr_trn_fcst a
		 where a.oprr_id = #{oprr_id}
	</select>
	
	<!-- 업체 코드 키 중복체크 -->
	<select id="selectOtsrConBsenKeyPass" parameterType="sqlMap" resultType="string">
		/* selectOtsrConBsenKeyPass */
		select case when count(1) > 0 then 'N'
		            else 'Y'
		       end as pass_yn
		  from tb_sh_otsr_con_bsen 
		 where otsr_con_bsen_id = #{otsr_con_bsen_id}
	</select>
	
	<!-- 키 채번 -->
	<select id="selectOtsrConBsenkey" parameterType="sqlMap" resultType="string">
		/* selectOtsrConBsenkey */
		select 'OTSR_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(otsr_con_bsen_id,15) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_otsr_con_bsen
	</select>
	
	<!-- 키 채번 -->
	<select id="selectOtsrConBsenOprrkey" parameterType="sqlMap" resultType="string">
		/* selectOtsrConBsenOprrkey */
		select 'OPRR_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(oprr_id,15) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_otsr_con_oprr
	</select>
	
	<!-- 업체 등록 -->
	<insert id="insertOtsrConBsen" parameterType="sqlMap">
        /* insertOtsrConBsen */
        with upsert as (
		update tb_sh_otsr_con_bsen
		   set otsr_con_bsen_nm    		= #{otsr_con_bsen_nm}
		      ,rprv_nm    				= #{rprv_nm}
		      ,otsr_con_bsen_addr		= #{otsr_con_bsen_addr}
		      ,bspr_no          		= #{bspr_no}
		      ,otsr_con_bsen_tphn		= #{otsr_con_bsen_tphn}
		      ,otsr_con_bsen_dtrm_yn	= #{otsr_con_bsen_dtrm_yn}
		      ,usg_yn					= #{usg_yn}
		      ,upt_usr_id       			= #{username}
		      ,upt_dt            		= current_timestamp
		 where otsr_con_bsen_id = #{otsr_con_bsen_id} RETURNING *
		)
        insert into tb_sh_otsr_con_bsen (
        	   otsr_con_bsen_id
			  ,otsr_con_bsen_nm
			  ,rprv_nm
			  ,otsr_con_bsen_addr
			  ,bspr_no
			  ,otsr_con_bsen_tphn
			  ,otsr_con_bsen_dtrm_yn
			  ,usg_yn
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{otsr_con_bsen_id}
		      ,#{otsr_con_bsen_nm}
	 		  ,#{rprv_nm}
	 		  ,#{otsr_con_bsen_addr}
			  ,#{bspr_no}
			  ,#{otsr_con_bsen_tphn}
			  ,'Y'
			  ,#{usg_yn}
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 작업자정보 저장 -->
    <insert id="insertOtsrConBsenOprrInfo" parameterType="sqlMap">
        /* insertOtsrConBsenOprrInfo */
        with upsert as (
		update tb_sh_otsr_con_oprr
		   set oprr_nm    					= #{oprr_nm}
		      ,oprr_tphn    				= #{oprr_tphn}
		      ,oprn_cl_cd 				= #{oprn_cl_cd}
		      ,crtf_vld_end_dt 				= #{crtf_vld_end_dt}
		      ,buil_bsc_sft_trn_fcst_dt 	= #{buil_bsc_sft_trn_fcst_dt}
		      ,oprr_dtrm_yn 				= #{oprr_dtrm_yn}
		      ,oprr_del_yn 					= #{oprr_del_yn}
		      ,oprr_atfl_no 			= case when #{oprr_atfl_no}::text  = '' then null 
									   		   	   else #{oprr_atfl_no}::INTEGER 
							    	 	   	  end
		      ,upt_usr_id       				= #{username}
		      ,upt_dt            			= current_timestamp
		 where oprr_id = #{oprr_id} RETURNING *
		)
		insert into tb_sh_otsr_con_oprr (
			   oprr_id
			  ,otsr_con_bsen_id
			  ,oprr_nm
			  ,oprr_tphn
			  ,oprn_cl_cd
			  ,crtf_vld_end_dt
			  ,buil_bsc_sft_trn_fcst_dt
			  ,oprr_dtrm_yn
			  ,oprr_del_yn
			  ,oprr_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select (select 'OPRR_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(oprr_id,15) ::integer),0) + 1)::text, 4, '0') as key
		  		  from tb_sh_otsr_con_oprr)	
		      ,#{otsr_con_bsen_id}
		      ,#{oprr_nm}
		      ,#{oprr_tphn}
		      ,#{oprn_cl_cd}
		      ,#{crtf_vld_end_dt}
		      ,#{buil_bsc_sft_trn_fcst_dt}
		      ,'Y'
		      ,#{oprr_del_yn}
		      ,case when #{oprr_atfl_no}::text  = '' then null 
	   			    else #{oprr_atfl_no}::INTEGER 
   	 		    end
		      ,#{username}
		      ,current_timestamp
		      ,#{username}
		      ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 사업장 교육 이수 정보 저장 -->
    <insert id="insertOtsrConBsenWkplFcstInfo" parameterType="sqlMap">
        /* insertOtsrConBsenWkplFcstInfo */
        with upsert as (
		update tb_sh_otsr_con_oprr_trn_fcst
		   set trn_cl_cd    			= #{trn_cl_cd}
		      ,trn_fcst_dt    				= #{trn_fcst_dt}
		      ,upt_usr_id       				= #{username}
		      ,upt_dt            			= current_timestamp
		 where oprr_id = #{oprr_id}
		   and wkpl_id = #{wkpl_id}
		   and trn_fcst_sn = #{trn_fcst_sn}::numeric RETURNING *
		)
		insert into tb_sh_otsr_con_oprr_trn_fcst (
			   oprr_id
			  ,wkpl_id
			  ,trn_fcst_sn
			  ,trn_cl_cd
			  ,trn_fcst_dt
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{oprr_id}
		      ,#{wkpl_id}
		      ,(select coalesce(max(trn_fcst_sn ::integer),0) + 1 as key
		          from tb_sh_otsr_con_oprr_trn_fcst
		         where wkpl_id = #{wkpl_id}
		           and oprr_id = #{oprr_id}
		       )
		      ,#{trn_cl_cd}
		      ,#{trn_fcst_dt}
		      ,#{username}
		      ,current_timestamp
		      ,#{username}
		      ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 작업자 정보 삭제 -->
    <delete id="deleteOtsrConBsenOprrInfo" parameterType="sqlMap">
        /* deleteOtsrConBsenOprrInfo */
        delete 
          from tb_sh_otsr_con_oprr
		 where oprr_id = #{oprr_id}
    </delete>
        
    <!-- 사업장 교육 이수 정보 삭제 -->
    <delete id="deleteOtsrConBsenWkplFcstInfo" parameterType="sqlMap">
        /* deleteOtsrConBsenWkplFcstInfo */
        delete 
          from tb_sh_otsr_con_oprr_trn_fcst
		 where oprr_id = #{oprr_id}
		   and wkpl_id = #{wkpl_id}
		   and trn_fcst_sn = #{trn_fcst_sn}::numeric
    </delete>
    
    <!-- 공사작업허가 목록 조회 -->
	<select id="selectConOprnPrmsList" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsList  */
		select a.con_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(a.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,a.con_nm
		      ,b.con_prms_id
		      ,b.ntsg_txt
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,b.con_oprn_wkpl_loc_id 
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) || ' ~ ' || substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_dt
		      ,a.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,a.otsr_con_bsen_id
		      ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,(select count(1) as cnt
		          from tb_sh_otsr_con_bsen c
		              ,tb_sh_otsr_con_oprr d
		         where c.otsr_con_bsen_id = d.otsr_con_bsen_id
		           and c.otsr_con_bsen_id = a.otsr_con_bsen_id 
		           and d.oprr_del_yn ='N' 
		       ) as oprr_cnt
		      ,b.con_req_prst_cd
		      ,fn_get_cd('SH00000042', b.con_req_prst_cd, 'NM', #{SESS_LANG}) as con_req_prst_nm
		      ,a.con_rspn_org_cd 
		      ,(select case when #{SESS_LANG} = 'KO' then d.dept_ko_nm
		                    else d.dept_en_nm
		               end as dept_nm
		          from tb_co_dept d
		         where d.dept_cd = a.con_rspn_org_cd
		       ) as con_rspn_org_nm
		      ,a.upt_usr_id 
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
			  ,b.oprn_warr_out_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.oprn_warr_out_usr_id
			   ) as oprn_warr_out_usr_nm
			  ,to_char(b.oprn_warr_out_dttm, 'YYYY-MM-DD') as oprn_warr_out_dttm
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		 where a.con_id = b.con_id 
		   and (b.del_yn = 'N' or b.del_yn is null or b.del_yn = '')
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = a.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='wkpl_id != null and wkpl_id != ""'>
		   and a.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='con_nm != null and con_nm != ""'>
		   and a.con_nm like concat('%', rtrim(ltrim(#{con_nm})), '%')
		 </if>
		 <if test='con_oprn_wkpl_loc_id != null and con_oprn_wkpl_loc_id != ""'>
		   and b.con_oprn_wkpl_loc_id = #{con_oprn_wkpl_loc_id}
		 </if>
		 <if test='con_rspn_org_cd != null and con_rspn_org_cd != ""'>
		   and a.con_rspn_org_cd = #{con_rspn_org_cd}
		 </if>
		 <if test='con_rq_usr_id != null and con_rq_usr_id != ""'>
		   and a.con_rq_usr_id = #{con_rq_usr_id}
		 </if>
		 <if test='con_req_prst_cd != null and con_req_prst_cd != ""'>
		   and b.con_req_prst_cd = #{con_req_prst_cd}
		 </if>
		 <if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
		   and b.con_dt between replace(#{sDate},'-','') and replace(#{eDate},'-','')
		 </if>
		 order by cmpy_nm, wkpl_nm, a.con_id desc, b.con_prms_id desc
	</select>
    
    <!-- 공사작업허가 미실시 사유 저장 -->
	<update id="updateConOprnUndo" parameterType="sqlMap">
			/* updateConOprnUndo */
    		update tb_sh_con_oprn_prms_req
   			   set
    		       ntsg_txt = #{ntsg_txt}
    		      ,con_req_prst_cd = 'S09'
    		 where
    		       con_id = #{con_id}
    		   and con_prms_id = #{con_prms_id}
    </update>
    
	<!-- 공사작업허가 기본정보 조회 -->
	<select id="selectConOprnPrmsDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsDtl  */
		select a.con_id
			  ,(select z.cmpy_cd
			      from tb_sh_wkpl z
			     where z.wkpl_id = a.wkpl_id) as cmpy_cd
			  ,(select fn_get_cd('CO00000009', z.cmpy_cd, 'NM', #{SESS_LANG})
			      from tb_sh_wkpl z
			     where z.wkpl_id = a.wkpl_id) as cmpy_nm
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,to_char(to_timestamp(a.con_bgn_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_bgn_dt
		      ,to_char(to_timestamp(a.con_end_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_end_dt
		      ,'' as con_range_dt
		      ,a.wekd_con_yn
		      ,a.wknd_con_yn
		      ,a.nght_con_yn
		      ,a.con_rspn_org_cd
		      ,case when #{SESS_LANG} = 'KO' then a.kor_con_rspn_org_nm
		            else a.engl_con_rspn_org_nm
		       end as con_rspn_org_nm
		      ,a.con_nm
		      ,a.ugnc_con_yn
		      ,a.otsr_con_bsen_id
		      ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,a.otsr_con_bsen_pric_nm
		      ,a.otsr_con_bsen_pric_tphn
		      ,a.con_txt
		      ,a.oprn_plan_atfl_no
		  from tb_sh_con_oprn_prms_plan a
		 where a.con_id = #{con_id}
	</select>
	
	<!-- 공사작업허가 허가정보 조회 -->
	<select id="selectConOprnPrmsReqDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsReqDtl  */
		select b.con_id
		      ,b.con_prms_id
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_dt
		      ,substring(b.con_bgn_hm,0,3) as con_bgn_hm_h
		      ,substring(b.con_bgn_hm,3,2) as con_bgn_hm_s
		      ,substring(b.con_end_hm,0,3) as con_end_hm_h
		      ,substring(b.con_end_hm,3,2) as con_end_hm_s
		      ,substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) as con_bgn_hm
		      ,substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_end_hm
		      ,b.wekd_con_yn
		      ,b.wknd_con_yn
		      ,b.nght_con_yn
		      ,b.psm_tgt_yn
		      ,b.con_oprn_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		              ,tb_sh_con_oprn_prms_plan p
		         where p.con_id = b.con_id 
		           and l.wkpl_id = p.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,b.con_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_supe_usr_id
			   ) as con_supe_usr_nm
		      ,b.con_sft_rspn_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_sft_rspn_usr_id
			   ) as con_sft_rspn_usr_nm
		      ,b.con_oprn_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_oprn_supe_usr_id
			   ) as con_oprn_supe_usr_nm
		      ,b.con_oprn_txt
		      ,b.oth_prct_txt
		      ,b.con_req_atfl_no
		      ,b.con_req_prst_cd
		      ,b.con_req_aprv_no   
		      ,b.crt_usr_id
		  from tb_sh_con_oprn_prms_req b
		 where b.con_prms_id = #{con_prms_id}
	</select>
	
	<!-- 공사작업허가 작업종류 조회 -->
	<select id="selectConOprnPrmsOprn" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprn  */
		select max(a.h_yn) as h_yn
		      ,max(a.g_yn) as g_yn
		      ,max(a.m_yn) as m_yn
		      ,max(a.j_yn) as j_yn
		      ,max(a.u_yn) as u_yn
		      ,max(a.v_yn) as v_yn
		      ,max(a.n_yn) as n_yn
		      ,max(a.con_prms_id) as con_prms_id
		  from (select case when a.con_oprn_type_cd = 'WCD01' then 'Y' else 'N' end as h_yn
				      ,case when a.con_oprn_type_cd = 'WCD02' then 'Y' else 'N' end as g_yn
				      ,case when a.con_oprn_type_cd = 'WCD03' then 'Y' else 'N' end as m_yn
				      ,case when a.con_oprn_type_cd = 'WCD04' then 'Y' else 'N' end as j_yn
				      ,case when a.con_oprn_type_cd = 'WCD05' then 'Y' else 'N' end as u_yn
				      ,case when a.con_oprn_type_cd = 'WCD06' then 'Y' else 'N' end as v_yn
				      ,case when a.con_oprn_type_cd = 'WCD07' then 'Y' else 'N' end as n_yn
				      ,a.con_prms_id
				  from tb_sh_con_oprn_prms_oprn a
				 where a.con_prms_id = #{con_prms_id}
			   ) a
	</select>
	
	<!-- 공사작업허가 작업준수사항 조회(공사완료시) -->
	<select id="selectConOprnPrmsObeyCmpl" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsObeyCmpl  */
		select 'Y' as chk_yn
		      ,a.con_prms_id
		      ,a.wkpl_id
		      ,a.wkpl_chec_cl_cd
		      ,a.wkpl_chec_dtl_cl_cd
		      ,fn_get_cd('ST00000013', a.wkpl_chec_dtl_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_dtl_cl_nm
		      ,fn_get_cd('ST00000012', a.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
		      ,a.wkpl_chec_txt
		      ,a.wkpl_chec_sn
		      ,a.wkpl_chec_in_cl_cd      
		      ,a.mand_chec_yn
		      ,case when (select r.con_req_prst_cd
					        from tb_sh_con_oprn_prms_req r
					       where r.con_prms_id = #{con_prms_id}
					     ) is not null then (select r.con_req_prst_cd
										       from tb_sh_con_oprn_prms_req r
										      where r.con_prms_id = #{con_prms_id}
										    )
 				    else 'S01'
			   end as con_req_prst_cd
		  from tb_sh_con_oprn_prms_obey a
		 where a.con_prms_id = #{con_prms_id}
		   and a.wkpl_id = #{wkpl_id}
		 order by a.wkpl_id, a.wkpl_chec_cl_cd, a.wkpl_chec_dtl_cl_cd, a.wkpl_chec_sn
	</select>
	
	<!-- 공사작업허가 작업준수사항 조회 -->
	<select id="selectConOprnPrmsObey" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsObey  */
		select a.wkpl_id
		<choose>
			<when test='con_prms_id != null and con_prms_id != ""'>
			  ,(select case when count(1) > 0 then TRUE else FALSE end as chk_yn
		          from tb_sh_con_oprn_prms_obey b
		         where b.wkpl_id = a.wkpl_id 
		           and b.wkpl_chec_cl_cd = a.wkpl_chec_cl_cd 
		           and b.wkpl_chec_dtl_cl_cd = a.wkpl_chec_dtl_cl_cd 
		           and b.wkpl_chec_sn = a.wkpl_chec_sn
		           and b.con_prms_id = a.con_prms_id
		       ) as chk_yn
			</when>
			<otherwise>
			  ,TRUE as chk_yn
			</otherwise>
		</choose>
		      ,a.wkpl_chec_cl_cd
		      ,a.wkpl_chec_dtl_cl_cd
		      ,a.wkpl_chec_dtl_cl_nm
		      ,a.wkpl_chec_cl_nm
		      ,a.wkpl_chec_txt
		      ,a.wkpl_chec_sn
		      ,a.wkpl_chec_in_cl_cd      
		      ,a.mand_chec_yn
		      ,case when (select r.con_req_prst_cd
					        from tb_sh_con_oprn_prms_req r
					       where r.con_prms_id = #{con_prms_id}
					     ) is not null then (select r.con_req_prst_cd
										       from tb_sh_con_oprn_prms_req r
										      where r.con_prms_id = #{con_prms_id}
										    )
 				    else 'S01'
			   end as con_req_prst_cd
		  from (select a.wkpl_id
				      ,a.wkpl_chec_cl_cd
				      ,a.wkpl_chec_dtl_cl_cd
				      ,fn_get_cd('ST00000013', a.wkpl_chec_dtl_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_dtl_cl_nm
				      ,fn_get_cd('ST00000012', a.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
				      ,a.wkpl_chec_txt
				      ,a.wkpl_chec_sn
				      ,a.wkpl_chec_in_cl_cd      
				      ,a.mand_chec_yn
				      ,#{con_prms_id} as con_prms_id
				  from tb_sh_wkpl_chec a
				 where a.wkpl_id = 'S00'
				   and a.wkpl_chec_cl_cd = 'WC01'
				   and a.usg_yn = 'Y'
				 <if test='wkpl_chec_dtl_cl_cd != null and wkpl_chec_dtl_cl_cd != ""'>
				   and a.wkpl_chec_dtl_cl_cd in (${wkpl_chec_dtl_cl_cd})
				 </if>
				 union
				select b.wkpl_id 
				      ,b.wkpl_chec_cl_cd
				      ,b.wkpl_chec_dtl_cl_cd
				      ,fn_get_cd('ST00000013', b.wkpl_chec_dtl_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_dtl_cl_nm
				      ,fn_get_cd('ST00000012', b.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
				      ,b.wkpl_chec_txt
				      ,b.wkpl_chec_sn
				      ,b.wkpl_chec_in_cl_cd
				      ,b.mand_chec_yn
				      ,b.con_prms_id
				  from tb_sh_con_oprn_prms_obey b
				 where b.con_prms_id = #{con_prms_id}
				   and b.wkpl_id = 'S00'
				 <if test='wkpl_chec_dtl_cl_cd != null and wkpl_chec_dtl_cl_cd != ""'>
				   and b.wkpl_chec_dtl_cl_cd in (${wkpl_chec_dtl_cl_cd})
				 </if>
			   ) a
		 order by a.wkpl_id, a.wkpl_chec_cl_cd, a.wkpl_chec_dtl_cl_cd, a.wkpl_chec_sn
	</select>
	
	<!-- 공사작업허가 작업인원 조회 -->
	<select id="selectConOprnPrmsOprr" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprr  */
		select a.oprr_id
		      ,a.oprr_nm
		      ,a.con_prms_id
		      ,(select b.oprn_cl_cd
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_cd
		      ,(select fn_get_cd('SH00000010', b.oprn_cl_cd, 'NM', #{SESS_LANG}) as oprn_cl_nm
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_nm
		  from (select a.oprr_id
				      ,a.oprr_nm
				      ,#{con_prms_id} as con_prms_id
				  from tb_sh_otsr_con_oprr a
				 where a.oprr_del_yn = 'N'
				   and a.otsr_con_bsen_id = #{otsr_con_bsen_id}
				 union
				select b.oprr_id 
				      ,(select r.oprr_nm
				          from tb_sh_otsr_con_oprr r
				         where r.oprr_id = b.oprr_id
				       ) as oprr_nm
				      ,b.con_prms_id 
				  from tb_sh_con_oprn_prms_oprr b
				 where b.con_prms_id = #{con_prms_id}
			   ) a
		 order by a.oprr_nm
	</select>
	
	<!-- 공사작업허가 저장작업인원 조회 -->
	<select id="selectConOprnPrmsOprrSave" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprrSave  */
		select a.oprr_id
		      ,(select r.oprr_nm
		          from tb_sh_otsr_con_oprr r
		         where r.oprr_id = a.oprr_id
		       ) as oprr_nm
		      ,a.con_prms_id
		      ,(select b.oprn_cl_cd
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_cd
		      ,(select fn_get_cd('SH00000010', b.oprn_cl_cd, 'NM', #{SESS_LANG}) as oprn_cl_nm
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_nm
		  from tb_sh_con_oprn_prms_oprr a
		 where a.con_prms_id = #{con_prms_id}
		 order by oprr_nm
	</select>
	
	<!-- 공사작업허가 키 채번 -->
	<select id="selectConOprnPrmsKey" parameterType="sqlMap" resultType="string">
		/* selectConOprnPrmsKey */
		select 'PLAN_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(con_id,15) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_con_oprn_prms_plan
	</select>
	
	<!-- 공사작업허가 허가정보 키 채번 -->
	<select id="selectConOprnPrmsReqKey" parameterType="sqlMap" resultType="string">
		/* selectConOprnPrmsReqKey */
		select 'REQ_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(con_prms_id,14) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_con_oprn_prms_req
	</select>
	
	<!-- 공사작업허가 기본정보 저장 -->
	<insert id="insertConOprnPrmsDtl" parameterType="sqlMap">
        /* insertConOprnPrmsDtl */
        with upsert as (
		update tb_sh_con_oprn_prms_plan
		   set wkpl_id    			= #{wkpl_id}
		      ,con_rq_usr_id    	= #{con_rq_usr_id}
		      ,con_bgn_dt				= #{con_bgn_dt}
		      ,con_end_dt          		= #{con_end_dt}
		      ,wekd_con_yn				= #{wekd_con_yn}
		      ,wknd_con_yn				= #{wknd_con_yn}
		      ,nght_con_yn				= #{nght_con_yn}
		      ,con_rspn_org_cd			= #{con_rspn_org_cd}
		      ,kor_con_rspn_org_nm		= (select dept_ko_nm
		         							 from tb_co_dept
		         							where dept_cd = #{con_rspn_org_cd}
		                                  )
		      ,engl_con_rspn_org_nm		= (select dept_en_nm
		         							 from tb_co_dept
		         							where dept_cd = #{con_rspn_org_cd}
		                                  )
		      ,con_nm					= #{con_nm}
		      ,ugnc_con_yn				= #{ugnc_con_yn}
		      ,otsr_con_bsen_id		= #{otsr_con_bsen_id}
		      ,otsr_con_bsen_pric_nm	= #{otsr_con_bsen_pric_nm}
		      ,otsr_con_bsen_pric_tphn	= #{otsr_con_bsen_pric_tphn}
		      ,con_txt					= #{con_txt}
		      ,oprn_plan_atfl_no	= case when #{oprn_plan_atfl_no}::text  = '' then null 
								   			   else #{oprn_plan_atfl_no}::INTEGER 
						    	 		   end
		      ,upt_usr_id       			= #{username}
		      ,upt_dt            		= current_timestamp
		 where con_id = #{con_id} RETURNING *
		)
        insert into tb_sh_con_oprn_prms_plan (
        	   con_id
			  ,wkpl_id
			  ,con_rq_usr_id
			  ,con_bgn_dt
			  ,con_end_dt
			  ,wekd_con_yn
			  ,wknd_con_yn
			  ,nght_con_yn
			  ,con_rspn_org_cd
			  ,kor_con_rspn_org_nm
			  ,engl_con_rspn_org_nm
			  ,con_nm
			  ,ugnc_con_yn
			  ,otsr_con_bsen_id
			  ,otsr_con_bsen_pric_nm
			  ,otsr_con_bsen_pric_tphn
			  ,con_txt
			  ,oprn_plan_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_id}
		      ,#{wkpl_id}
	 		  ,#{con_rq_usr_id}
	 		  ,#{con_bgn_dt}
			  ,#{con_end_dt}
			  ,#{wekd_con_yn}
			  ,#{wknd_con_yn}
			  ,#{nght_con_yn}
			  ,#{con_rspn_org_cd}
			  ,(select dept_ko_nm
				  from tb_co_dept
				 where dept_cd = #{con_rspn_org_cd}
               )
			  ,(select dept_en_nm
				  from tb_co_dept
				 where dept_cd = #{con_rspn_org_cd}
               )
			  ,#{con_nm}
			  ,#{ugnc_con_yn}
			  ,#{otsr_con_bsen_id}
			  ,#{otsr_con_bsen_pric_nm}
			  ,#{otsr_con_bsen_pric_tphn}
			  ,#{con_txt}
			  ,case when #{oprn_plan_atfl_no}::text  = '' then null 
	   			    else #{oprn_plan_atfl_no}::INTEGER 
   	 		   end
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 공사작업허가 허가정보 저장 -->
	<insert id="insertConOprnPrmsReqDtl" parameterType="sqlMap">
        /* insertConOprnPrmsReqDtl */
        with upsert as (
		update tb_sh_con_oprn_prms_req
		   set con_dt    				= #{con_dt}
		      ,con_bgn_hm    			= #{con_bgn_hm}
		      ,con_end_hm				= #{con_end_hm}
		      ,wekd_con_yn          	= #{wekd_con_yn}
		      ,wknd_con_yn				= #{wknd_con_yn}
		      ,nght_con_yn				= #{nght_con_yn}
		      ,psm_tgt_yn				= #{psm_tgt_yn}
		      ,con_oprn_wkpl_loc_id	= #{con_oprn_wkpl_loc_id}
		      ,con_oprn_dtl_loc_nm      = #{con_oprn_dtl_loc_nm}
		      ,con_supe_usr_id		= #{con_supe_usr_id}
		      ,con_sft_rspn_usr_id		= #{con_sft_rspn_usr_id}
		      ,con_oprn_supe_usr_id		= #{con_oprn_supe_usr_id}
		      ,con_oprn_txt				= #{con_oprn_txt}
		      ,oth_prct_txt				= #{oth_prct_txt}
		      ,con_req_prst_cd	= #{con_req_prst_cd}
		      ,con_req_atfl_no		= case when #{con_req_atfl_no}::text  = '' then null 
								   			   else #{con_req_atfl_no}::INTEGER 
						    	 		   end
		      ,upt_usr_id       			= #{username}
		      ,upt_dt            		= current_timestamp
		 where con_prms_id = #{con_prms_id} RETURNING *
		)
        insert into tb_sh_con_oprn_prms_req (
        	   con_prms_id
			  ,con_id
			  ,con_dt
			  ,con_bgn_hm
			  ,con_end_hm
			  ,wekd_con_yn
			  ,wknd_con_yn
			  ,nght_con_yn
			  ,psm_tgt_yn
			  ,con_oprn_wkpl_loc_id
			  ,con_oprn_dtl_loc_nm
			  ,con_supe_usr_id
			  ,con_sft_rspn_usr_id
			  ,con_oprn_supe_usr_id
			  ,con_oprn_txt
			  ,oth_prct_txt
			  ,con_req_atfl_no
			  ,con_req_prst_cd
			  ,del_yn
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_prms_id}
		      ,#{con_id}
	 		  ,#{con_dt}
	 		  ,#{con_bgn_hm}
			  ,#{con_end_hm}
			  ,#{wekd_con_yn}
			  ,#{wknd_con_yn}
			  ,#{nght_con_yn}
			  ,#{psm_tgt_yn}
			  ,#{con_oprn_wkpl_loc_id}
			  ,#{con_oprn_dtl_loc_nm}
			  ,#{con_supe_usr_id}
			  ,#{con_sft_rspn_usr_id}
			  ,#{con_oprn_supe_usr_id}
			  ,#{con_oprn_txt}
			  ,#{oth_prct_txt}
			  ,case when #{con_req_atfl_no}::text  = '' then null 
	   			    else #{con_req_atfl_no}::INTEGER 
   	 		   end
   	 		  ,#{con_req_prst_cd}
   	 		  ,'N'
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 공사작업허가 작업정보 삭제 -->
    <delete id="deleteConOprnPrmsOprn" parameterType="sqlMap">
        /* deleteConOprnPrmsOprn */
        delete 
          from tb_sh_con_oprn_prms_oprn
		 where con_prms_id = #{con_prms_id}
    </delete>
	
	<!-- 공사작업허가 작업준수사항 삭제 -->
    <delete id="deleteConOprnPrmsObey" parameterType="sqlMap">
        /* deleteConOprnPrmsObey */
        delete 
          from tb_sh_con_oprn_prms_obey
		 where con_prms_id = #{con_prms_id}
    </delete>
    
    <!-- 공사작업허가 작업인원 삭제 -->
    <delete id="deleteConOprnPrmsOprr" parameterType="sqlMap">
        /* deleteConOprnPrmsOprr */
        delete 
          from tb_sh_con_oprn_prms_oprr
		 where con_prms_id = #{con_prms_id}
    </delete>
    
    <!-- 공사작업허가 작업정보 저장 -->
	<insert id="insertConOprnPrmsOprn" parameterType="sqlMap">
        /* insertConOprnPrmsOprn */
        insert into tb_sh_con_oprn_prms_oprn (
        	 con_prms_id
        	,con_oprn_type_cd
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
	 		 #{con_prms_id}
	 		,#{con_oprn_type_cd}
			,#{username}
		    ,current_timestamp
		    ,#{username}
		    ,current_timestamp
		)
    </insert>
    
    <!-- 공사작업허가 작업준수사항 저장 -->
	<insert id="insertConOprnPrmsObey" parameterType="sqlMap">
        /* insertConOprnPrmsObey */
        insert into tb_sh_con_oprn_prms_obey (
        	 con_prms_id
        	,wkpl_id
        	,wkpl_chec_cl_cd
        	,wkpl_chec_dtl_cl_cd
        	,wkpl_chec_sn
        	,wkpl_chec_in_cl_cd
			,wkpl_chec_txt
			,mand_chec_yn
			,usg_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
	 		 #{con_prms_id}
	 		,#{wkpl_id}
	 		,#{wkpl_chec_cl_cd}
	 		,#{wkpl_chec_dtl_cl_cd}
			,#{wkpl_chec_sn}::numeric
			,#{wkpl_chec_in_cl_cd}
			,#{wkpl_chec_txt}
			,#{mand_chec_yn}
			,#{usg_yn}
			,#{username}
		    ,current_timestamp
		    ,#{username}
		    ,current_timestamp
		)
    </insert>
    
    <!-- 공사작업허가 작업인원 저장 -->
	<insert id="insertConOprnPrmsOprr" parameterType="sqlMap">
        /* insertConOprnPrmsOprr */
        insert into tb_sh_con_oprn_prms_oprr (
        	 con_prms_id
        	,oprr_id
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
	 		 #{con_prms_id}
	 		,#{oprr_id}
			,#{username}
		    ,current_timestamp
		    ,#{username}
		    ,current_timestamp
		)
    </insert>
    
    <!-- 공사작업허가 삭제 -->
    <update id="updateConOprnPrmsReqDel" parameterType="sqlMap">
        /* updateConOprnPrmsReqDel */
        update tb_sh_con_oprn_prms_req
		   set del_yn   = 'Y'
		      ,upt_usr_id  = #{username}
		      ,upt_dt = current_timestamp
		 where con_prms_id = #{con_prms_id}
    </update>
    
    <!-- 공사작업허가 허가서출력 -->
    <update id="updateConOprnPrmsReqPrint" parameterType="sqlMap">
        /* updateConOprnPrmsReqPrint */
        update tb_sh_con_oprn_prms_req
		   set oprn_warr_out_usr_id = #{username}
		      ,oprn_warr_out_dttm 		 = current_timestamp
		      ,con_req_prst_cd = 'S04'
		      ,upt_usr_id 					 = #{username}
		      ,upt_dt 				 = current_timestamp
		 where con_prms_id = #{con_prms_id}
    </update>
    
    <!-- 공사작업허가 당일공사 작업인원 조회 -->
	<select id="selectConOprnPrmsOprrCurrent" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprrCurrent  */
		select c.con_prms_id 
		      ,c.oprr_id 
		      ,a.con_id 
		      ,a.wkpl_id 
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.con_nm 
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm 
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
			  ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,(select r.oprr_nm
		          from tb_sh_otsr_con_oprr r
		         where r.oprr_id = c.oprr_id
		       ) as oprr_nm
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		      ,tb_sh_con_oprn_prms_oprr c
		 where a.con_id = b.con_id
		   and b.con_prms_id = c.con_prms_id 
		   and b.con_dt = to_char(current_timestamp, 'YYYYMMDD')
		 order by c.con_prms_id, c.oprr_id
	</select>
	
	<!-- 공사작업허가 이전공사 불러오기 조회 -->
	<select id="selectConOprnPrmsBeReqData" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsBeReqData  */
		select a.wkpl_id 
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.con_nm
		      ,a.con_id 
		      ,b.con_prms_id
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) || ' ~ ' || substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_dt
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm 
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
			  ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		 where a.con_id = b.con_id
		   and b.del_yn != 'Y'
		   and a.con_id = #{con_id}
		 order by b.con_prms_id
	</select>
	
	<!-- 공사작업완료 목록 조회 -->
	<select id="selectConOprnPrmsCmplList" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplList  */
		select a.con_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(a.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,a.con_nm
		      ,b.con_prms_id
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,b.con_oprn_wkpl_loc_id 
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) || ' ~ ' || substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_dt
		      ,a.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,a.otsr_con_bsen_id
		      ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,(select count(1) as cnt
		          from tb_sh_otsr_con_bsen c
		              ,tb_sh_otsr_con_oprr d
		         where c.otsr_con_bsen_id = d.otsr_con_bsen_id
		           and c.otsr_con_bsen_id = a.otsr_con_bsen_id 
		           and d.oprr_del_yn ='N' 
		       ) as oprr_cnt
		      ,b.con_req_prst_cd
		      ,fn_get_cd('SH00000042', b.con_req_prst_cd, 'NM', #{SESS_LANG}) as con_req_prst_nm
		      ,a.con_rspn_org_cd 
		      ,(select case when #{SESS_LANG} = 'KO' then d.dept_ko_nm
		                    else d.dept_en_nm
		               end as dept_nm
		          from tb_co_dept d
		         where d.dept_cd = a.con_rspn_org_cd
		       ) as con_rspn_org_nm
		      ,a.upt_usr_id 
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
			  ,b.oprn_warr_out_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.oprn_warr_out_usr_id
			   ) as oprn_warr_out_usr_nm
			  ,to_char(b.oprn_warr_out_dttm, 'YYYY-MM-DD') as oprn_warr_out_dttm
			  ,case when b.oprn_warr_out_usr_id is not null or b.oprn_warr_out_usr_id != '' then 'Y'
			        else 'N'
			   end print_yn
			  ,b.con_req_aprv_no
			  ,coalesce(c.con_cmpy_prst_cd, 'S01') as con_cmpy_prst_cd
			  ,fn_get_cd('SH00000051', coalesce(c.con_cmpy_prst_cd, 'S01'), 'NM', #{SESS_LANG}) as con_cmpy_prst_nm
			  ,case when c.con_cmpy_atfl_no is null then 'N'
			        else 'Y'
			   end as atfl_yn
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		  left outer join tb_sh_con_oprn_cmpy c
		    on b.con_prms_id = c.con_prms_id
		 where a.con_id = b.con_id
		   and b.con_req_prst_cd not in ('S01', 'S02', 'S09')
		   and (b.del_yn = 'N' or b.del_yn is null or b.del_yn = '')
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = a.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='wkpl_id != null and wkpl_id != ""'>
		   and a.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='con_nm != null and con_nm != ""'>
		   and a.con_nm like concat('%', rtrim(ltrim(#{con_nm})), '%')
		 </if>
		 <if test='con_oprn_wkpl_loc_id != null and con_oprn_wkpl_loc_id != ""'>
		   and b.con_oprn_wkpl_loc_id = #{con_oprn_wkpl_loc_id}
		 </if>
		 <if test='con_rspn_org_cd != null and con_rspn_org_cd != ""'>
		   and a.con_rspn_org_cd = #{con_rspn_org_cd}
		 </if>
		 <if test='con_rq_usr_id != null and con_rq_usr_id != ""'>
		   and a.con_rq_usr_id = #{con_rq_usr_id}
		 </if>
		 <if test='con_req_prst_cd != null and con_req_prst_cd != ""'>
		   and b.con_req_prst_cd = #{con_req_prst_cd}
		 </if>
		 <if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
		   and b.con_dt between replace(#{sDate},'-','') and replace(#{eDate},'-','')
		 </if>
		 order by a.con_id , b.con_prms_id 
	</select>
	
	<!-- 공사작업완료 정보 조회 -->
	<select id="selectConOprnPrmsCmplData" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplData  */
		select a.con_prms_id
		      ,a.con_cmpy_atfl_no
		      ,a.con_cmpy_prst_cd
		      ,a.con_oprn_cmpy_aprv_no
		  from tb_sh_con_oprn_cmpy a
		 where a.con_prms_id = #{con_prms_id}
	</select>
	
	<!-- 공사작업완료 저장 -->
	<insert id="insertConOprnPrmsCmplData" parameterType="sqlMap">
        /* insertConOprnPrmsCmplData */
        with upsert as (
		update tb_sh_con_oprn_cmpy
		   set con_oprn_cmpy_aprv_no = #{con_oprn_cmpy_aprv_no}
		      ,con_cmpy_prst_cd	 = #{con_cmpy_prst_cd}
		      ,con_cmpy_atfl_no	 = case when #{con_cmpy_atfl_no}::text  = '' then null 
								   	 		    else #{con_cmpy_atfl_no}::INTEGER 
						    	 		   end
		      ,upt_usr_id       			 = #{username}
		      ,upt_dt            		 = current_timestamp
		 where con_prms_id = #{con_prms_id} RETURNING *
		)
        insert into tb_sh_con_oprn_cmpy (
        	   con_prms_id
			  ,con_oprn_cmpy_aprv_no
			  ,con_cmpy_atfl_no
			  ,con_cmpy_prst_cd
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_prms_id}
			  ,#{con_oprn_cmpy_aprv_no}
			  ,case when #{con_cmpy_atfl_no}::text  = '' then null 
	   			    else #{con_cmpy_atfl_no}::INTEGER 
   	 		   end
   	 		  ,#{con_cmpy_prst_cd}
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 공사작업완료 점검결과 조회 -->
	<select id="selectConOprnPrmsCmplChk" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplChk  */
		select a.con_prms_id
		      ,a.wkpl_id
		      ,a.wkpl_chec_cl_cd
		      ,fn_get_cd('ST00000012', a.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
		      ,a.wkpl_chec_sn
		      ,a.con_chk_txt
		      ,a.con_chk_prst_cd
		      ,fn_get_cd('SH00000047', a.con_chk_prst_cd, 'NM', #{SESS_LANG}) as con_chk_prst_nm
		      ,to_char(a.con_chk_dttm, 'YYYY-MM-DD HH24:MI') as con_chk_dttm
		      ,a.con_chk_atfl_no
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id 
			   ) as lsch_nm
			  ,a.upt_usr_id
		  from tb_sh_con_oprn_prms_chk a
		 where a.con_prms_id = #{con_prms_id}
	</select>
	
	<!-- 공사작업완료 점검결과 상세 조회 -->
	<select id="selectConOprnPrmsCmplChkDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplChkDtl  */
		select a.con_prms_id
		      ,a.wkpl_id 
		      ,a.wkpl_chec_cl_cd
		      ,fn_get_cd('ST00000012', a.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
		      ,a.wkpl_chec_dtl_cl_cd
		      ,fn_get_cd('ST00000013', a.wkpl_chec_dtl_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_dtl_cl_nm
		      ,a.wkpl_chec_sn
		      ,a.wkpl_chec_in_cl_cd
		      ,a.wkpl_chec_txt
		      ,a.mand_chec_yn
		      ,case when a.wkpl_chec_in_cl_cd = 'IN02' then fn_get_cd('SH00000050', a.chec_vl, 'NM', #{SESS_LANG})
		            else a.chec_vl
		       end as chec_vl
		  from tb_sh_con_oprn_prms_chec a
		      ,tb_sh_con_oprn_prms_chk b
		 where a.con_prms_id = b.con_prms_id 
		   and a.wkpl_id = b.wkpl_id 
		   and a.wkpl_chec_cl_cd = b.wkpl_chec_cl_cd
		   and a.con_prms_id = #{con_prms_id}
		   and a.wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
		 order by a.wkpl_chec_dtl_cl_cd, a.wkpl_chec_sn
	</select>
	
	<!-- 공사작업 권한 체크 -->
	<select id="selectConOprnPrmsAuthChk" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsAuthChk */
		select a.dept_yn
		      ,case when a.admin_yn = 'Y' then 'Y'
		      		when a.dept_yn = 'Y' then 'Y'
		      		else 'N'
		      	end as auth_chk
		  from (select (select case when count(1) > 0 then 'Y' else 'N' end
				          from tb_co_user_role u
				         where u.usr_id = #{sess_usr_id}
				           and u.role_no = 'RZZZZ'
				           and u.del_yn = 'N'
				       ) as admin_yn
		  			  ,(select case when count(1) > 0 then 'Y' else 'N' end dept_yn
				          from tb_co_user u
				         where u.usr_id = #{sess_usr_id}
				           and u.dept_cd = (select r.dept_cd 
				                              from tb_co_user r
				                             where r.usr_id = a.upt_usr_id 
				                           )
				       ) as dept_yn
				  from tb_sh_con_oprn_prms_plan a
				 where a.con_id = #{con_id}
			   ) a
	</select>
	
	<!-- 공사작업 점검 메인 상태 수정 -->
    <update id="updateConOprnPrmsMainStat" parameterType="sqlMap">
    	/* updateConOprnPrmsMainStat */
        update tb_sh_con_oprn_prms_req 
       	   set con_req_prst_cd = #{con_req_prst_cd}
	 		  ,upt_usr_id             = #{username}
		      ,upt_dt            = current_timestamp
		 where con_prms_id     = #{con_prms_id}
     </update>
     
    <!-- 공사작업 점검 메인 상태 수정(결재후처리) -->
    <update id="updateConOprnPrmsMainStatAprv" parameterType="sqlMap">
    	/* updateConOprnPrmsMainStatAprv */
        update tb_sh_con_oprn_prms_req 
       	   set con_req_prst_cd = #{con_req_prst_cd}
	 		  ,upt_usr_id             = #{username}
		      ,upt_dt            = current_timestamp
		 where con_prms_id     = #{con_prms_id}
     </update>
	
	<!-- 공사작업 모바일 메인 조회 -->
	<select id="selectConOprnPrmsMainMobile" parameterType="sqlMap" resultType="sqlMap">
		select coalesce(sum(a.be_tot_cnt), 0) as be_tot_cnt
			  ,coalesce(sum(a.be_cmpl_cnt), 0) as be_cmpl_cnt
			  ,coalesce(sum(a.ing_tot_cnt), 0) as ing_tot_cnt
			  ,coalesce(sum(a.ing_cmpl_cnt), 0) as ing_cmpl_cnt
			  ,coalesce(sum(a.af_tot_cnt), 0) as af_tot_cnt
			  ,coalesce(sum(a.af_cmpl_cnt), 0) as af_cmpl_cnt
			  ,coalesce(sum(a.be_cmpl_cnt), 0) || '/' || coalesce(sum(a.be_tot_cnt), 0) as be_cnt
			  ,coalesce(sum(a.ing_cmpl_cnt), 0) || '/' || coalesce(sum(a.ing_tot_cnt), 0) as ing_cnt
			  ,coalesce(sum(a.af_cmpl_cnt), 0) || '/' || coalesce(sum(a.af_tot_cnt), 0) as af_cnt
		  from (select a.con_prms_id
		  			  ,a.wkpl_id
		  			  ,b.con_id
				      ,b.con_prms_id
		  			  ,b.wkpl_id
		  			  ,b.con_dt
		  			  ,b.con_nm
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC02' then 1
		  					 else 0
		  				 end) as be_tot_cnt	-- 전체건수
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC02'
						 		  and a.con_chk_prst_cd = '30' then 1
		  					 else 0
		  				 end) as be_cmpl_cnt	-- 완료건수
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC03' then 1
		  					 else 0
		  				 end) as ing_tot_cnt	-- 전체건수
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC03'
						 		  and a.con_chk_prst_cd = '30' then 1
		  					 else 0
		  				end) as ing_cmpl_cnt -- 완료건수
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC04' then 1
		  					 else 0
		  				 end) as af_tot_cnt	-- 전체건수
		  			  ,(case when a.wkpl_chec_cl_cd = 'WC04'
						 		  and a.con_chk_prst_cd = '30' then 1
		  					 else 0
		  				 end) as af_cmpl_cnt -- 완료건수
				  from tb_sh_con_oprn_prms_chk a
				      ,(select scopr.con_id
				      		  ,scopr.con_prms_id
				      		  ,scopr.con_dt
				      		  ,scopp.wkpl_id
				      		  ,scopp.con_nm
				          from tb_sh_con_oprn_prms_req scopr
				          	  ,tb_sh_con_oprn_prms_plan scopp
				          	  ,tb_co_user tcu
				         where scopr.con_id = scopp.con_id
				 		   and scopr.con_dt = to_char(current_timestamp, 'YYYYMMDD')
						   and (scopr.del_yn = 'N' or scopr.del_yn is null or scopr.del_yn = '')
						   and tcu.usr_id = #{sess_user_id}
						   and (scopr.con_supe_usr_id = #{sess_user_id}
						   		or scopr.con_sft_rspn_usr_id = #{sess_user_id}
						   		or scopr.con_oprn_supe_usr_id = #{sess_user_id}
						   		or (case when exists (select role_no 
				   		 						 from tb_co_user_role tcur 
				   		 						where tcur.usr_id = #{sess_user_id}
				   		 						  and tcur.role_no ='R0005'
				   		 						  and tcur.usg_yn = 'Y'
				   		 						  and tcur.del_yn = 'N')
		 			  then (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = scopr.con_sft_rspn_usr_id
		                       and r.usg_yn = 'Y'
		                       ) = tcu.dept_cd else 1!=1 end ) 
						        or exists (select d.elc_rspn_usr_id
						      				 from tb_sh_wkpl_elc d
				                            where scopp.wkpl_id = d.wkpl_id
				                              and d.ag_yn = 'N'
				                              and d.elc_cl_cd in ('ELC01', 'ELC02', 'ELC04', 'ELC08')
				                              and d.elc_rspn_usr_id = #{sess_user_id}
				                          )
						       )
				       ) b
				 where a.con_prms_id = b.con_prms_id
				   and a.wkpl_id = 'S00'
				   and a.wkpl_chec_sn = 1
		  	   ) a
	</select>
	
	<!-- 공사점검 모바일 권한 체크 -->
	<select id="selectConOprnPrmsMobileAuthChk" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsMobileAuthChk  */
		select max(a.auth_yn) as auth_yn
		      ,max(a.dt_yn) as dt_yn
		  from (select case when a.con_supe_usr_id = #{sess_usr_id} or a.con_sft_rspn_usr_id = #{sess_usr_id} or a.con_oprn_supe_usr_id = #{sess_usr_id} then 'Y' else 'N' end auth_yn
				      ,case when a.con_dt = to_char(current_timestamp, 'YYYYMMDD') then 'Y' else 'N' end dt_yn
		          from tb_sh_con_oprn_prms_req a
		         where a.con_prms_id = #{con_prms_id}
		         union all
		        select max(a.auth_yn) as auth_yn
				      ,max(a.dt_yn) as dt_yn
				  from (select case when c.elc_rspn_usr_id = #{sess_usr_id} then 'Y' else 'N' end auth_yn
			                  ,case when b.con_dt = to_char(current_timestamp, 'YYYYMMDD') then 'Y' else 'N' end dt_yn
			                  ,con_prms_id
			              from tb_sh_con_oprn_prms_req b
			                  ,tb_sh_con_oprn_prms_plan a
			                  ,tb_sh_wkpl_elc c
			             where a.con_id = b.con_id 
			               and a.wkpl_id = c.wkpl_id 
			               and b.con_prms_id = #{con_prms_id}
			               and c.ag_yn = 'N'
			               and c.elc_cl_cd in ('ELC01', 'ELC02', 'ELC04', 'ELC08')
					   ) a
			   ) a
	</select>
	
	<!-- 공사점검 목록 모바일 조회 -->
	<select id="selectConOprnPrmsMobileList" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsMobileList  */
		select b.con_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,b.con_nm
		      ,b.con_prms_id
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,b.con_oprn_wkpl_loc_id 
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) || ' ~ ' || substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_dt
		      ,b.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,b.otsr_con_bsen_id
		      ,b.con_req_prst_cd
		      ,fn_get_cd('SH00000042', b.con_req_prst_cd, 'NM', #{SESS_LANG}) as con_req_prst_nm
		      ,b.con_rspn_org_cd 
		      ,(select case when #{SESS_LANG} = 'KO' then d.dept_ko_nm
		                    else d.dept_en_nm
		                end as dept_nm
		          from tb_co_dept d
		         where d.dept_cd = b.con_rspn_org_cd
		       ) as con_rspn_org_nm
		      ,a.upt_usr_id 
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
			  ,b.oprn_warr_out_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				        end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.oprn_warr_out_usr_id
			   ) as oprn_warr_out_usr_nm
			  ,to_char(b.oprn_warr_out_dttm, 'YYYY-MM-DD') as oprn_warr_out_dttm
			  ,a.con_chk_prst_cd
			  ,fn_get_cd('SH00000047', a.con_chk_prst_cd, 'NM', #{SESS_LANG}) as con_chk_prst_nm
			  ,#{usr_nm} as chk_usr_nm
		  from tb_sh_con_oprn_prms_chk a
		      ,(select scopr.con_id
		      		  ,scopr.con_prms_id
		      		  ,scopr.con_dt
		      		  ,scopr.con_oprn_wkpl_loc_id
		      		  ,scopr.con_oprn_dtl_loc_nm
		      		  ,scopr.con_bgn_hm
		      		  ,scopr.con_end_hm
		      		  ,scopr.con_req_prst_cd
		      		  ,scopr.oprn_warr_out_usr_id
		      		  ,scopr.oprn_warr_out_dttm
		      		  ,scopp.wkpl_id
		      		  ,scopp.con_nm
		      		  ,scopp.con_rq_usr_id
		      		  ,scopp.otsr_con_bsen_id
		      		  ,scopp.con_rspn_org_cd
		           from tb_sh_con_oprn_prms_req scopr
		           	   ,tb_sh_con_oprn_prms_plan scopp
		           	   ,tb_co_user tcu 
		          where scopr.con_id = scopp.con_id
		 			and scopr.con_dt = to_char(current_timestamp, 'YYYYMMDD')
				    and (scopr.del_yn = 'N' or scopr.del_yn is null or scopr.del_yn = '')
				    and tcu.usr_id = #{usr_id}
				    and (scopr.con_supe_usr_id = #{usr_id} 
				   		 or scopr.con_sft_rspn_usr_id = #{usr_id}
				   		 or scopr.con_oprn_supe_usr_id = #{usr_id}
				   		 or (case when exists (select role_no 
				   		 						 from tb_co_user_role tcur 
				   		 						where tcur.usr_id = #{usr_id} 
				   		 						  and tcur.role_no ='R0005'
				   		 						  and tcur.usg_yn = 'Y'
				   		 						  and tcur.del_yn = 'N')
		 			  then (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = scopr.con_sft_rspn_usr_id
		                       and r.usg_yn = 'Y'
		                    ) = tcu.dept_cd else 1!=1 end ) 
				         or exists (select d.elc_rspn_usr_id
				      				  from tb_sh_wkpl_elc d
		                             where scopp.wkpl_id = d.wkpl_id 
		                               and d.ag_yn = 'N'
		                               and d.elc_cl_cd in ('ELC01', 'ELC02', 'ELC04', 'ELC08')
		                               and d.elc_rspn_usr_id = #{usr_id}
		                           )
				        )
				  <if test='con_nm != null and con_nm != ""'>
					and scopp.con_nm like concat('%', rtrim(ltrim(#{con_nm})), '%')
				  </if>
		       ) b
		 where a.con_prms_id = b.con_prms_id
		   and a.wkpl_id = 'S00'
		   and a.wkpl_chec_sn = 1
		 <if test='wkpl_chec_cl_cd != null and wkpl_chec_cl_cd != ""'>
		   and a.wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
		 </if>
		 <if test='con_chk_prst_cd != null and con_chk_prst_cd != ""'>
		   and a.con_chk_prst_cd = #{con_chk_prst_cd}
		 </if>
		 order by b.con_id, b.con_prms_id
	</select>

	
	<!-- 공사작업허가 기본정보 모바일 조회 -->
	<select id="selectConOprnPrmsDtlMobile" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsDtlMobile  */
		select b.con_id
		      ,b.con_prms_id
		      ,(select oprn_plan_atfl_no 
		          from tb_sh_con_oprn_prms_plan scopp 
		         where con_id = (select con_id  
		                              from tb_sh_con_oprn_prms_req scopr 
		                             where con_prms_id = #{con_prms_id})) as oprn_plan_atfl_no
		      ,(select p.con_nm 
		          from tb_sh_con_oprn_prms_plan p
		         where p.con_id = b.con_id
		       ) as con_nm
		      ,b.con_oprn_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		              ,tb_sh_con_oprn_prms_plan p
		         where p.con_id = b.con_id 
		           and l.wkpl_id = p.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) || b.con_oprn_dtl_loc_nm as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,b.con_supe_usr_id
		      ,b.con_sft_rspn_usr_id
		      ,b.con_oprn_supe_usr_id
		      ,b.con_req_atfl_no
		      ,a.wkpl_chec_cl_cd
		      ,fn_get_cd('ST00000012', a.wkpl_chec_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_cl_nm
		      ,a.wkpl_id
		      ,a.wkpl_chec_sn
		      ,a.con_chk_txt
		      ,to_char(a.con_chk_dttm, 'YYYY-MM-DD HH24:MI') as con_chk_dttm
		      ,a.con_chk_prst_cd
		      ,fn_get_cd('SH00000047', a.con_chk_prst_cd, 'NM', #{SESS_LANG}) as con_chk_prst_nm
		      ,a.con_chk_atfl_no
		  from tb_sh_con_oprn_prms_chk a
		      ,tb_sh_con_oprn_prms_req b
		 where a.con_prms_id = b.con_prms_id
		   and b.con_prms_id = #{con_prms_id}
		   and (b.del_yn = 'N' or b.del_yn is null or b.del_yn = '')
		 <choose>
			<when test='wkpl_chec_cl_cd != null and wkpl_chec_cl_cd != ""'>
		   and a.wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
			</when>
			<otherwise>
		   and a.wkpl_chec_cl_cd = (select max(c.wkpl_chec_cl_cd) as wkpl_chec_cl_cd
		      							  from tb_sh_con_oprn_prms_chk c
		      							 where c.con_prms_id = b.con_prms_id 
		      							   and c.con_prms_id = #{con_prms_id}
		   							   )
			</otherwise>
		</choose>
	</select>
	
	<!-- 공사작업허가 체크리스트 모바일 조회 -->
	<select id="selectConOprnPrmsDtlChkListMobile" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsDtlChkListMobile  */
		select a.wkpl_id
		      ,a.con_prms_id
		      ,a.wkpl_chec_cl_cd
		      ,a.wkpl_chec_dtl_cl_cd
		      ,fn_get_cd('ST00000013', a.wkpl_chec_dtl_cl_cd, 'NM', #{SESS_LANG}) as wkpl_chec_dtl_cl_nm
		      ,a.wkpl_chec_sn
		      ,a.wkpl_chec_in_cl_cd
		      ,a.wkpl_chec_txt
		      ,(select c.chec_vl 
		          from tb_sh_con_oprn_prms_chec c
		         where c.con_prms_id = a.con_prms_id
		           and c.wkpl_id = a.wkpl_id
		           and c.wkpl_chec_cl_cd = a.wkpl_chec_cl_cd
		           and c.wkpl_chec_dtl_cl_cd = a.wkpl_chec_dtl_cl_cd
		           and c.wkpl_chec_sn = a.wkpl_chec_sn
		       ) as chec_vl
		  from (select a.wkpl_id
				      ,#{con_prms_id} as con_prms_id
				      ,a.wkpl_chec_cl_cd
				      ,a.wkpl_chec_dtl_cl_cd
				      ,a.wkpl_chec_sn
				      ,a.wkpl_chec_in_cl_cd
				      ,a.wkpl_chec_txt
				  from tb_sh_wkpl_chec a
				 where a.wkpl_chec_dtl_cl_cd in (select b.con_oprn_type_cd
				     								   from tb_sh_con_oprn_prms_oprn b
				     								  where b.con_prms_id = #{con_prms_id}
				   									)
				   and a.wkpl_id = 'S00'
				 <choose>
					<when test='wkpl_chec_cl_cd != null and wkpl_chec_cl_cd != ""'>
				   and a.wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
					</when>
					<otherwise>
				   and a.wkpl_chec_cl_cd = (select max(c.wkpl_chec_cl_cd) as wkpl_chec_cl_cd
				      							  from tb_sh_con_oprn_prms_chk c
				      							 where c.con_prms_id = #{con_prms_id}
				   							   )
					</otherwise>
				 </choose>
				 union
				select a.wkpl_id
				      ,a.con_prms_id
				      ,a.wkpl_chec_cl_cd
				      ,a.wkpl_chec_dtl_cl_cd
				      ,a.wkpl_chec_sn
				      ,a.wkpl_chec_in_cl_cd
				      ,a.wkpl_chec_txt
				  from tb_sh_con_oprn_prms_chec a
				 where a.con_prms_id = #{con_prms_id}
				 <choose>
					<when test='wkpl_chec_cl_cd != null and wkpl_chec_cl_cd != ""'>
				   and a.wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
					</when>
					<otherwise>
				   and a.wkpl_chec_cl_cd = (select max(c.wkpl_chec_cl_cd) as wkpl_chec_cl_cd
				      							  from tb_sh_con_oprn_prms_chk c
				      							 where c.con_prms_id = a.con_prms_id 
				      							   and c.con_prms_id = #{con_prms_id}
				   							   )
					</otherwise>
				 </choose>
			  ) a
		 order by a.wkpl_chec_dtl_cl_cd, a.wkpl_chec_sn
	</select>
	
	<!-- 공사작업 점검 저장 모바일 -->
	<insert id="insertConOprnPrmsChkDataMobile" parameterType="sqlMap">
        /* insertConOprnPrmsChkDataMobile */
        with upsert as (
		update tb_sh_con_oprn_prms_chk
		   set con_chk_txt 			= #{con_chk_txt}
		      ,con_chk_prst_cd	= #{con_chk_prst_cd}
		      ,con_chk_dttm 		= current_timestamp
		      ,con_chk_atfl_no	= case when #{con_chk_atfl_no}::text  = '' then null 
							   	 		   else #{con_chk_atfl_no}::INTEGER 
					    	 		  end
		      ,upt_usr_id       		= #{username}
		      ,upt_dt            	= current_timestamp
		 where con_prms_id = #{con_prms_id} 
		   and wkpl_id = #{wkpl_id}
		   and wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
		   and wkpl_chec_sn = #{wkpl_chec_sn}::numeric RETURNING *
		)
        insert into tb_sh_con_oprn_prms_chk (
        	   con_prms_id
			  ,wkpl_id
			  ,wkpl_chec_cl_cd
			  ,wkpl_chec_sn
			  ,con_chk_txt
			  ,con_chk_prst_cd
			  ,con_chk_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_prms_id}
			  ,#{wkpl_id}
			  ,#{wkpl_chec_cl_cd}
			  ,#{wkpl_chec_sn}::numeric
			  ,#{con_chk_txt}
			  ,#{con_chk_prst_cd}
			  ,case when #{con_chk_atfl_no}::text  = '' then null 
	   			    else #{con_chk_atfl_no}::INTEGER 
   	 		   end
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 공사작업 점검 체크리스트 저장 모바일 -->
	<insert id="insertConOprnPrmsChkListDataMobile" parameterType="sqlMap">
        /* insertConOprnPrmsChkListDataMobile */
        with upsert as (
		update tb_sh_con_oprn_prms_chec
		   set wkpl_chec_in_cl_cd = #{wkpl_chec_in_cl_cd}
		      ,wkpl_chec_txt 		  = #{wkpl_chec_txt}
		      ,chec_vl 				  = #{chec_vl}
		      ,upt_usr_id       		  = #{username}
		      ,upt_dt            	  = current_timestamp
		 where con_prms_id = #{con_prms_id} 
		   and wkpl_id = #{wkpl_id}
		   and wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
		   and wkpl_chec_dtl_cl_cd = #{wkpl_chec_dtl_cl_cd}
		   and wkpl_chec_sn = #{wkpl_chec_sn}::numeric RETURNING *
		)
        insert into tb_sh_con_oprn_prms_chec (
        	   con_prms_id
			  ,wkpl_id
			  ,wkpl_chec_cl_cd
			  ,wkpl_chec_dtl_cl_cd
			  ,wkpl_chec_sn
			  ,wkpl_chec_txt
			  ,wkpl_chec_in_cl_cd
			  ,chec_vl
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_prms_id}
			  ,#{wkpl_id}
			  ,#{wkpl_chec_cl_cd}
			  ,#{wkpl_chec_dtl_cl_cd}
			  ,#{wkpl_chec_sn}::numeric
			  ,#{wkpl_chec_txt}
			  ,#{wkpl_chec_in_cl_cd}
			  ,#{chec_vl}
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
	<!-- 공사작업 점검 다음단계 모바일 데이터 존재여부 체크 -->
	<select id="selectConOprnPrmsmobileDataExistYn" parameterType="sqlMap" resultType="string">
		/* selectConOprnPrmsmobileDataExistYn */
		select case when count(*) > 0 then 'Y'
					else 'N'
				end as yn
		  from tb_sh_con_oprn_prms_chk
		 where con_prms_id = #{con_prms_id}
		   and wkpl_id = #{wkpl_id}
		   and wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
	</select>
	
    <!-- 공사작업 점검 다음단계 저장 모바일 -->
	<insert id="insertConOprnPrmsChkNextDataMobile" parameterType="sqlMap">
        /* insertConOprnPrmsChkNextDataMobile */
        insert into tb_sh_con_oprn_prms_chk (
        	   con_prms_id
			  ,wkpl_id
			  ,wkpl_chec_cl_cd
			  ,wkpl_chec_sn
			  ,con_chk_prst_cd
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		) values (
		       #{con_prms_id}
		      ,#{wkpl_id}
		      ,#{wkpl_chec_cl_cd}
		      ,#{wkpl_chec_sn}::numeric
		      ,#{con_chk_prst_cd}
		      ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
		)
    </insert>
    
    <!-- 공사작업 점검 체크리스트 다음단계 생성 모바일 -->
	<insert id="insertConOprnPrmsChkListNextDataMobile" parameterType="sqlMap">
        /* insertConOprnPrmsChkListNextDataMobile */
        insert into tb_sh_con_oprn_prms_chec (
        	   con_prms_id
			  ,wkpl_id
			  ,wkpl_chec_cl_cd
			  ,wkpl_chec_dtl_cl_cd
			  ,wkpl_chec_sn
			  ,wkpl_chec_txt
			  ,wkpl_chec_in_cl_cd
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{con_prms_id} as con_prms_id
		      ,wkpl_id
		      ,wkpl_chec_cl_cd
		      ,wkpl_chec_dtl_cl_cd
		      ,wkpl_chec_sn
		      ,wkpl_chec_txt
		      ,wkpl_chec_in_cl_cd
		      ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
		  from tb_sh_wkpl_chec
		 where wkpl_id = #{wkpl_id}
		   and wkpl_chec_cl_cd = #{wkpl_chec_cl_cd}
		   and wkpl_chec_dtl_cl_cd in (select b.con_oprn_type_cd
	     								     from tb_sh_con_oprn_prms_oprn b
	     								    where b.con_prms_id = #{con_prms_id}
	   									  )
    </insert>
    
    <!-- 공사작업 점검 메인 상태 수정 모바일 -->
    <update id="updateConOprnPrmsMainStatMobile" parameterType="sqlMap">
    	/* insertConOprnPrmsChkListNextDataMobile */
        update tb_sh_con_oprn_prms_req 
       	   set con_req_prst_cd = #{con_req_prst_cd}
	 		  ,upt_usr_id             = #{username}
		      ,upt_dt            = current_timestamp
		 where con_prms_id     = #{con_prms_id}
     </update>
     
    <!-- 공사작업허가 결재상신 -->
    <update id="updateConOprnPrmsAprv" parameterType="sqlMap">
    	/* updateConOprnPrmsAprv */
        update tb_sh_con_oprn_prms_req 
       	   set con_req_aprv_no = #{con_req_aprv_no}
	 		  ,upt_usr_id             = #{username}
		      ,upt_dt            = current_timestamp
		 where con_prms_id     = #{con_prms_id}
     </update>
     
    <!-- 공사작업허가 결재정보 조회 -->
	<select id="selectConOprnPrmsAprvInfo" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsAprvInfo  */
		select a.con_prms_id
		      ,a.con_req_prst_cd
		      ,a.con_id
		      ,a.con_req_aprv_no
		      ,'S00' as wkpl_id
		  from tb_sh_con_oprn_prms_req a
		 where a.con_req_aprv_no = #{con_req_aprv_no}
	</select>
	
	<!-- 공사작업완료 결재상신 -->
    <update id="updateConOprnPrmsCmplAprv" parameterType="sqlMap">
    	/* updateConOprnPrmsCmplAprv */
        update tb_sh_con_oprn_cmpy 
       	   set con_oprn_cmpy_aprv_no = #{con_oprn_cmpy_aprv_no}
	 		  ,upt_usr_id                   = #{username}
		      ,upt_dt                  = current_timestamp
		 where con_prms_id           = #{con_prms_id}
	</update>
	
	<!-- 공사작업완료 멀티결재 대상 조회 -->
	<select id="selectConOprnPrmsCmplMultiAprvList" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplMultiAprvList  */
		select a.con_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(a.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,a.con_nm
		      ,b.con_prms_id
		      ,(select array_to_string(array_agg(fn_get_cd('ST00000013', o.con_oprn_type_cd, 'nm', #{SESS_LANG})), ', ') as con_oprn_type_nm
		          from tb_sh_con_oprn_prms_oprn o
		         where o.con_prms_id = b.con_prms_id
		       ) as con_oprn_type_nm
		      ,b.con_oprn_wkpl_loc_id 
		      ,case when (select l.upp_incl_wkpl_loc_nm 
					        from tb_sh_wkpl_loc l
					       where l.wkpl_id = a.wkpl_id
					         and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
					     ) is null then '' else (select l.upp_incl_wkpl_loc_nm 
											       from tb_sh_wkpl_loc l
											      where l.wkpl_id = a.wkpl_id
											        and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
											    ) end
               as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) || ' ~ ' || substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_dt
		      ,a.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,a.otsr_con_bsen_id
		      ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,(select count(1) as cnt
		          from tb_sh_otsr_con_bsen c
		              ,tb_sh_otsr_con_oprr d
		         where c.otsr_con_bsen_id = d.otsr_con_bsen_id
		           and c.otsr_con_bsen_id = a.otsr_con_bsen_id 
		           and d.oprr_del_yn ='N' 
		       ) as oprr_cnt
		      ,b.con_req_prst_cd
		      ,fn_get_cd('SH00000042', b.con_req_prst_cd, 'NM', #{SESS_LANG}) as con_req_prst_nm
		      ,a.con_rspn_org_cd 
		      ,(select case when #{SESS_LANG} = 'KO' then d.dept_ko_nm
		                    else d.dept_en_nm
		               end as dept_nm
		          from tb_co_dept d
		         where d.dept_cd = a.con_rspn_org_cd
		       ) as con_rspn_org_nm
		      ,a.upt_usr_id 
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
			  ,b.oprn_warr_out_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.oprn_warr_out_usr_id
			   ) as oprn_warr_out_usr_nm
			  ,to_char(b.oprn_warr_out_dttm, 'YYYY-MM-DD') as oprn_warr_out_dttm
			  ,case when b.oprn_warr_out_usr_id is not null or b.oprn_warr_out_usr_id != '' then 'Y'
			        else 'N'
			   end print_yn
			  ,case when c.con_cmpy_prst_cd = 'S03' then 'Y'
			        else 'N'
			   end aprv_yn
			  ,b.con_req_aprv_no
			  ,case when c.con_cmpy_prst_cd is null then 'S01'
			        else c.con_cmpy_prst_cd
			   end as con_cmpy_prst_cd
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		  left outer join tb_sh_con_oprn_cmpy c
		    on b.con_prms_id = c.con_prms_id
		 where a.con_id = b.con_id
		   and b.con_prms_id in 
		 	<foreach collection='con_prms_ids' item="item" index="index" open="(" close=")" separator=",">
		 		#{item}
		 	</foreach>
		 order by a.con_id , b.con_prms_id 
	</select>
	
	<!-- 공사작업완료 멀티 결재상신 -->
	<update id="updateConOprnPrmsCmplMultiAprv" parameterType="sqlMap">
	/* updateConOprnPrmsCmplMultiAprv */
	with upsert as (
		update tb_sh_con_oprn_cmpy
		   set con_oprn_cmpy_aprv_no = #{con_oprn_cmpy_aprv_no}
			  ,upt_usr_id                   = #{username}
			  ,upt_dt                  = current_timestamp
		 where con_prms_id = #{con_prms_id}
		RETURNING *
	)
	insert into tb_sh_con_oprn_cmpy (
		con_prms_id
	   ,con_oprn_cmpy_aprv_no
	   ,con_cmpy_prst_cd
	   ,crt_usr_id
	   ,crt_dt
	   ,upt_usr_id
	   ,upt_dt
	)
	select #{con_prms_id}
		  ,#{con_oprn_cmpy_aprv_no}
		  ,'S01'
		  ,#{username}
		  ,current_timestamp
		  ,#{username}
		  ,current_timestamp
	 where not exists (select * from upsert)
	</update>
	
	<!-- 공사작업완료 결재상신 후처리 -->
	<update id="updateConOprnPrmsCmplAprvAf" parameterType="sqlMap">
	/* updateConOprnPrmsCmplAprvAf */
	update tb_sh_con_oprn_cmpy 
	   set con_cmpy_prst_cd = #{con_cmpy_prst_cd}
	   	  ,upt_usr_id              = #{username}
		  ,upt_dt             = current_timestamp
	 where con_prms_id      = #{con_prms_id}
	</update>
	
	<!-- 공사작업완료 결재정보 조회 -->
	<select id="selectConOprnPrmsCmplAprvInfo" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsCmplAprvInfo  */
		select a.con_prms_id
		      ,a.con_cmpy_prst_cd
		      ,a.con_oprn_cmpy_aprv_no
		  from tb_sh_con_oprn_cmpy a
		 where a.con_oprn_cmpy_aprv_no = #{con_oprn_cmpy_aprv_no}
	</select>
	
	<!-- 대시보드 테스트 데이터 조회 -->
	<select id="selectDashTestList" parameterType="sqlMap" resultType="sqlMap">
		/* selectDashTestList  */
		select fn_get_cd('SH00000042', a.con_req_prst_cd, 'NM', 'KO') as con_req_prst_nm
		      ,count(1) as cnt
		      ,count(case when a.con_supe_usr_id = 'AC926530' then 1 end) as my_cnt
		  from tb_sh_con_oprn_prms_req a
		 where 1=1
		 group by a.con_req_prst_cd
	</select>
	
	<!-- 휴일체크 -->
	<select id="selectHolidayChk" parameterType="sqlMap" resultType="sqlMap">
		/* selectHolidayChk  */
		select (case when sum(case when b.chk not in ('6','7','8') 
								   then 1
								   else 0
					    	   end) > 0
			 		 then 'Y'
			 		 else 'N'
		   		 end) as wekdyn
			  ,(case when sum(case when b.chk in ('6','7','8') 
								   then 1
							  	   else 0
					    	   end) > 0
			 		 then 'Y'
			 		 else 'N'
		   		 end) as holiYn
		  from (select a.hdt
		  			  ,max(a.chk) as chk
		  		  from (select holy_dt::date as hdt
				  			  ,8 as chk 
				  		  from tb_co_holyday
				 		 where holy_dt between replace(#{bgn_dt},'-','') and replace(#{end_dt},'-','')
					     union all
						select (replace(#{bgn_dt},'-','')::date + level - 1) as sdt
							  ,EXTRACT(ISODOW FROM replace(#{bgn_dt},'-','')::date + level - 1) as chkdt 
						  from generate_series(1, (replace(#{end_dt},'-','')::date - replace(#{bgn_dt},'-','')::date + 1)) LEVEL
					   ) a
				 group by a.hdt
				 order by a.hdt
		  	   ) b
	</select>
	
	
</mapper>