<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.common.batch.mapper.BatchMapper">
	
	<insert id="insertBatch" parameterType="sqlMap">
        /* insertBatch */
        insert into tb_co_bat_exe_log (
        	bat_cd
        	,bat_exe_da
			,bat_st_dt
		) values (
			#{batCd}
			,to_char(now(), 'YYYYMMDD')
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
		<selectKey keyProperty="batNo" resultType="String" order="AFTER">
        	SELECT currval('tb_co_bat_exe_log_bat_exe_log_no_seq')
    	</selectKey>
    </insert>
    
    <insert id="insertTestBatch" parameterType="sqlMap">
        /* insertTestBatch */
        insert into tb_co_bat_exe_log (
        	bat_cd
        	,bat_exe_da
			,bat_st_dt
		) values (
			#{batCd}
			,to_char(now(), 'YYYYMMDD')
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
    <update id="updateBatch" parameterType="sqlMap">
        /* updateBatch */
        update tb_co_bat_exe_log set
        	bat_ed_dt = to_char(now(), 'YYYYMMDDHH24MISS')
        	,bat_rslt_cd = #{resultCd}
			,bat_rslt_cntn = #{content}
		where bat_exe_log_no = #{batNo}::INTEGER
    </update>
    
    <select id="selectUdrusrList" parameterType="sqlMap" resultType="sqlMap">
		/* selectUdrusrList */
		select recv_seq
	      ,pernr
	      ,sname
	      ,nachn
	      ,lnmch
	      ,fnmch
	      ,zzjkw
	      ,zzjkw1
	      ,zzjkg
	      ,zzjkg1
	      ,zzjkc
	      ,zzjkc1
	      ,gbdat
	      ,dat01
	      ,stat2
	      ,kostl
	      ,massn
	      ,fo_bukrs
	      ,fo_orgeh
	      ,email
	      ,ipt_phone1
	      ,int_phone1
	      ,ipt_phone2
	      ,int_phone2
	      ,fax
	      ,mobile_phone
	      ,email_user
	      ,is_subcontrac
	      ,is_otr_contrac
	      ,corp_name
	      ,corp_name_en
	      ,corp_code
	      ,is_hq
	      ,"location"
	      ,org_name
	      ,org_name_en
	      ,orgeh
	      ,org1_name_1
	      ,org1_name_en_1
	      ,org1_1
	      ,org2_name_1
	      ,org2_name_en_1
	      ,org2_1
	      ,org3_name_1
	      ,org3_name_en_1
	      ,org3_1
	      ,org4_name_1
	      ,org4_name_en_1
	      ,org4_1
	      ,org1_name_2
	      ,org1_name_en_2
	      ,org1_2
	      ,org2_name_2
	      ,org2_name_en_2
	      ,org2_2
	      ,org3_name_2
	      ,org3_name_en_2
	      ,org3_2
	      ,org4_name_2
	      ,org4_name_en_2
	      ,org4_2
	      ,zzjkw_2
	      ,zzjkw1_2
	      ,zzjkg_2
	      ,zzjkg1_2
	      ,zzjkc_2
	      ,zzjkc1_2
	      ,mod_dt
	      ,is_solar
	      ,zzjkw1_en
	      ,zzjkg1_en
	      ,zzjkc1_en
	      ,zzjkw1_2en
	      ,zzjkg1_2en
	      ,zzjkc1_2en
	      ,cmpyid
	      ,assgnfl
	      ,bukrs
	      ,vkorg
	      ,grdat
	      ,dat04
	      ,partner_cd
	      ,ecris_system
	      ,brand
	      ,ecris_zzjkc
	      ,origin_code
	      ,firnm
	      ,midnm
	      ,lasnm
	      ,pre_pernr
	      ,(case when pernr not like 'AP%' and stat1 is null then '3' else stat1 end) as stat1
	      ,persg
	      ,persk
	      ,preas
	      ,del_dt
	      ,mod_dt_2
	      ,reg_dt
	      ,recv_dt
	      ,trn_yn
	      ,trn_dt
	  from ti_co_user_iam_recv
	  where trn_yn = 'N'
	</select>
	
	<select id="selectHolyList" parameterType="sqlMap" resultType="sqlMap">
		/* selectHolyList */
		select rcv_dttm
		     , rcv_sn
		     , holy_dt
		     , holy_txt
		     , proc_yn
		     , proc_dttm
		     , del_yn
		     , del_dttm
		  from shmtsi_holy_sap_recv shsr
		 where proc_yn = 'N'
	</select>
	
	<update id="mergeHolyList" parameterType="sqlMap">
        /* mergeHolyList */
        with updateholy as (update tb_co_holyday
							   set holy_dt          =   #{holy_dt}
								 , holy_mk_vl       =   #{holy_txt}
								 , upt_usr_id       	=   'SYSTEM'
								 , upt_dt      	=   now()
								 , del_yn       	=   'N'
							 where holy_dt = #{holy_dt} returning *
		                   )
		             insert into tb_co_holyday 
					       ( holy_dt
					       , holy_mk_vl
					       , crt_usr_id
					       , crt_dt
					       , upt_usr_id
					       , upt_dt
					       , del_yn )
		             select  #{holy_dt}
					       , #{holy_txt}
					       , 'SYSTEM'
					       , now()
					       , 'SYSTEM'
					       , now()
					       , 'N'
		              where not exists(select 1 from updateholy)
    </update>
    
    <update id="updateHolyList" parameterType="sqlMap">
        /* updateHolyList */
        update shmtsi_holy_sap_recv
		   set proc_yn = 'Y'
		      ,proc_dttm = to_char(now(),'YYYYMMDDHH24MISS')
		 where rcv_sn = #{rcv_sn}
    </update>
    
	<update id="mergeUdrusrList" parameterType="sqlMap">
        /* mergeUdrusrList */
        with updateuser as (update tb_co_user
							   set dept_cd          =   #{orgeh}
								 , usr_ko_nm        =   #{sname}
								 , usr_en_nm        =   #{nachn}
								 , usr_zh_nm        =   #{lnmch} || #{r_user.fnmch}
								 , jkw_cd           =   #{zzjkw}
								 , jkw_ko_nm        =   #{zzjkw1}
								 , jkw_en_nm        =   #{zzjkw1_en}
								 , jkg_cd           =   #{zzjkg}
								 , jkg_ko_nm        =   #{zzjkg1}
								 , jkg_en_nm        =   #{zzjkg1_en}
								 , jkc_cd           =   #{zzjkc}
								 , jkc_ko_nm        =   #{zzjkc1}
								 , jkc_en_nm        =   #{zzjkc1_en}
								 , usr_birth_da     =   #{gbdat}
								 , joinc_da         =   #{dat01}
								 , offi_clsf_cd     =   #{stat2}
								 , coce_cd          =   #{kostl}
								 , appo_type_cd     =   #{massn}
								 , dptc_cmpy_cd     =   #{fo_bukrs}
								 , dptc_dept_cd     =   #{fo_orgeh}
								 , usr_email        =   #{email}
								 , ipt_phon_no      =   #{ipt_phone1}
								 , cmpy_phon_no     =   #{int_phone1}
								 , ipt_2_phon_no    =   #{ipt_phone2}
								 , cmpy_2_phon_no   =   #{int_phone2}
								 , usr_cpho_no      =   #{mobile_phone}
								 , fax_no           =   #{fax}
								 , prtn_yn          =   #{is_subcontrac}
								 , ext_prtn_yn      =   #{is_otr_contrac}
								 , cmpy_nm          =   #{corp_name}
								 , cmpy_nm_en       =   #{corp_name_en}
								 , cmpy_cd          =   #{bukrs}
								 , hq_yn            =   #{is_hq}
								 , cmpy_loc_cd      =   #{location}
								 , org_1st_cd       =   #{org1_1}
								 , org_2nd_cd       =   #{org2_1}
								 , org_3rd_cd       =   #{org3_1}
								 , org_4th_cd       =   #{org4_1}
								 , addp_org_1st_cd  =   #{org1_2}
								 , addp_org_2nd_cd  =   #{org2_2}
								 , addp_org_3rd_cd  =   #{org3_2}
								 , addp_org_4th_cd  =   #{org4_2}
								 , addp_jkw_cd      =   #{zzjkw_2}
								 , addp_jkw_ko_nm   =   #{zzjkw1_2}
								 , addp_jkw_en_nm   =   #{zzjkw1_2en}
								 , addp_jkg_cd      =   #{zzjkg_2}
								 , addp_jkg_ko_nm   =   #{zzjkg1_2}
								 , addp_jkg_en_nm   =   #{zzjkg1_2en}
								 , addp_jkc_cd      =   #{zzjkc_2}
								 , addp_jkc_ko_nm   =   #{zzjkc1_2}
								 , addp_jkc_en_nm   =   #{zzjkc1_2en}
								 , retir_da         =   #{dat04}
								 , usr_clsf_cd      =   #{persg}
								 , usg_yn           =   case when #{stat1} = '3' then 'Y' else 'N' end
								 , del_yn           =   case when #{stat1} = '3' then 'N' else 'Y' end
								 , upt_usr_id       =   'APCHEMS'
								 , upt_dt           =   to_char(now(),'YYYYMMDDHH24MISS')
							 where usr_id = #{pernr} returning *
		                   )
		             insert into tb_co_user 
					       (usr_id
		                  , dept_cd
		                  , usr_ko_nm
		                  , usr_en_nm
		                  , usr_zh_nm
		                  , jkw_cd
		                  , jkw_ko_nm
		                  , jkw_en_nm
		                  , jkg_cd
		                  , jkg_ko_nm
		                  , jkg_en_nm
		                  , jkc_cd
		                  , jkc_ko_nm
		                  , jkc_en_nm
		                  , usr_birth_da
		                  , joinc_da
		                  , offi_clsf_cd
		                  , coce_cd
		                  , appo_type_cd
		                  , dptc_cmpy_cd
		                  , dptc_dept_cd
		                  , usr_email
		                  , ipt_phon_no
		                  , cmpy_phon_no
		                  , ipt_2_phon_no
		                  , cmpy_2_phon_no
		                  , usr_cpho_no
		                  , fax_no
		                  , prtn_yn
		                  , ext_prtn_yn
		                  , cmpy_nm
		                  , cmpy_nm_en
		                  , cmpy_cd
		                  , hq_yn
		                  , cmpy_loc_cd
		                  , org_1st_cd
		                  , org_2nd_cd
		                  , org_3rd_cd
		                  , org_4th_cd
		                  , addp_org_1st_cd
		                  , addp_org_2nd_cd
		                  , addp_org_3rd_cd
		                  , addp_org_4th_cd
		                  , addp_jkw_cd
		                  , addp_jkw_ko_nm
		                  , addp_jkw_en_nm
		                  , addp_jkg_cd
		                  , addp_jkg_ko_nm
		                  , addp_jkg_en_nm
		                  , addp_jkc_cd
		                  , addp_jkc_ko_nm
		                  , addp_jkc_en_nm
		                  , lat_login_dt
		                  , lat_login_ip_addr
		                  , wkpl_id
		                  , lang_cd
		                  , tzon_cd
		                  , retir_da
		                  , usr_clsf_cd
		                  , usg_yn
		                  , del_yn
		                  , crt_usr_id
		                  , crt_dt
		                  , upt_usr_id
		                  , upt_dt)
		             select #{pernr}
		                  , #{orgeh}
		                  , #{sname}
		                  , #{nachn}
		                  , #{lnmch} || #{r_user.fnmch}
		                  , #{zzjkw}
		                  , #{zzjkw1}
		                  , #{zzjkw1_en}
		                  , #{zzjkg}
		                  , #{zzjkg1}
		                  , #{zzjkg1_en}
		                  , #{zzjkc}
		                  , #{zzjkc1}
		                  , #{zzjkc1_en}
		                  , #{gbdat}
		                  , #{dat01}
		                  , #{stat2}
		                  , #{kostl}
		                  , #{massn}
		                  , #{fo_bukrs}
		                  , #{fo_orgeh}
		                  , #{email}
		                  , #{ipt_phone1}
		                  , #{int_phone1}
		                  , #{ipt_phone2}
		                  , #{int_phone2}
		                  , #{mobile_phone}
		                  , #{fax}
		                  , #{is_subcontrac}
		                  , #{is_otr_contrac}
		                  , #{corp_name}
		                  , #{corp_name_en}
		                  , #{bukrs}
		                  , #{is_hq}
		                  , #{location}
		                  , #{org1_1}
		                  , #{org2_1}
		                  , #{org3_1}
		                  , #{org4_1}
		                  , #{org1_2}
		                  , #{org2_2}
		                  , #{org3_2}
		                  , #{org4_2}
		                  , #{zzjkw_2}
		                  , #{zzjkw1_2}
		                  , #{zzjkw1_2en}
		                  , #{zzjkg_2}
		                  , #{zzjkg1_2}
		                  , #{zzjkg1_2en}
		                  , #{zzjkc_2}
		                  , #{zzjkc1_2}
		                  , #{zzjkc1_2en}
		                  , '00000000000000'
		                  , '000.000.000.000'
		                  , 'SZZ'    -- 고정(SZZ)
		                  , 'KO'     -- 고정(KO)
		                  , 'TZ153'  -- 고정(Asia/Seoul)
		                  , #{dat04}
		                  , #{persg}
		                  , case when #{stat1} = '3' then 'Y' else 'N' end 
		                  , case when #{stat1} = '3' then 'N' else 'Y' end 
		                  , 'APCHEMS'
		                  , to_char(now(),'YYYYMMDDHH24MISS')
		                  , 'APCHEMS'
		                  , to_char(now(),'YYYYMMDDHH24MISS')
		              where not exists(select 1 from updateuser)
    </update>
    
    <insert id="insertUdrauthList" parameterType="sqlMap">
        /* insertUdrauthList */
        insert into tb_co_user_role
		select usr_id
		     , 'R0001'
		     , 'Y'
		     , 'N'
		     , 'APCHEMS'
		     , to_char(now(),'YYYYMMDDHH24MISS')
		     , 'APCHEMS'
		     , to_char(now(),'YYYYMMDDHH24MISS')
		  from tb_co_user
		 where not exists (select 1 from tb_co_user_role ab where ab.usr_id = #{pernr} and ab.role_no = 'R0001')
		   and usr_id = #{pernr}
		   and substring(usr_id,1,2) != 'AC'
    </insert>
    
    <insert id="insertUdrauthListAC" parameterType="sqlMap">
        /* insertUdrauthListAC */
        insert into tb_co_user_role
		select usr_id
		     , 'R0008'
		     , 'Y'
		     , 'N'
		     , 'APCHEMS'
		     , to_char(now(),'YYYYMMDDHH24MISS')
		     , 'APCHEMS'
		     , to_char(now(),'YYYYMMDDHH24MISS')
		  from tb_co_user
		 where not exists (select 1 from tb_co_user_role ab where ab.usr_id = #{pernr} and ab.role_no = 'R0008')
		   and usr_id = #{pernr}
		   and substring(usr_id,1,2) = 'AC'
    </insert>
    
    <update id="updateUdrrsltList" parameterType="sqlMap">
        /* updateUdrrsltList */
        update ti_co_user_iam_recv
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where recv_seq = #{recv_seq}
    </update>
    
    <select id="selectUdrDeptList" parameterType="sqlMap" resultType="sqlMap">
		/* selectUdrDeptList */
		select recv_seq
		     , bukrs
		     , objid
		     , stext
		     , tline
		     , sobid
		     , org_mngr
		     , org_mngr_old
		     , mod_dt
		     , org_mngr_name
		     , recv_dt
		     , trn_yn
		     , trn_dt
		  from ti_co_dept_iam_recv
		 where trn_yn = 'N'
	</select>
	
	<update id="mergeUdrDeptList" parameterType="sqlMap">
        /* mergeUdrDeptList */
        with updatedept as (update tb_co_dept
							   set dept_cd          =   #{objid}
								 , up_dept_cd       =   #{sobid}
								 , cmpy_cd          =   #{bukrs}
								 , dept_ko_nm       =   #{stext}
								 , dept_en_nm       =   #{tline}
								 , dpth_usr_id      =   #{org_mngr}
								 , usg_yn           =   'Y'
								 , del_yn           =   'N'
								 , upt_usr_id       =   'APCHEMS'
								 , upt_dt           =   to_char(now(),'YYYYMMDDHH24MISS')
							 where dept_cd = #{objid} returning *
		                   )
		             insert into tb_co_dept 
					       ( dept_cd    
						   , up_dept_cd 
						   , cmpy_cd    
						   , dept_ko_nm 
						   , dept_en_nm 
						   , dpth_usr_id
						   , usg_yn     
						   , del_yn     
						   , crt_usr_id
						   , crt_dt
						   , upt_usr_id 
						   , upt_dt)
		             select  #{objid}
					       , #{sobid}
					       , #{bukrs}
					       , #{stext}
					       , #{tline}
					       , #{org_mngr}
					       , 'Y'
					       , 'N'
					       , 'APCHEMS'
					       , to_char(now(),'YYYYMMDDHH24MISS')
					       , 'APCHEMS'
					       , to_char(now(),'YYYYMMDDHH24MISS')
		              where not exists(select 1 from updatedept)
    </update>
    
    <update id="updateUdrDeptRsltList" parameterType="sqlMap">
        /* updateUdrDeptRsltList */
        update ti_co_dept_iam_recv
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where recv_seq = #{recv_seq}
    </update>
    
    <select id="selectUdrAuthList" parameterType="sqlMap" resultType="sqlMap">
		/* selectUdrAuthList */
		select recv_seq
		     , sys_code
			 , pernr
			 , role_code
			 , mod_dt
			 , reg_dt
			 , del_dt
			 , del_yn
			 , recv_dt
			 , trn_yn
			 , trn_dt
		  from ti_co_user_role_iam_recv
		 where trn_yn = 'N'
	</select>
	
	<update id="mergeUdrAuthList" parameterType="sqlMap">
        /* mergeUdrAuthList */
        with updaterole as (update tb_co_user_role
							   set usr_id           =   #{pernr}
								 , role_no          =   #{role_code}
								 , usg_yn           =   case when #{del_yn} = 'Y' then 'N' else 'Y' end
								 , del_yn           =   #{del_yn}
								 , upt_usr_id       =   'APCHEMS'
								 , upt_dt           =   to_char(now(),'YYYYMMDDHH24MISS')
							 where usr_id = #{pernr}
							   and role_no = #{role_code} returning *
		                   )
		             insert into tb_co_user_role 
					       ( usr_id
						   , role_no
						   , usg_yn
						   , del_yn
						   , crt_usr_id
						   , crt_dt
						   , upt_usr_id
						   , upt_dt)
		             select  #{pernr}
					       , #{role_code}
					       , case when #{del_yn} = 'Y' then 'N' else 'Y' end
					       , #{del_yn}
					       , 'APCHEMS'
					       , to_char(now(),'YYYYMMDDHH24MISS')
					       , 'APCHEMS'
					       , to_char(now(),'YYYYMMDDHH24MISS')
		              where not exists(select 1 from updaterole)
    </update>
    
    <update id="updateUdrAuthRsltList" parameterType="sqlMap">
        /* updateUdrAuthRsltList */
        update ti_co_user_role_iam_recv
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where recv_seq = #{recv_seq}
    </update>
    
    <select id="selectMtrlMasterList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlMasterList */
		select trim(datetime)          as datetime
		     , trim(zseq)              as zseq 
		     , ltrim(trim(matnr),'0')  as matnr              -- 자재코드
		     , trim(werks)             as werks              -- 플랜트
		     , trim(mmsta)             as mmsta              -- 플랜트 자재 상태
		     , trim(maktx_en)          as maktx_en           -- 자재명 영문
		     , trim(maktx_ko)          as maktx_ko           -- 자재명 한글
		     , trim(maktx_zh)          as maktx_zh           -- 자재명 중문
		     , trim(ersda)             as ersda              -- 생성일
		     , trim(ernam)             as ernam              -- 생성인
		     , trim(laeda)             as laeda              -- 최종변경일
		     , trim(aenam)             as aenam              -- 최종변경인
		     , trim(lvorm)             as lvorm              -- 삭제 지시자
		     , trim(mtart)             as mtart              -- 자재유형
		     , trim(matkl)             as matkl              -- 자재그룹                                                                                                                         
		     , trim(wgbez)             as wgbez              -- 자재그룹 내역                                                                                                                      
		     , trim(zzodm)             as zzodm              -- ODM/OEM 여부                                                                                                                   
		     , trim(zzsanit)           as zzsanit            -- 의약외품                                                                                                                         
		     , trim(zzitem_code)       as zzitem_code        -- 품목코드                                                                                                                         
		     , trim(zzitem_code_name)  as zzitem_code_name   -- 품목코드 내역
		     , trim(meins)             as meins              -- 기본 단위                         
		     , (select mtrl_type_cd from ti_ch_msds_tiumnet_recv where mtrl_cd = ltrim(trim(a.matnr),'0') and trn_yn = 'N' order by recv_dt desc limit 1) as mtrl_type_cd                                                                                              
		     , case when b.mtrl_no is null and reg_seq = 1 then 'C' else case when a.lvorm is null or a.lvorm = '' then 'U' else 'D' end end as reg_cd
		     , case when (select count(1) from tb_co_cd c where a.matkl=c.cd and c.cd_grp_no = 'CH00000008') > 0 then 'Y' else 'N' end mtrl_grp_cd_is_yn
		     , (select min(up_cd) from tb_co_cd_rel where cd_grp_no = 'CO00000007' and cd=trim(a.werks)) as wkpl_id
		     , (select req_usr_id from ti_ch_msds_tiumnet_recv where mtrl_cd = ltrim(trim(a.matnr),'0') and trn_yn = 'N' order by recv_dt desc limit 1) as usr_id
             , (select imp_yn from ti_ch_msds_tiumnet_recv where mtrl_cd = ltrim(trim(a.matnr),'0') and trn_yn = 'N' order by recv_dt desc limit 1) as imp_yn
             , (select sbms_tgt_yn from ti_ch_msds_tiumnet_recv where mtrl_cd = ltrim(trim(a.matnr),'0') and trn_yn = 'N' order by recv_dt desc limit 1) as sbms_tgt_yn
		  from (select a.*
		             , rank() over(partition by a.matnr order by a.datetime, a.zseq) as reg_seq
		          from ti_co_mtrl_sap_recv a
				 where 1 = 1
		           and a.trn_yn = 'N'
				   and exists (select 1 from ti_ch_msds_tiumnet_recv where mtrl_cd = ltrim(trim(a.matnr),'0') and trn_yn = 'N' and msds_file_ko_nm is not null)
		           and exists (select 1 from tb_co_cd where cd_grp_no = 'CO00000007' and cd = a.werks and usg_yn='Y' and del_yn='N')
		       ) a
		  left outer join tb_co_mtrl b on ltrim(trim(a.matnr),'0')=b.mtrl_no and b.del_yn = 'N'
		 where 1 = 1
		 order by matnr, werks desc
	</select>
	
	<insert id="insertMtrlCd" parameterType="sqlMap">
        /* insertMtrlCd */
        with mtrlcd as ( update tb_co_cd set
                                  cd_grp_no     = 'CH00000008'
						        , cd            = #{matkl}                                                                                            
						        , sort_seq      = (select max(sort_seq)+1 from tb_co_cd where cd_grp_no = 'CH00000008' and usg_yn= 'Y' and del_yn='N')
						        , buf_1st_cntn  = ''                                                                                                  
						        , buf_2nd_cntn  = ''                                                                                                  
						        , buf_3rd_cntn  = ''                                                                                                  
						        , buf_4th_cntn  = ''                                                                                                  
						        , buf_5th_cntn  = ''                                                                                                  
						        , upt_usr_id    = 'APCHEMS'                                                                                           
						        , upt_dt        = to_char(now(), 'yyyymmddhh24miss')                                                                  
						        where cd_grp_no = 'CH00000008'
						          and cd = #{matkl} returning *
				        )
        insert
		    into tb_co_cd (
		          cd_grp_no
		        , cd
		        , sort_seq
		        , buf_1st_cntn
		        , buf_2nd_cntn
		        , buf_3rd_cntn
		        , buf_4th_cntn
		        , buf_5th_cntn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		    'CH00000008'
		    , #{matkl}
		    , (select max(sort_seq)+1 from tb_co_cd where cd_grp_no = 'CH00000008' and usg_yn= 'Y' and del_yn='N')
		    , ''
		    , ''
		    , ''
		    , ''
		    , ''
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		where not exists(select 1 from mtrlcd)
    </insert>
    
    <insert id="insertKoMtrlMlang" parameterType="sqlMap">
        /* insertKoMtrlMlang */
         with mlang as ( update tb_co_mlang set
                                  mlang_no         = (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
						        , lang_cd          = 'KO'                                                                                                                         
						        , mlang_type_cd    = 'CD'                                                                                                                         
						        , biz_cd           = 'CO'                                                                                                                         
						        , mlang_cntn       = #{wgbez}                                                                                                                     
						        , mlang_abbr       = #{wgbez}                                                                                                                     
						        , cd_grp_no        = 'CH00000008'                                                                                                                 
						        , cd               = #{matkl}                                                                                                                     
						        , crt_usr_id       = 'APCHEMS'                                                                                                                    
						        , crt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                           
						        , upt_usr_id       = 'APCHEMS'                                                                                                                    
						        , upt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                                                                                
					        where cd_grp_no = 'CH00000008'
					          and cd = #{matkl} returning *
				        )
        insert
		    into tb_co_mlang (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		      (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
		    , 'KO'
		    , 'CD'
		    , 'CO'
		    , #{wgbez}
		    , #{wgbez}
		    , 'CH00000008'
		    , #{matkl}
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		where not exists(select 1 from mlang)
    </insert>
    
    <insert id="insertEnMtrlMlang" parameterType="sqlMap">
        /* insertEnMtrlMlang */
        with mlang as ( update tb_co_mlang set
                                  mlang_no         = (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
						        , lang_cd          = 'KO'                                                                                                                         
						        , mlang_type_cd    = 'CD'                                                                                                                         
						        , biz_cd           = 'CO'                                                                                                                         
						        , mlang_cntn       = #{wgbez}                                                                                                                     
						        , mlang_abbr       = #{wgbez}                                                                                                                     
						        , cd_grp_no        = 'CH00000008'                                                                                                                 
						        , cd               = #{matkl}                                                                                                                     
						        , crt_usr_id       = 'APCHEMS'                                                                                                                    
						        , crt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                           
						        , upt_usr_id       = 'APCHEMS'                                                                                                                    
						        , upt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                                                                                
					        where cd_grp_no = 'CH00000008'
					          and cd = #{matkl} returning *
				        )
        insert
		    into tb_co_mlang (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		      (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
		    , 'EN'
		    , 'CD'
		    , 'CO'
		    , #{wgbez}
		    , #{wgbez}
		    , 'CH00000008'
		    , #{matkl}
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		where not exists(select 1 from mlang)
    </insert>
    
    <insert id="insertZhMtrlMlang" parameterType="sqlMap">
        /* insertZhMtrlMlang */
        with mlang as ( update tb_co_mlang set
                                  mlang_no         = (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
						        , lang_cd          = 'KO'                                                                                                                         
						        , mlang_type_cd    = 'CD'                                                                                                                         
						        , biz_cd           = 'CO'                                                                                                                         
						        , mlang_cntn       = #{wgbez}                                                                                                                     
						        , mlang_abbr       = #{wgbez}                                                                                                                     
						        , cd_grp_no        = 'CH00000008'                                                                                                                 
						        , cd               = #{matkl}                                                                                                                     
						        , crt_usr_id       = 'APCHEMS'                                                                                                                    
						        , crt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                           
						        , upt_usr_id       = 'APCHEMS'                                                                                                                    
						        , upt_dt           = to_char(now(), 'yyyymmddhh24miss')                                                                                                                                                
					        where cd_grp_no = 'CH00000008'
					          and cd = #{matkl} returning *
				        )
        insert
		    into tb_co_mlang (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		      (select 'CD' || lpad(max(replace(mlang_no,'CD','')::integer + 1)::varchar,8,'0') from tb_co_mlang where mlang_type_cd = 'CD')
		    , 'ZH'
		    , 'CD'
		    , 'CO'
		    , #{wgbez}
		    , #{wgbez}
		    , 'CH00000008'
		    , #{matkl}
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		    , 'APCHEMS'
		    , to_char(now(), 'yyyymmddhh24miss')
		where not exists(select 1 from mlang)
    </insert>
    
    <insert id="insertMtrlMstMtrl" parameterType="sqlMap">
        /* insertMtrlMstMtrl */
        with mtrl_mst as ( update tb_co_mtrl set
                                  mtrl_no                       =   #{matnr}                                                                                                                       
						        , rglt_chk_wkpl_id              =   #{wkpl_id}                                                                                                                     
						        , mtrl_clsf_cd                  =   '1'                                                                                  -- mtrl_clsf_cd 원료                        
						        , mtrl_kind_cd                  =   case when #{zzitem_code} = 'ICS' or #{zzitem_code} = 'IIS' or #{zzitem_code} = 'HIS' or #{zzitem_code} = 'IOS' then '2' else '1' end     -- mtrl_kind_cd 원료/향                      
						        , mtrl_type_cd                  =   #{mtart}                  -- mtrl_type_cd 자재 유형                                                                                
						        , mtrl_grp_cd                   =   #{matkl}                  -- mtrl_grp_cd  자재 그룹                                                                                
						        , macl_cd                       =   #{zzitem_code}               -- macl_cd      품목 구분                                                                             
						        , mtrl_ko_nm                    =   case when length(#{maktx_ko}) <![CDATA[<]]> 2 then #{maktx_en} else #{maktx_ko} end -- mtrl_ko_nm   자재 국문 명 없으면 영문명                                           
						        , mtrl_en_nm                    =   case when length(#{maktx_en}) <![CDATA[<]]> 2 then #{maktx_ko} else #{maktx_en} end -- mtrl_en_nm   자재 영문 명 없으면 국문명                                           
						        , mtrl_zh_nm                    =   case when length(#{maktx_zh}) <![CDATA[<]]> 2 then #{maktx_en} else #{maktx_zh} end -- mtrl_zh_nm   자재 중국 명 없으면 영문명                                           
						        , mtrl_reg_usr_id               =   #{usr_id}                  -- mtrl_reg_usr_id 자재 등록 사용자 사번 - 티움넷 값으로 다시 업데이트 한다.(등록 요청한 사람의 사번으로 변경)                            
						        , mtrl_reg_da                   =   #{ersda}                  -- mtrl_reg_da     자재 등록 일자                                                                          
						        , oem_odm_yn                    =   #{zzodm}                  -- oem_odm_yn      OEM/ODM 여부                                                                        
						        , qdrg_yn                       =   #{zzsanit}                -- qdrg_yn         의약외품 여부                                                                           
						        , imk_item_no                   =   null                      -- imk_item_no     IMK 아이템 번호                                                                        
						        , imk_item_ctgr_cd              =   null                      -- imk_item_ctgr_cd                                                                                  
						        , imk_item_ctgr_nm              =   null                      -- imk_item_ctgr_nm                                                                                  
						        , rglt_chk_req_yn               =   'N'                       -- rglt_chk_req_yn                                                                                   
						        , rglt_chk_yn                   =   'N'                       -- rglt_chk_yn                                                                                       
						        , rglt_chk_no                   =   '000000000000'            -- rglt_chk_no                                                                                       
						        , msds_rev_no                   =   ''                        -- msds_rev_no                                                                                       
						        , mtrl_puse_cd                  =   ''                        -- mtrl_puse_cd                                                                                      
						        , mtrl_puse_cntn                =   ''                        -- mtrl_puse_cntn
						        , pchs_unit_nm                  =   ''                        -- pchs_unit_nm
						        , pchs_unit_nweght_qty          =   0                         -- pchs_unit_nweght_qty                                                                              
						        , phase_cd                      =   ''                        -- phase_cd                                                                                          
						        , impt_yn                       =   'N'                       -- impt_yn                                                                                           
						        , usg_yn                        =   'Y'                       -- usg_yn                                                                                            
						        , del_yn                        =   'N'                       -- del_yn
						        , upt_usr_id                    =   #{usr_id}   			  -- upt_usr_id
						        , upt_dt                        =   #{laeda} || '000000'      -- upt_dt
						        , imp_yn                        =   #{imp_yn}   			  -- imp_yn
						        , sbms_tgt_yn                   =   #{sbms_tgt_yn}            -- sbms_tgt_yn
					        where mtrl_no = #{matnr} returning *
				        )
        insert
		    into tb_co_mtrl (
		          mtrl_no
		        , rglt_chk_wkpl_id
		        , mtrl_clsf_cd
		        , mtrl_kind_cd
		        , mtrl_type_cd
		        , mtrl_grp_cd
		        , macl_cd
		        , mtrl_ko_nm
		        , mtrl_en_nm
		        , mtrl_zh_nm
		        , mtrl_reg_usr_id
		        , mtrl_reg_da
		        , oem_odm_yn
		        , qdrg_yn
		        , imk_item_no
		        , imk_item_ctgr_cd
		        , imk_item_ctgr_nm
		        , rglt_chk_req_yn
		        , rglt_chk_yn
		        , rglt_chk_no
		        , msds_rev_no
		        , mtrl_puse_cd
		        , mtrl_puse_cntn
		        , pchs_unit_nm
		        , pchs_unit_nweght_qty
		        , phase_cd
		        , impt_yn
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
				, imp_yn
				, sbms_tgt_yn
		    )
		select
		      #{matnr}
		    , #{wkpl_id}
		    , '1'                                                                                  -- mtrl_clsf_cd 원료
		    , case when #{zzitem_code} = 'ICS' or #{zzitem_code} = 'IIS' or #{zzitem_code} = 'HIS' or #{zzitem_code} = 'IOS' then '2' else '1' end     -- mtrl_kind_cd 원료/향
		    , #{mtart}                  -- mtrl_type_cd 자재 유형
		    , #{matkl}                  -- mtrl_grp_cd  자재 그룹
		    , #{zzitem_code}               -- macl_cd      품목 구분
		    , case when length(#{maktx_ko}) <![CDATA[<]]> 2 then #{maktx_en} else #{maktx_ko} end -- mtrl_ko_nm   자재 국문 명 없으면 영문명
		    , case when length(#{maktx_en}) <![CDATA[<]]> 2 then #{maktx_ko} else #{maktx_en} end -- mtrl_en_nm   자재 영문 명 없으면 국문명
		    , case when length(#{maktx_zh}) <![CDATA[<]]> 2 then #{maktx_en} else #{maktx_zh} end -- mtrl_zh_nm   자재 중국 명 없으면 영문명
		    , #{usr_id}                  -- mtrl_reg_usr_id 자재 등록 사용자 사번 - 티움넷 값으로 다시 업데이트 한다.(등록 요청한 사람의 사번으로 변경)
		    , #{ersda}                  -- mtrl_reg_da     자재 등록 일자
		    , #{zzodm}                  -- oem_odm_yn      OEM/ODM 여부
		    , #{zzsanit}                -- qdrg_yn         의약외품 여부
		    , null                      -- imk_item_no     IMK 아이템 번호
		    , null                      -- imk_item_ctgr_cd
		    , null                      -- imk_item_ctgr_nm
		    , 'N'                       -- rglt_chk_req_yn
		    , 'N'                       -- rglt_chk_yn          
		    , '000000000000'            -- rglt_chk_no
		    , ''                        -- msds_rev_no
		    , ''                        -- mtrl_puse_cd
		    , ''                        -- mtrl_puse_cntn
		    , ''                        -- pchs_unit_nm
		    , 0                         -- pchs_unit_nweght_qty
		    , ''                        -- phase_cd
		    , 'N'                       -- impt_yn
		    , 'Y'                       -- usg_yn
		    , 'N'                       -- del_yn
		    , #{usr_id}      			-- crt_usr_id
		    , #{laeda} || '000000'     	-- crt_dt
		    , #{usr_id}       			-- upt_usr_id
		    , #{laeda} || '000000'    	-- upt_dt
		    , #{imp_yn}   			  	-- imp_yn
			, #{sbms_tgt_yn}            -- sbms_tgt_yn
		where not exists(select 1 from mtrl_mst)
    </insert>
    
    <update id="updateMtrlMstMtrl" parameterType="sqlMap">
        /* updateMtrlMstMtrl */
        update tb_co_mtrl
		   set mtrl_grp_cd      = #{matkl}
		     , mtrl_type_cd     = #{mtart}
		     , macl_cd          = #{zzitem_code}
		     , mtrl_ko_nm       = #{maktx_ko}
		     , mtrl_en_nm       = #{maktx_en}
		     , mtrl_zh_nm       = #{maktx_zh}
		     , mtrl_reg_usr_id  = #{usr_id}
		     , mtrl_reg_da      = #{ersda}
		     , oem_odm_yn       = #{zzodm}
		     , qdrg_yn          = #{zzsanit}
		     , pchs_unit_nm     = #{meins}
		     , usg_yn           = case when #{reg_cd} = 'D' then 'N' else 'Y' end
		     , upt_dt           = #{laeda} || '000000'
		     , upt_usr_id       = #{usr_id}
			 , imp_yn           = #{imp_yn}
			 , sbms_tgt_yn      = #{sbms_tgt_yn}
		 where mtrl_no = #{matnr}
    </update>
    
    <update id="updateMtrlMstMsds" parameterType="sqlMap">
        /* updateMtrlMstMsds */
        update tb_co_mtrl
		   set imp_yn      = #{imp_yn}
			 , sbms_tgt_yn = #{sbms_tgt_yn}
		 where mtrl_no     = #{mtrl_no}
    </update>
    
    <update id="mergeMtrlSiteInfo" parameterType="sqlMap">
        /* mergeMtrlSiteInfo */
        with mtrlplant as 
		      (update tb_co_mtrl_site set
		              wkpl_id = #{wkpl_id}
		            , plant_cd = #{werks}
		            , del_yn = 'N'
		            , upt_usr_id = #{usr_id}
		            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
		        where mtrl_no = #{matnr}
		          and wkpl_id = #{wkpl_id}
		       returning *
		      )
		      insert into tb_co_mtrl_site
		                 ( mtrl_no
		                 , wkpl_id
		                 , plant_cd
		                 , del_yn
		                 , crt_usr_id
		                 , crt_dt
		                 , upt_usr_id
		                 , upt_dt)
		           select  #{matnr}
		                 , #{wkpl_id}
		                 , #{werks}
		                 , 'N'
		                 , #{usr_id}
		                 , to_char(now(),'YYYYMMDDHH24MISS')
		                 , #{usr_id}
		                 , to_char(now(),'YYYYMMDDHH24MISS')
		            where not exists(select 1 from mtrlplant)
    </update>
	
	<select id="selectMtrlChkKey" parameterType="sqlMap" resultType="string">
		/* selectMtrlChkKey */
		select (to_char(now(),'YYMMDD') || lpad(coalesce((select max(substring(rglt_chk_no,7,12)::integer + 1) from tb_ch_rglt_chk_mtrl where rglt_chk_no like to_char(now(),'YYMMDD') || '%'),1)::varchar,6,'0')) as rglt_chk_no
	      from tb_co_mtrl
	     where mtrl_no = #{mtrl_no}
	</select>
	
	<update id="updateMtrlSucc" parameterType="sqlMap">
        /* updateMtrlSucc */
        update ti_co_mtrl_sap_recv 
           set trn_yn = 'Y' 
             , trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
         where datetime = #{datetime}
           and zseq = #{zseq}
    </update>
    
    <select id="selectRgltMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltMtrlList */
		select a.mtrl_no
		     , a.rglt_chk_wkpl_id 
		     , a.mtrl_kind_cd
		     , a.mtrl_reg_usr_id
		     , a.mtrl_reg_da || '000000' as mtrl_reg_da
		  from tb_co_mtrl a
		 where a.rglt_chk_req_yn = 'N'
		   and not exists (select 0
							 from tb_co_cd tcc
							where tcc.cd_grp_no = 'CH00000030'
							  and tcc.del_yn = 'N'
							  and tcc.cd = a.imk_item_no)
	</select>
	
	<select id="selectImkAtfileNo" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkAtfileNo */
		select imk_atfl_no
		  from tb_co_mtrl
		 where mtrl_no = #{mtrl_no}
		   and imk_atfl_no is not null
	</select>
	
	<insert id="insertRgltMtrl" parameterType="sqlMap">
        /* insertRgltMtrl */
        insert into tb_ch_rglt_chk_mtrl (  
        			   rglt_chk_no
		             , chk_req_clsf_cd
		             , mtrl_no
		             , mtrl_clsf_cd
		             , mtrl_kind_cd
		             , mtrl_type_cd
		             , mtrl_grp_cd
		             , macl_cd
		             , mtrl_ko_nm
		             , mtrl_en_nm
		             , mtrl_zh_nm
		             , mtrl_reg_usr_id
		             , mtrl_reg_da
		             , oem_odm_yn
		             , qdrg_yn
		             , imk_item_no
		             , imk_item_ctgr_cd
		             , imk_item_ctgr_nm
		             , msds_rev_no
		             , mtrl_puse_cd
		             , mtrl_puse_cntn
		             , pchs_unit_cd
		             , pchs_unit_nm
		             , pchs_unit_weght
		             , pchs_unit_nweght_qty
		             , mtrl_fspt_infr_estn_yn
		             , mtrl_fspt_vl
		             , phase_cd
		             , impt_yn
		             , usg_yn
		             , del_yn
		             , crt_usr_id
		             , crt_dt
		             , upt_usr_id
		             , upt_dt
		            )
		        select #{rglt_chk_no}
		             , #{chk_req_clsf_cd}
		             , mtrl_no
		             , mtrl_clsf_cd
		             , mtrl_kind_cd
		             , mtrl_type_cd
		             , mtrl_grp_cd
		             , macl_cd
		             , mtrl_ko_nm
		             , mtrl_en_nm
		             , mtrl_zh_nm
		             , mtrl_reg_usr_id
		             , mtrl_reg_da
		             , oem_odm_yn
		             , qdrg_yn
		             , imk_item_no
		             , imk_item_ctgr_cd
		             , imk_item_ctgr_nm
		             , msds_rev_no
		             , mtrl_puse_cd
		             , mtrl_puse_cntn
		             , pchs_unit_cd
		             , pchs_unit_nm
		             , pchs_unit_weght
		             , pchs_unit_nweght_qty
		             , mtrl_fspt_infr_estn_yn
		             , mtrl_fspt_vl
		             , phase_cd
		             , impt_yn
		             , usg_yn
		             , del_yn
		             , crt_usr_id
		             , crt_dt
		             , upt_usr_id
		             , upt_dt
		          from tb_co_mtrl
		         where mtrl_no = #{mtrl_no}
    </insert>
    
    <insert id="insertRgltReqMtrl" parameterType="sqlMap">
        /* insertRgltReqMtrl */
        insert
		    into tb_ch_rglt_chk_req (
		          rglt_chk_no
		        , chk_req_clsf_cd
		        , wkpl_id
		        , rglt_chk_req_usr_id
		        , rglt_chk_req_da
		        , rglt_chk_req_prog_stt_cd
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		   select #{rglt_chk_no}
		        , '1' as chk_req_clsf_cd
		        , rglt_chk_wkpl_id
		        , #{usr_id}
		        , null 
		        , '10'
		        , 'N'
		        , #{usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , #{usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		     from tb_co_mtrl
		    where mtrl_no = #{mtrl_no}
    </insert>
    
    <insert id="insertRgltChkMtrl" parameterType="sqlMap">
        /* insertRgltChkMtrl */
        insert 
		    into tb_ch_rglt_chk (
		         rglt_chk_no
		       , chk_req_clsf_cd
		       , chk_type_cd
		       , wkpl_id
		       , rglt_chk_prog_stt_cd
		       , aprv_no
		       , aprv_crt_dt
		       , aprv_cmpt_dt
		       , re_chk_cau_cntn
		       , del_yn
		       , crt_usr_id
		       , crt_dt
		       , upt_usr_id
		       , upt_dt
		       , rglt_chk_req_da
		       , rglt_chk_req_usr_id)
		   select #{rglt_chk_no}
		        , '2'
		        , '1'
		        , rglt_chk_wkpl_id
		        , '30'
		        , null
		        , null
		        , null
		        , null
		        , 'N'
		        , #{usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , #{usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , to_char(now(),'YYYYMMDD')
		        , #{usr_id}
		     from tb_co_mtrl
		    where mtrl_no = #{mtrl_no}
    </insert>
    
    <update id="updateRgltSucc" parameterType="sqlMap">
        /* updateRgltSucc */
        update tb_co_mtrl 
           set rglt_chk_req_yn = 'Y' 
              ,rglt_chk_no = #{rglt_chk_no}
         where mtrl_no = #{mtrl_no}
    </update>
    
    <select id="selectRgltReqUserList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltReqUserList */
		select distinct rglt_chk_req_usr_id
			  ,(select lang_cd from tb_co_user where usr_id = rglt_chk_req_usr_id) as lang_cd
		from tb_ch_rglt_chk_req
		where email_send_yn = 'N'
		  and del_yn = 'N'
	</select>
	
	<select id="selectRgltDataList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltDataList */
		select distinct mtrl_no
		      ,case when #{SESS_LANG} = 'KO' then mtrl_ko_nm 
		            when #{SESS_LANG} = 'EN' then mtrl_en_nm
		            else mtrl_zh_nm end as mtrl_nm
			  ,rglt_chk_req_usr_id
		      ,mtrl_reg_da
		      ,tcrcr.rglt_chk_no
		      ,tcrcm.mtrl_kind_cd
		from tb_ch_rglt_chk_req tcrcr
		join tb_ch_rglt_chk_mtrl tcrcm
		on tcrcr.rglt_chk_no = tcrcm.rglt_chk_no 
		where email_send_yn = 'N'
		  and tcrcr.del_yn = 'N'
		  and tcrcm.del_yn = 'N'
		  and rglt_chk_req_usr_id = #{usr_id}
	</select>
	
	<update id="updateRgltReqBatStt" parameterType="sqlMap">
        /* updateRgltReqBatStt */
        update tb_ch_rglt_chk_req 
	       set email_send_yn = 'Y'
	     where rglt_chk_req_usr_id = #{usr_id}
	       and email_send_yn = 'N'
	       and del_yn = 'N'
    </update>
    
    <select id="selectRgltChkUserList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltChkUserList */
		select usr_id 
		      ,(select lang_cd from tb_co_user tcu where tcu.usr_id = tcbp.usr_id) as lang_cd
		      ,cnct_1st_cd as wkpl_id
		from tb_co_biz_pc tcbp
		where biz_pc_grp_cd = 'BG00001'
		  and usg_yn = 'Y'
		  and del_yn = 'N'
	</select>
	
	<select id="selectRgltChkDataList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltChkDataList */
		select mtrl_no 
		      ,case when #{SESS_LANG} = 'KO' then mtrl_ko_nm 
				            when #{SESS_LANG} = 'EN' then mtrl_en_nm
				            else mtrl_zh_nm end as mtrl_nm
			  ,mtrl_reg_da
			  ,tcrc.rglt_chk_no 
		from tb_ch_rglt_chk tcrc
		join tb_ch_rglt_chk_mtrl tcrcm
		on tcrc.rglt_chk_no = tcrcm.rglt_chk_no 
		where tcrc.email_send_yn = 'N'
		  and tcrc.del_yn = 'N'
		  and tcrcm.del_yn = 'N'
		  and tcrc.wkpl_id = #{wkpl_id}
	</select>
	
	<update id="updateRgltChkBatStt" parameterType="sqlMap">
        /* updateRgltChkBatStt */
        update tb_ch_rglt_chk 
		   set email_send_yn = 'Y'
		 where wkpl_id = #{wkpl_id}
		   and del_yn = 'N'
		   and email_send_yn = 'N'
    </update>
    
    <select id="selectNewMsdsMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectNewMsdsMtrlList */
		select a.mtrl_cd
			  ,b.mtrl_no
		      ,a.req_usr_id
		      ,a.recv_dt
		      ,a.rev_ko_reason as rev_cau_cntn
		      ,a.msds_file_ko_url
		      ,a.msds_file_ko_ver
		      ,a.msds_file_ko_nm
		      ,a.msds_file_ko_size
		      ,a.msds_file_en_url
		      ,a.msds_file_en_ver
		      ,a.msds_file_en_nm
		      ,a.msds_file_en_size
		      ,b.rglt_chk_yn
		      ,b.rglt_chk_no 
		      ,a.recv_dt
		      ,a.recv_seq
		      ,a.imp_yn
		      ,a.sbms_tgt_yn
		  from ti_ch_msds_tiumnet_recv a
		  join tb_co_mtrl b on a.mtrl_cd = b.mtrl_no
		  left outer join tb_ch_rglt_chk_req c on b.rglt_chk_no = c.rglt_chk_no
		  left outer join tb_ch_rglt_chk d on b.rglt_chk_no = d.rglt_chk_no
		 where a.trn_yn = 'N'
		   and b.rglt_chk_yn = 'N'
		   and a.msds_file_ko_nm is not null
		   and not exists (select 1 from tb_ch_msds_rev c where a.mtrl_cd=c.mtrl_no and c.rev_prog_stt_cd in ('10','20','30','40') and c.del_yn = 'N') -- MSDS 개정 중 자재 제외
	</select>
	
	<select id="selectAtfileKey" parameterType="sqlMap" resultType="string">
		/* selectAtfileKey */
		select nextval('tb_co_atfl_seq') as ko_atfl_no
	</select>
	
	<insert id="insertAtfileKoMetaData" parameterType="sqlMap">
        /* insertAtfileKoMetaData */
        insert into tb_co_atfl 
		            (atfl_no
		           , atfl_seq
		           , atfl_nm
		           , atfl_url
		           , atfl_size
		           , atfl_note
		           , pub_yn
		           , ext_yn
		           , crt_usr_id
		           , crt_dt
		           , upt_usr_id
		           , upt_dt)
		values ( #{ko_atfl_no}::Integer
		      ,1
		      ,#{msds_file_ko_nm}
		      ,#{msds_file_ko_url}
		      ,#{msds_file_ko_size}
		      ,null
		      ,'Y'
		      ,'Y'
		      ,#{rev_usr_id}
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,#{rev_usr_id}
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      )
    </insert>
    
    <insert id="insertAtfileEnMetaData" parameterType="sqlMap">
        /* insertAtfileEnMetaData */
        insert into tb_co_atfl 
		            (atfl_no
		           , atfl_seq
		           , atfl_nm
		           , atfl_url
		           , atfl_size
		           , atfl_note
		           , pub_yn
		           , ext_yn
		           , crt_usr_id
		           , crt_dt
		           , upt_usr_id
		           , upt_dt)
		values ( #{en_atfl_no}::Integer
		      ,1
		      ,#{msds_file_en_nm}
		      ,#{msds_file_en_url}
		      ,#{msds_file_en_size}
		      ,null
		      ,'Y'
		      ,'Y'
		      ,#{rev_usr_id}
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,#{rev_usr_id}
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      )
    </insert>
    
    <insert id="insertRgltChkMsds" parameterType="sqlMap">
        /* insertRgltChkMsds */
        with mtrlList as (update tb_ch_rglt_chk_msds
        				set rglt_chk_no = #{rglt_chk_no}
        				   ,chk_req_clsf_cd = #{chk_req_clsf_cd}
        				   ,mtrl_no = #{mtrl_no}
        				   ,msds_ver = #{msds_ver}
        				   ,enact_da = #{enact_da}
        				   ,rev_da = #{rev_da}
        				   ,reg_da = #{reg_da}
        				   ,reg_usr_id = #{reg_usr_id}
        				   ,ko_atfl_no = #{ko_atfl_no}::Integer
        				   ,en_atfl_no = #{en_atfl_no}::Integer
        				   ,del_yn = #{del_yn}
        				   ,crt_usr_id = #{crt_usr_id}
        				   ,crt_dt = #{crt_dt}
        				   ,upt_usr_id = #{upt_usr_id}
        				   ,upt_dt = #{upt_dt}
        		      where rglt_chk_no = #{rglt_chk_no}
        		        and chk_req_clsf_cd = #{chk_req_clsf_cd}
        		        and mtrl_no = #{mtrl_no}
        		      returning *)
        insert into tb_ch_rglt_chk_msds
		            (rglt_chk_no
		           , chk_req_clsf_cd
		           , mtrl_no
		           , msds_ver
		           , enact_da
		           , rev_da
		           , reg_da
		           , reg_usr_id
		           , ko_atfl_no
		           , en_atfl_no
		           , del_yn
		           , crt_usr_id
		           , crt_dt
		           , upt_usr_id
		           , upt_dt
		           ) 
		           select
		            #{rglt_chk_no}
		           ,#{chk_req_clsf_cd}
		           ,#{mtrl_no}
		           ,#{msds_ver}
		           ,#{enact_da}
		           ,#{rev_da}
		           ,#{reg_da}
		           ,#{reg_usr_id}
		           ,#{ko_atfl_no}::Integer
		           ,#{en_atfl_no}::Integer
		           ,#{del_yn}
		           ,#{crt_usr_id}
		           ,#{crt_dt}
		           ,#{upt_usr_id}
		           ,#{upt_dt}
		          where not exists (select 1 from mtrlList)
    </insert>
    
    <select id="selectMsdsReqList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsReqList */
		select a.mtrl_cd
		      ,b.mtrl_no
		      ,b.mtrl_ko_nm
		      ,b.mtrl_en_nm
		      ,b.mtrl_zh_nm
		      ,b.rglt_chk_wkpl_id
		      --,c.msds_rev_no as msds_rev_bf_no
		      ,d.enact_da as rev_bf_enact_da
		      ,d.rev_da as rev_bf_last_rev_da
		      ,d.msds_ver as msds_rev_bf_no
		      --,c.rev_af_ko_atfl_no as rev_bf_ko_atfl_no
		      ,d.ko_atfl_no as rev_bf_ko_atfl_no
		      --,c.rev_af_en_atfl_no as rev_bf_en_atfl_no
		      ,d.en_atfl_no as rev_bf_en_atfl_no
		      ,(select tca.atfl_nm from tb_co_atfl tca where tca.atfl_no = d.ko_atfl_no) as rev_bf_ko_atfl_nm
		      ,(select tca.atfl_nm from tb_co_atfl tca where tca.atfl_no = d.en_atfl_no) as rev_bf_en_atfl_nm
		      ,coalesce(a.rev_ko_userid, a.rev_en_userid) as rev_usr_id
		      ,(select tcu.lang_cd from tb_co_user tcu where coalesce(a.rev_ko_userid, a.rev_en_userid) = tcu.usr_id) as lang_cd
		      ,a.recv_dt
		      ,a.rev_ko_reason as rev_cau_cntn
		      ,a.msds_file_ko_url
		      ,a.msds_file_ko_ver
		      ,a.msds_file_ko_nm
		      ,a.msds_file_ko_size
		      ,a.msds_file_en_url
		      ,a.msds_file_en_ver
		      ,a.msds_file_en_nm
		      ,a.msds_file_en_size
		      ,b.rglt_chk_yn
		      ,b.rglt_chk_no
		      ,a.recv_dt
		      ,a.recv_seq
		      ,a.imp_yn
		      ,a.sbms_tgt_yn
		  from ti_ch_msds_tiumnet_recv a
		  join tb_co_mtrl b on a.mtrl_cd = b.mtrl_no
		  join tb_ch_mtrl_msds d on b.mtrl_no = d.mtrl_no
		  left outer join tb_ch_msds_rev c on b.mtrl_no = c.mtrl_no and c.chk_req_clsf_cd = '2' and c.msds_rev_no = (select max(d.msds_rev_no) from tb_ch_msds_rev d where c.mtrl_no = d.mtrl_no and d.rev_prog_stt_cd = '50')
		 where 1=1
		   and coalesce(a.rev_ko_userid, a.rev_en_userid) is not null 
		   and exists (select 1 from tb_co_user tcu
		                where tcu.usr_id = coalesce(a.rev_ko_userid, a.rev_en_userid))
		   and a.trn_yn = 'N'
		   and b.rglt_chk_yn = 'Y'
		   and not exists (select 1 from tb_ch_msds_rev c where a.mtrl_cd=c.mtrl_no and c.rev_prog_stt_cd in ('10','20','30','40') and c.del_yn = 'N') -- MSDS 개정 중 자재 제외
	</select>
	
	<select id="selectMsdsReqKey" parameterType="sqlMap" resultType="string">
		/* selectMsdsReqKey */
		select to_char(now(),'YYMMDD') || coalesce((select lpad((substring(max(msds_rev_no),7,6)::integer + 1)::varchar,6,'0') from tb_ch_msds_rev where msds_rev_no like to_char(now(),'YYMMDD') || '%'), '000001') as msds_rev_no
	</select>
	
	<insert id="insertRgltMsdsReq" parameterType="sqlMap">
        /* insertRgltMsdsReq */
        insert
		    into
		    tb_ch_msds_rev (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , rev_wkpl_id
		        , rev_bf_enact_da
		        , rev_af_enact_da
		        , rev_bf_last_rev_da
		        , rev_af_last_rev_da
		        , rev_bf_ver
		        , rev_af_ver
		        , rev_af_ko_atfl_no
		        , rev_bf_ko_atfl_no
		        , rev_af_en_atfl_no
		        , rev_bf_en_atfl_no
		        , req_da
		        , req_usr_id
		        , rev_prog_stt_cd
		        , rev_chk_usr_id
		        , rev_chk_cntn
		        , rev_chk_dt
		        , rev_chk_rejc_usr_id
		        , rev_chk_rejc_cntn
		        , rev_chk_rejc_dt
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select #{msds_rev_no}
		     , '1'
		     , #{mtrl_cd}
		     , #{rglt_chk_wkpl_id}
		     , #{rev_bf_enact_da}
		     , (select rev_af_enact_da from tb_ch_msds_rev where msds_rev_no = #{msds_rev_bf_no} and chk_req_clsf_cd = '2')
		     , #{rev_bf_last_rev_da}
		     , null
		     , #{msds_rev_bf_no}
		     , null
		     , #{ko_atfl_no}::Integer
		     , #{rev_bf_ko_atfl_no}
		     , #{en_atfl_no}::Integer
		     , #{rev_bf_en_atfl_no}
		     , to_char(now(),'YYYYMMDD')
		     , #{rev_usr_id}
		     , '20'
		     , null 
		     , null 
		     , null
		     , null
		     , null
		     , null
		     , 'N'
		     , #{rev_usr_id}
		     , to_char(now(),'YYYYMMDDHH24MISS')
		     , #{rev_usr_id}
		     , to_char(now(),'YYYYMMDDHH24MISS')
    </insert>
    
    <insert id="insertAlertMsds" parameterType="sqlMap">
        /* insertAlertMsds */
        insert
		    into
		    tb_ch_msds_rev_gwsgn (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , sgw_cd
		        , hars_cntn
		        , prv_cntn
		        , act_cntn
		        , str_cntn
		        , scr_cntn
		        , vndr_no
		        , vndr_nm
		        , vndr_type_cd
		        , nat_cd
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		        )
		select #{msds_rev_no}
		        , '1' as chk_req_clsf_cd
		        , a.mtrl_no
		        , a.sgw_cd
		        , a.hars_cntn
		        , a.prv_cntn
		        , a.act_cntn
		        , a.str_cntn
		        , a.scr_cntn
		        , a.vndr_no
		        , b.vndr_nm
		        , b.vndr_type_cd
		        , b.nat_cd
		        , 'N' as del_yn
		        , #{rev_usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , #{rev_usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		  from tb_ch_mtrl_gwsgn a
		  join tb_co_vndr b on a.vndr_no = b.vndr_no
		 where mtrl_no = #{mtrl_no}
    </insert>
    
    <insert id="insertPicMsds" parameterType="sqlMap">
        /* insertPicMsds */
        insert
		    into
		    tb_ch_msds_rev_gwsgn_picg (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , picg_cd
		        , print_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		     #{msds_rev_no}
		    , '1'
		    , mtrl_no
		    , picg_cd
		    , print_yn
		    , del_yn
		    , crt_usr_id
		    , crt_dt
		    , upt_usr_id
		    , upt_dt
		 from tb_ch_mtrl_gwsgn_picg
		where mtrl_no = #{mtrl_no}
    </insert>
    
	<insert id="insertRgltMsdsReqTwo" parameterType="sqlMap">
        /* insertRgltMsdsReqTwo */
        insert
		    into
		    tb_ch_msds_rev (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , rev_wkpl_id
		        , rev_bf_enact_da
		        , rev_af_enact_da
		        , rev_bf_last_rev_da
		        , rev_af_last_rev_da
		        , rev_bf_ver
		        , rev_af_ver
		        , rev_af_ko_atfl_no
		        , rev_bf_ko_atfl_no
		        , rev_af_en_atfl_no
		        , rev_bf_en_atfl_no
		        , req_da
		        , req_usr_id
		        , rev_prog_stt_cd
		        , rev_chk_usr_id
		        , rev_chk_cntn
		        , rev_chk_dt
		        , rev_chk_rejc_usr_id
		        , rev_chk_rejc_cntn
		        , rev_chk_rejc_dt
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select #{msds_rev_no}
		     , '2'
		     , #{mtrl_cd}
		     , #{rglt_chk_wkpl_id}
		     , #{rev_bf_enact_da}
		     , (select rev_af_enact_da from tb_ch_msds_rev where msds_rev_no = #{msds_rev_bf_no} and chk_req_clsf_cd = '2')
		     , #{rev_bf_last_rev_da}
		     , null
		     , #{msds_rev_bf_no}
		     , null
		     , #{ko_atfl_no}::Integer
		     , #{rev_bf_ko_atfl_no}
		     , #{en_atfl_no}::Integer
		     , #{rev_bf_en_atfl_no}
		     , to_char(now(),'YYYYMMDD')
		     , #{rev_usr_id}
		     , '20'
		     , null 
		     , null 
		     , null
		     , null
		     , null
		     , null
		     , 'N'
		     , #{rev_usr_id}
		     , to_char(now(),'YYYYMMDDHH24MISS')
		     , #{rev_usr_id}
		     , to_char(now(),'YYYYMMDDHH24MISS')
    </insert>
    
    <insert id="insertAlertMsdsTwo" parameterType="sqlMap">
        /* insertAlertMsdsTwo */
        insert
		    into
		    tb_ch_msds_rev_gwsgn (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , sgw_cd
		        , hars_cntn
		        , prv_cntn
		        , act_cntn
		        , str_cntn
		        , scr_cntn
		        , vndr_no
		        , vndr_nm
		        , vndr_type_cd
		        , nat_cd
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		        )
		select #{msds_rev_no}
		        , '2' as chk_req_clsf_cd
		        , a.mtrl_no
		        , a.sgw_cd
		        , a.hars_cntn
		        , a.prv_cntn
		        , a.act_cntn
		        , a.str_cntn
		        , a.scr_cntn
		        , a.vndr_no
		        , b.vndr_nm
		        , b.vndr_type_cd
		        , b.nat_cd
		        , 'N' as del_yn
		        , #{rev_usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , #{rev_usr_id}
		        , to_char(now(),'YYYYMMDDHH24MISS')
		  from tb_ch_mtrl_gwsgn a
		  join tb_co_vndr b on a.vndr_no = b.vndr_no
		 where mtrl_no = #{mtrl_no}
    </insert>
    
    <insert id="insertPicMsdsTwo" parameterType="sqlMap">
        /* insertPicMsdsTwo */
        insert
		    into
		    tb_ch_msds_rev_gwsgn_picg (
		          msds_rev_no
		        , chk_req_clsf_cd
		        , mtrl_no
		        , picg_cd
		        , print_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select
		     #{msds_rev_no}
		    , '2'
		    , mtrl_no
		    , picg_cd
		    , print_yn
		    , del_yn
		    , crt_usr_id
		    , crt_dt
		    , upt_usr_id
		    , upt_dt
		 from tb_ch_mtrl_gwsgn_picg
		where mtrl_no = #{mtrl_no}
    </insert>
    
    <update id="updateRgltChkSucc" parameterType="sqlMap">
        /* updateRgltChkSucc */
        update ti_ch_msds_tiumnet_recv 
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where recv_dt = #{recv_dt}
		   and recv_seq = #{recv_seq}
    </update>
    
    <select id="selectMsdsRgltUsrList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsRgltUsrList */
		select distinct usr
			  ,(select tcu.lang_cd from tb_co_user tcu where a.usr = tcu.usr_id) as lang_cd
		from
		(
			select tcmr.req_usr_id as usr
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('10', '30')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '1'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			union 
			select tcmr.rev_chk_usr_id as usr
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is not null
			union 
			select pc.usr_id as usr
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			join tb_co_biz_pc pc 
			  on pc.biz_pc_grp_cd = 'BG00003' and pc.usg_yn = 'Y' and pc.del_yn = 'N'
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is null
			 union
			 select case when rr.rglt_chk_req_usr_id is null then rm.mtrl_reg_usr_id 
			            else rr.rglt_chk_req_usr_id
			       end as usr -- 메일수신자 사번
			  from tb_ch_rglt_chk_req rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			 where rr.del_yn = 'N'
			   and rr.chk_req_clsf_cd = '1'
			   and rr.rglt_chk_req_prog_stt_cd in ('10','20','40')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			union
			select rd.rglt_chk_usr_id as usr -- 메일수신자 사번
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is not null
			union
			select pc.usr_id as usr -- 메일수신자 사번
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  join tb_co_biz_pc pc on pc.biz_pc_grp_cd = 'BG00001' and pc.usg_yn = 'Y' and pc.del_yn = 'N'
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is null
		) a 
		where exists (select 1 from tb_co_user usr
			where usr.usr_id = a.usr
			  and usr.del_yn = 'N'
			)
	</select>
	
	<select id="selectRgltList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltList */
		select a.rglt_chk_no
		      ,a.wkpl_nm
		      ,a.mtrl_no
		      ,a.mtrl_nm
		      ,a.crt_da
		      ,a.upt_da
		      ,a.rglt_chk_req_prog_stt_nm
		      ,a.email_recv_usr_id
		      ,a.url
		 from
			(
				select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no
			      ,rm.mtrl_kind_cd 
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_req_prog_stt_cd 
			      ,fn_get_cd('CH00000012',rr.rglt_chk_req_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_req_prog_stt_nm 
			      ,case when rr.rglt_chk_req_usr_id is null then rm.mtrl_reg_usr_id 
			            else rr.rglt_chk_req_usr_id
			       end as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkreqmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkreqimkedt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '4' then '/rgltchk/rgltchkreqimkedt/' || rr.rglt_chk_no
			       end as url-- 검토요청 상세 화면 주소
			  from tb_ch_rglt_chk_req rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			 where rr.del_yn = 'N'
			   and rr.chk_req_clsf_cd = '1'
			   and rr.rglt_chk_req_prog_stt_cd in ('10','20','40')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			UNION
			select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no 
			      ,rm.mtrl_kind_cd
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_prog_stt_cd
			      ,fn_get_cd('CH00000012',rr.rglt_chk_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_prog_stt_nm 
			      ,rd.rglt_chk_usr_id as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '1' or rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkimkedt/' || rr.rglt_chk_no
			       end -- 검토 상세 화면 주소
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is not null
			UNION
			select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no 
			      ,rm.mtrl_kind_cd
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_prog_stt_cd
			      ,fn_get_cd('CH00000012',rr.rglt_chk_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_prog_stt_nm 
			      ,pc.usr_id as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '1' or rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkimkedt/' || rr.rglt_chk_no
			       end -- 검토 상세 화면 주소
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  join tb_co_biz_pc pc on pc.biz_pc_grp_cd = 'BG00001' and pc.usg_yn = 'Y' and pc.del_yn = 'N' and pc.cnct_1st_cd = rr.wkpl_id
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is null
			 order by rglt_chk_no
			) a
		where email_recv_usr_id = #{usr}
	</select>
	
	<select id="selectRgltList2" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltList2 */
		select a.rglt_chk_no
		      ,a.wkpl_nm
		      ,a.mtrl_no
		      ,a.mtrl_nm
		      ,a.crt_da
		      ,a.upt_da
		      ,a.rglt_chk_req_prog_stt_nm
		      ,a.email_recv_usr_id
		      ,a.url
		 from
			(
				select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no
			      ,rm.mtrl_kind_cd 
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_req_prog_stt_cd 
			      ,fn_get_cd('CH00000012',rr.rglt_chk_req_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_req_prog_stt_nm 
			      ,case when rr.rglt_chk_req_usr_id is null then rm.mtrl_reg_usr_id 
			            else rr.rglt_chk_req_usr_id
			       end as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkreqmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkreqimkedt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '4' then '/rgltchk/rgltchkreqimkedt/' || rr.rglt_chk_no
			       end as url-- 검토요청 상세 화면 주소
			  from tb_ch_rglt_chk_req rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  left outer join tb_co_mtrl tcm on rm.mtrl_no = tcm.mtrl_no
			 where rr.del_yn = 'N'
			   and rr.chk_req_clsf_cd = '1'
			   and rr.rglt_chk_req_prog_stt_cd in ('10','20','40')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
	           and tcm.imp_yn = 'Y'
	           and tcm.sbms_tgt_yn = 'Y'
			UNION
			select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no 
			      ,rm.mtrl_kind_cd
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_prog_stt_cd
			      ,fn_get_cd('CH00000012',rr.rglt_chk_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_prog_stt_nm 
			      ,rd.rglt_chk_usr_id as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '1' or rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkimkedt/' || rr.rglt_chk_no
			       end -- 검토 상세 화면 주소
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  left outer join tb_co_mtrl tcm on rm.mtrl_no = tcm.mtrl_no
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is not null
	           and tcm.imp_yn = 'Y'
	           and tcm.sbms_tgt_yn = 'Y'
			UNION
			select rr.rglt_chk_no 
			      ,rr.wkpl_id 
			      ,fn_get_cd('CO00000006',rr.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			      ,rm.mtrl_no 
			      ,rm.mtrl_kind_cd
			      ,case when #{lang_cd}='KO' then rm.mtrl_ko_nm 
			            else rm.mtrl_en_nm
			       end as mtrl_nm
			      ,to_char(to_date(rr.crt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as crt_da -- 요청등록일
			      ,to_char(to_date(rr.upt_dt,'YYYYMMDDHH24MISS'),'YYYY-MM-DD') as upt_da -- 최종수정일
			      ,rr.rglt_chk_prog_stt_cd
			      ,fn_get_cd('CH00000012',rr.rglt_chk_prog_stt_cd,'NM',#{lang_cd}) as rglt_chk_prog_stt_nm 
			      ,pc.usr_id as email_recv_usr_id -- 메일수신자 사번
			      ,case when rm.mtrl_kind_cd = '1' or rm.mtrl_kind_cd = '2' then '/rgltchk/rgltchkmtrledt/' || rr.rglt_chk_no
			            when rm.mtrl_kind_cd = '3' then '/rgltchk/rgltchkimkedt/' || rr.rglt_chk_no
			       end -- 검토 상세 화면 주소
			  from tb_ch_rglt_chk rr
			  join tb_ch_rglt_chk_mtrl rm on rr.rglt_chk_no = rm.rglt_chk_no and rr.chk_req_clsf_cd = rm.chk_req_clsf_cd and rm.del_yn = 'N'
			  left outer join tb_co_mtrl tcm on rm.mtrl_no = tcm.mtrl_no
			  join tb_co_biz_pc pc on pc.biz_pc_grp_cd = 'BG00001' and pc.usg_yn = 'Y' and pc.del_yn = 'N' and pc.cnct_1st_cd = rr.wkpl_id
			  left outer join tb_ch_rglt_chk_doma_rslt rd on rr.rglt_chk_no = rd.rglt_chk_no and rd.chk_req_clsf_cd = rm.chk_req_clsf_cd and rd.rglt_chk_doma_cd = 'Z'
			 where rr.del_yn = 'N'
			   and rr.rglt_chk_prog_stt_cd in ('30','50','70')
			   <![CDATA[
			   and rr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			   ]]>
			   and rd.rglt_chk_usr_id is null
	           and tcm.imp_yn = 'Y'
	           and tcm.sbms_tgt_yn = 'Y'
			 order by rglt_chk_no
			) a
		where email_recv_usr_id = #{usr}
	</select>
	
	<select id="selectMsdsList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsList */
		select a.msds_rev_no
		      ,a.usr
		      ,a.wkpl_nm
		      ,a.mtrl_no
		      ,a.mtrl_nm
		      ,a.req_da
		      ,a.rev_prog_stt_nm
		      ,a.upt_dt
		      ,a.url
		      ,a.chk_req_clsf_cd
		from
			(select tcmr.msds_rev_no
			      ,tcmr.req_usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000010', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevreqedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('10', '30')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '1'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			union 
			select tcmr.msds_rev_no
			      ,tcmr.rev_chk_usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000011', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevchkedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is not null
			union 
			select tcmr.msds_rev_no
			      ,pc.usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000011', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevchkedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			join tb_co_biz_pc pc 
			  on pc.biz_pc_grp_cd = 'BG00003' and pc.usg_yn = 'Y' and pc.del_yn = 'N'
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is null
			 order by msds_rev_no
			) a
		where a.usr = #{usr}
	</select>
	
	<select id="selectMsdsList2" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsList */
		select a.msds_rev_no
		      ,a.usr
		      ,a.wkpl_nm
		      ,a.mtrl_no
		      ,a.mtrl_nm
		      ,a.req_da
		      ,a.rev_prog_stt_nm
		      ,a.upt_dt
		      ,a.url
		      ,a.chk_req_clsf_cd
		from
			(select tcmr.msds_rev_no
			      ,tcmr.req_usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000010', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevreqedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('10', '30')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
	          and tcm.imp_yn = 'Y'
	          and tcm.sbms_tgt_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '1'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			union 
			select tcmr.msds_rev_no
			      ,tcmr.rev_chk_usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000011', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevchkedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
	          and tcm.imp_yn = 'Y'
	          and tcm.sbms_tgt_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is not null
			union 
			select tcmr.msds_rev_no
			      ,pc.usr_id as usr
			      ,fn_get_cd('CO00000006', tcmr.rev_wkpl_id , 'nm', #{lang_cd}) as wkpl_nm
			      ,tcmr.mtrl_no 
			      ,case when #{lang_cd} = 'KO' then tcm.mtrl_ko_nm 
					            when #{lang_cd} = 'EN' then tcm.mtrl_en_nm 
					            else tcm.mtrl_zh_nm end as mtrl_nm
				  ,substring(tcmr.req_da , 0, 5) || '-' || substring(tcmr.req_da, 5, 2) || '-' || substring(tcmr.req_da, 7, 2) as req_da
				  ,fn_get_cd('CH00000011', tcmr.rev_prog_stt_cd , 'nm', #{lang_cd}) as rev_prog_stt_nm
				  ,substring(tcmr.upt_dt , 0, 5) || '-' || substring(tcmr.upt_dt, 5, 2) || '-' || substring(tcmr.upt_dt, 7, 2) as upt_dt
				  ,'/msds/msdsrevchkedt/' || tcmr.msds_rev_no as url
				  ,chk_req_clsf_cd
			from tb_ch_msds_rev tcmr 
			join tb_co_mtrl tcm 
			  on tcmr.mtrl_no = tcm.mtrl_no 
			join tb_co_biz_pc pc 
			  on pc.biz_pc_grp_cd = 'BG00003' and pc.usg_yn = 'Y' and pc.del_yn = 'N'
			where rev_prog_stt_cd IN ('20', '40')
			  and tcmr.del_yn = 'N'
			  and tcm.del_yn = 'N'
			  and tcm.usg_yn = 'Y'
	          and tcm.imp_yn = 'Y'
	          and tcm.sbms_tgt_yn = 'Y'
			  and tcmr.chk_req_clsf_cd = '2'
			  <![CDATA[
			  and tcmr.upt_dt < to_char(current_timestamp + '-2 day','YYYYMMDD') || '000000'
			  ]]>
			  and tcmr.rev_chk_usr_id is null
			 order by msds_rev_no
			) a
		where a.usr = #{usr}
	</select>
	
	<select id="selectRgltDbList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltDbList */
		select sc.chem_id::varchar                              as sbst_no           -- 물질_번호
		     , case when sc.ke_no is null then '30'
		            else '10'
		       end                                              as sbst_type_cd      -- 물질_유형_코드
		     , coalesce (smd.name, smd2.name)                   as sbst_ko_nm        -- 물질_한글_명
		     , coalesce (smd2.name, smd.name)                   as sbst_en_nm        -- 물질_영문_명
		     , sc.cas_no                                        as cas_no            -- CAS등록번호
		     , coalesce (smd.alias, smd2.alias)                 as ko_syno_nm       -- 국문_이명
		     , coalesce (smd2.alias, smd.alias)                 as en_syno_nm       -- 영문_이명
		     , sc.ke_no                                         as ke_no             -- KE번호
		     , sc.ec_no                                         as ec_no             -- EC번호
		     , sc.chem_formula                                  as chem_formula      -- 화학식
		     , null                                             as nfpa_he_cd        -- NFPA_보건_코드
		     , null                                             as nfpa_fire_cd      -- NFPA_화재_코드
		     , null                                             as nfpa_creac_cd     -- NFPA_반응성_코드
		     , case when coalesce (sm1.sungsang_multi,sm2.sungsang_multi)='010' then '고체'
		            when coalesce (sm1.sungsang_multi,sm2.sungsang_multi)='020' then '액체'
		            when coalesce (sm1.sungsang_multi,sm2.sungsang_multi)='030' then '기체'
		       end                                              as phase_1st_cntn    -- 성상_1차_내용
		     , coalesce (sm1.sungsang_sebu,sm2.sungsang_sebu)   as phase_2nd_cntn    -- 성상_2차_내용
		     , coalesce (sm1.saek, sm2.saek)                    as clr_cntn          -- 색상_내용
		     , coalesce (sm1.naemsae, sm2.naemsae)              as odor_cntn         -- 냄새_내용
		     , coalesce (sm1.naemsaeyukchi, sm2.naemsaeyukchi)  as odor_thshld_cntn  -- 냄새_역치_내용
		     , coalesce (sm1.ph, sm2.ph)                        as ph_cntn           -- pH_내용
		     , coalesce (sm1.ph_number_value, sm2.ph_number_value) as ph_val            -- pH_값
		     , coalesce (sm1.melting_point, sm2.melting_point)  as meltp_cntn        -- 녹는점_내용
		     , coalesce (sm1.boiling_point , sm2.boiling_point) as boilp_cntn        -- 끓는점_내용
		     , coalesce (sm1.boiling_point_value, sm2.boiling_point_value) as boilp_val         -- 끓는점_값
		     , coalesce (sm1.boiling_point_unit, sm2.boiling_point_unit) as boinp_unit_nm     -- 끓는점_단위_명
		     , coalesce (sm1.flash_point, sm2.flash_point)      as flashp_cntn       -- 인화점_내용
		     , coalesce (sm1.flash_point_value, sm2.flash_point_value) as flashp_val        -- 인화점_값
		     , coalesce (sm1.flash_point_unit, sm2.flash_point_unit)  as flashp_unit_nm    -- 인화점_단위_명
		     , coalesce (sm1.molecular_weight, sm2.molecular_weight) as mol_wgt_cntn      -- 분자량_내용
		     , coalesce (sm1.vaporation_velocity, sm2.vaporation_velocity) as eva_rate_cntn     -- 증발속도_내용
		     , coalesce (sm1.flash_point, sm2.flash_point)      as flamabl_cntn      -- 인화성_내용
		     , coalesce (sm1.flammability_max_min, sm2.flammability_max_min) as explos_cntn       -- 폭발_내용
		     , coalesce (sm1.vapor_pressure, sm2.vapor_pressure) as stpress_cntn      -- 증기압_내용
		     , coalesce (sm1.solubility, sm2.solubility)        as solub_cntn        -- 용해도_내용
		     , coalesce (sm1.vapor_density, sm2.vapor_density)  as vapden_cntn       -- 증기밀도_내용
		     , coalesce (sm1.specific_gravity, sm2.specific_gravity) as spgrav_cntn       -- 비중_내용
		     , coalesce (sm1.n_octanol, sm2.n_octanol)          as kow_cntn          -- 옥탄올-물 분배계수_내용
		     , coalesce (sm1.self_ignition_temperature, sm2.self_ignition_temperature) as autoigt_cntn      -- 자연발화온도_내용
		     , coalesce (sm1.decomposition_temperature, sm2.decomposition_temperature) as thermsis_cntn     -- 열분해_내용
		     , coalesce (sm1.viscosity, sm2.viscosity)          as visco_cntn        -- 점도_내용
		     , case when sc.is_enable = 1 then 'Y' else 'N' end as usg_yn            -- 사용_여부
		     , case when sc.is_delete = 1 then 'Y' else 'N' end as del_yn            -- 삭제_여부
		     , 'APCHEMS'                                        as crt_usr_id        -- 생성_사원_번호
		     , to_char(sc.insert_date,'yyyymmddhh24miss')       as crt_dt            -- 생성_일시
		     , 'APCHEMS'                                        as upt_usr_id        -- 수정_사원_번호
		     , sc.change_date                                   as upt_dt            -- 수정_일시
		     , case when sb.sbst_no is null then 'C'
		            else case when sc.is_delete = 1 then 'D' else 'U' end
		       end as chg_type_cd
		  from sct_chem sc -- 물질정보
		  left outer join sct_moolsung sm1 on sc.chem_id = sm1.chem_id and sm1.close_date = '99991231235959' and sm1.is_delete = 0 and sm1.is_enable = 1 and sm1.institution_id = '500000000640'
		  left outer join sct_moolsung sm2 on sc.chem_id = sm2.chem_id and sm2.close_date = '99991231235959' and sm2.is_delete = 0 and sm2.is_enable = 1 and sm2.institution_id = '500000000642'
		  left outer join sct_multilingual_data smd on sc.chem_id = smd.arc_id and smd.locale = 'ko_KR' and smd.arc_class = '020'
		  left outer join sct_multilingual_data smd2 on sc.chem_id = smd2.arc_id and smd2.locale = 'en_US' and smd2.arc_class = '020'
		  left outer join tb_ch_sbst sb on sc.chem_id::varchar = sb.sbst_no
		where 1=1
		  and coalesce (smd.name, smd2.name) not like ('영업%')
		  and sc.close_date = '99991231235959'
		  <![CDATA[
		  and sc.update_date >= current_timestamp + '-1 day'
		  and sc.update_date < current_timestamp
		  ]]>
	</select>
	
	<update id="upsertRgltDbList" parameterType="sqlMap">
        /* upsertRgltDbList */
        with sbstlist as (update tb_ch_sbst
		                 set sbst_no          = #{sbst_no}
		                   , sbst_type_cd     = #{sbst_type_cd}
		                   , sbst_ko_nm       = #{sbst_ko_nm}
		                   , sbst_en_nm       = #{sbst_en_nm}
		                   , cas_no           = #{cas_no}
		                   , ko_syno_nm      = #{ko_syno_nm}
		                   , en_syno_nm      = #{en_syno_nm}
		                   , ke_no            = #{ke_no}
		                   , ec_no            = #{ec_no}
		                   , chem_formula     = #{chem_formula}
		                   , nfpa_he_cd       = #{nfpa_he_cd}
		                   , nfpa_fire_cd     = #{nfpa_fire_cd}
		                   , nfpa_creac_cd    = #{nfpa_creac_cd}
		                   , phase_1st_cntn   = #{phase_1st_cntn}
		                   , phase_2nd_cntn   = #{phase_2nd_cntn}
		                   , clr_cntn         = #{clr_cntn}
		                   , odor_cntn        = #{odor_cntn}
		                   , odor_thshld_cntn = #{odor_thshld_cntn}
		                   , ph_cntn          = #{ph_cntn}
		                   , ph_val           = #{ph_val}
		                   , meltp_cntn       = #{meltp_cntn}
		                   , boilp_cntn       = #{boilp_cntn}
		                   , boilp_val        = #{boilp_val}
		                   , boinp_unit_nm    = #{boinp_unit_nm}
		                   , flashp_cntn      = #{flashp_cntn}
		                   , flashp_val       = #{flashp_val}
		                   , flashp_unit_nm   = #{flashp_unit_nm}
		                   , mol_wgt_cntn     = #{mol_wgt_cntn}
		                   , eva_rate_cntn    = #{eva_rate_cntn}
		                   , flamabl_cntn     = #{flamabl_cntn}
		                   , explos_cntn      = #{explos_cntn}
		                   , stpress_cntn     = #{stpress_cntn}
		                   , solub_cntn       = #{solub_cntn}
		                   , vapden_cntn      = #{vapden_cntn}
		                   , spgrav_cntn      = #{spgrav_cntn}
		                   , kow_cntn         = #{kow_cntn}
		                   , autoigt_cntn     = #{autoigt_cntn}
		                   , thermsis_cntn    = #{thermsis_cntn}
		                   , visco_cntn       = #{visco_cntn}
		                   , usg_yn           = #{usg_yn}
		                   , del_yn           = #{del_yn}
		                   , crt_usr_id       = #{crt_usr_id}
		                   , crt_dt           = #{crt_dt}
		                   , upt_usr_id       = #{upt_usr_id}
		                   , upt_dt           = #{upt_dt}
		              where  sbst_no          = #{sbst_no}
		              returning *)
		              insert into tb_ch_sbst (
		                       sbst_no
		                     , sbst_type_cd
		                     , sbst_ko_nm
		                     , sbst_en_nm
		                     , cas_no
		                     , ko_syno_nm
		                     , en_syno_nm
		                     , ke_no
		                     , ec_no
		                     , chem_formula
		                     , nfpa_he_cd
		                     , nfpa_fire_cd
		                     , nfpa_creac_cd
		                     , phase_1st_cntn
		                     , phase_2nd_cntn
		                     , clr_cntn
		                     , odor_cntn
		                     , odor_thshld_cntn
		                     , ph_cntn
		                     , ph_val
		                     , meltp_cntn
		                     , boilp_cntn
		                     , boilp_val
		                     , boinp_unit_nm
		                     , flashp_cntn
		                     , flashp_val
		                     , flashp_unit_nm
		                     , mol_wgt_cntn
		                     , eva_rate_cntn
		                     , flamabl_cntn
		                     , explos_cntn
		                     , stpress_cntn
		                     , solub_cntn
		                     , vapden_cntn
		                     , spgrav_cntn
		                     , kow_cntn
		                     , autoigt_cntn
		                     , thermsis_cntn
		                     , visco_cntn
		                     , usg_yn
		                     , del_yn
		                     , crt_usr_id
		                     , crt_dt
		                     , upt_usr_id
		                     , upt_dt
		                     , kyin_yn
		              )
		              select #{sbst_no}
		                   , #{sbst_type_cd}
		                   , #{sbst_ko_nm}
		                   , #{sbst_en_nm}
		                   , #{cas_no}
		                   , #{ko_syno_nm}
		                   , #{en_syno_nm}
		                   , #{ke_no}
		                   , #{ec_no}
		                   , #{chem_formula}
		                   , #{nfpa_he_cd}
		                   , #{nfpa_fire_cd}
		                   , #{nfpa_creac_cd}
		                   , #{phase_1st_cntn}
		                   , #{phase_2nd_cntn}
		                   , #{clr_cntn}
		                   , #{odor_cntn}
		                   , #{odor_thshld_cntn}
		                   , #{ph_cntn}
		                   , #{ph_val}
		                   , #{meltp_cntn}
		                   , #{boilp_cntn}
		                   , #{boilp_val}
		                   , #{boinp_unit_nm}
		                   , #{flashp_cntn}
		                   , #{flashp_val}
		                   , #{flashp_unit_nm}
		                   , #{mol_wgt_cntn}
		                   , #{eva_rate_cntn}
		                   , #{flamabl_cntn}
		                   , #{explos_cntn}
		                   , #{stpress_cntn}
		                   , #{solub_cntn}
		                   , #{vapden_cntn}
		                   , #{spgrav_cntn}
		                   , #{kow_cntn}
		                   , #{autoigt_cntn}
		                   , #{thermsis_cntn}
		                   , #{visco_cntn}
		                   , #{usg_yn}
		                   , #{del_yn}
		                   , #{crt_usr_id}
		                   , #{crt_dt}
		                   , #{upt_usr_id}
		                   , #{upt_dt}
		                   , 'N'
		               where not exists (select 1 from sbstlist)
    </update>
    
    <insert id="insertRgltDbHist" parameterType="sqlMap">
        /* insertRgltDbHist */
        insert into tb_ch_sbst_hst (
		           chg_type_cd
		         , chg_dt
		         , chg_usr_id
		         , ver_seq
		         , sbst_no
		         , sbst_type_cd
		         , sbst_ko_nm
		         , sbst_en_nm
		         , cas_no
		         , ko_syno_nm
		         , en_syno_nm
		         , ke_no
		         , ec_no
		         , chem_formula
		         , nfpa_he_cd
		         , nfpa_fire_cd
		         , nfpa_creac_cd
		         , phase_1st_cntn
		         , phase_2nd_cntn
		         , clr_cntn
		         , odor_cntn
		         , odor_thshld_cntn
		         , ph_cntn
		         , ph_val
		         , meltp_cntn
		         , boilp_cntn
		         , boilp_val
		         , boinp_unit_nm
		         , flashp_cntn
		         , flashp_val
		         , flashp_unit_nm
		         , mol_wgt_cntn
		         , eva_rate_cntn
		         , flamabl_cntn
		         , explos_cntn
		         , stpress_cntn
		         , solub_cntn
		         , vapden_cntn
		         , spgrav_cntn
		         , kow_cntn
		         , autoigt_cntn
		         , thermsis_cntn
		         , visco_cntn
		         , usg_yn
		         , del_yn
		         , crt_usr_id
		         , crt_dt
		         , upt_usr_id
		         , upt_dt
		        )
		  values(
		         #{chg_type_cd}
		       , #{crt_dt}
		       , #{crt_usr_id}
		       , coalesce ((select max(sh.ver_seq) +1 from tb_ch_sbst_hst sh where sh.sbst_no = #{sbst_no}),1)
		       , #{sbst_no}
		       , #{sbst_type_cd}
		       , #{sbst_ko_nm}
		       , #{sbst_en_nm}
		       , #{cas_no}
		       , #{ko_syno_nm}
		       , #{en_syno_nm}
		       , #{ke_no}
		       , #{ec_no}
		       , #{chem_formula}
		       , #{nfpa_he_cd}
		       , #{nfpa_fire_cd}
		       , #{nfpa_creac_cd}
		       , #{phase_1st_cntn}
		       , #{phase_2nd_cntn}
		       , #{clr_cntn}
		       , #{odor_cntn}
		       , #{odor_thshld_cntn}
		       , #{ph_cntn}
		       , #{ph_val}
		       , #{meltp_cntn}
		       , #{boilp_cntn}
		       , #{boilp_val}
		       , #{boinp_unit_nm}
		       , #{flashp_cntn}
		       , #{flashp_val}
		       , #{flashp_unit_nm}
		       , #{mol_wgt_cntn}
		       , #{eva_rate_cntn}
		       , #{flamabl_cntn}
		       , #{explos_cntn}
		       , #{stpress_cntn}
		       , #{solub_cntn}
		       , #{vapden_cntn}
		       , #{spgrav_cntn}
		       , #{kow_cntn}
		       , #{autoigt_cntn}
		       , #{thermsis_cntn}
		       , #{visco_cntn}
		       , #{usg_yn}
		       , #{del_yn}
		       , #{crt_usr_id}
		       , #{crt_dt}
		       , #{upt_usr_id}
		       , #{upt_dt}
		        )
    </insert>
    
    <select id="selectRgltChList" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltChList */
		select a.rglt_no
		     , a.sbst_no
		     , a.lggosi_id             -- 고시 ID
		     , a.lgnoti_no             -- 고시 번호
		     , a.lgnoti_nm             -- 고시 명
		     , a.lgnoti_da             -- 고시 일자
		     , a.lgnoti_law_nm         -- 고시 법규 명
		     , a.lgnoti_law_no         -- 고시 법규 번호
		     , a.lgnoti_law_cntn       -- 고시 법규 내용
		     , a.rglt_clsf_nm          -- 규제 구분 명
		     , a.rglt_dtl_clsf_nm      -- 규제 상세 구분 명
		     , a.rglt_crtr_rati        -- 규제 기준 함량
		     , a.make_crtr_qty         -- 제조 기준 량
		     , a.sk_crtr_qty           -- 저장(재고) 기준 량
		     , a.trt_crtr_qty          -- 취급 기준 량
		     , a.impt_crtr_qty         -- 수입 기준 량
		     , a.helthsc_cycl_val      -- 건강검진 주기 값
		     , a.helthsc_1st_cycl_val  -- 건강검진 최초 주기 값
		     , a.dngr_crtr_qty         -- 위험 기준 량(위험물지정수량)
		     , a.dngr_crtr_unit_nm     -- 위험 기준 단위(위험물지정수량 단위 명)
		     , a.rglt_crtr_cntn        -- 규제 기준 내용
		     , case when a.chg_type_cd = 'D' then 'N' else 'Y' end as usg_yn
		     , case when a.chg_type_cd = 'D' then 'Y' else 'N' end as del_yn
		     , a.usr_id as crt_usr_id 
		     , a.trn_dt as crt_dt
		     , a.usr_id as upt_usr_id
		     , a.trn_dt as upt_dt
		     , a.trn_dt as chg_dt
		     , a.usr_id as chg_usr_id
		     , a.chg_type_cd
		 from (
		        select tcr.rglt_no::varchar            as rglt_no
		             , sgc.arc_id::varchar             as sbst_no
		             , sgc.gosi_id::varchar            as lggosi_id             -- 고시 ID
		             , sg.gosi_no                      as lgnoti_no             -- 고시 번호
		             , sg.gosi_name                    as lgnoti_nm             -- 고시 명
		             , sg.gosi_law_date                as lgnoti_da             -- 고시 일자
		             , sg.gosi_law_name                as lgnoti_law_nm         -- 고시 법규 명
		             , sg.gosi_law_no                  as lgnoti_law_no         -- 고시 법규 번호
		             , sg.gosi_relation_statute        as lgnoti_law_cntn       -- 고시 법규 내용
		             , sg.kind1                        as rglt_clsf_nm          -- 규제 구분 명
		             , sg.kind2                        as rglt_dtl_clsf_nm      -- 규제 상세 구분 명
		             , sg.hamryang_value::numeric      as rglt_crtr_rati        -- 규제 기준 함량
		             , sg.kg_jejo::numeric             as make_crtr_qty         -- 제조 기준 량
		             , sg.kg_jeojang::numeric          as sk_crtr_qty           -- 저장(재고) 기준 량
		             , sg.kg_chwigeup::numeric         as trt_crtr_qty          -- 취급 기준 량
		             , case when (sg.kg_import = '') then null else sg.kg_import::numeric end impt_crtr_qty         -- 수입 기준 량
		             , sg.cycle_                       as helthsc_cycl_val      -- 건강검진 주기 값
		             , sg.first_cycle                  as helthsc_1st_cycl_val  -- 건강검진 최초 주기 값
		             , case when (sg.jijung_sooryang = '') then null else regexp_replace(sg.jijung_sooryang,'[^0-9]+','','g')::numeric(18,3) end dngr_crtr_qty         -- 위험 기준 량(위험물지정수량)
		             , regexp_replace(sg.jijung_sooryang,'[0-9]+','','g') as dngr_crtr_unit_nm     -- 위험 기준 단위(위험물지정수량 단위 명)
		             , coalesce (sg.condition_, note)  as rglt_crtr_cntn        -- 규제 기준 내용
		             , 'APCHEMS' as usr_id
		             , to_char(now(),'YYYYMMDDHH24MISS') as trn_dt 
		             , case when tcrs.rglt_no is not null and tcrs.sbst_no is not null and sgc.is_delete = 1 then 'D'  -- 삭제
		                    when tcrs.rglt_no is not null and tcrs.sbst_no is not null and sg.hamryang_value::numeric(6,3) != tcrs.rglt_crtr_rati then 'U'  -- 수정
		                    when tcrs.rglt_no is null or tcrs.sbst_no is null then 'C'                                 -- 생성
		                    else 'N' -- 변경없음
		               end as chg_type_cd
		             , row_number() over(partition by tcr.rglt_no, sgc.arc_id::varchar order by sg.hamryang_value nulls last, tcr.rglt_no, sgc.arc_id::varchar) as rnum
		          from sct_chem sc
                  join sct_gosi_chem sgc on sc.chem_id = sgc.arc_id
		          join sct_gosi sg on sgc.gosi_id = sg.gosi_id and sg.close_date = '99991231235959'
		          join sct_law sl on sg.law_id = sl.law_id
		          join tb_ch_rglt tcr on sg.law_id::varchar = tcr.ch_db_rglt_no and tcr.usg_yn = 'Y' and tcr.del_yn = 'N'
		          join tb_ch_sbst tcs on sgc.arc_id::varchar = tcs.sbst_no
		          left outer join tb_ch_rglt_sbst tcrs on sgc.arc_id::varchar = tcrs.sbst_no and tcr.rglt_no = tcrs.rglt_no and tcrs.usg_yn = 'Y' and tcrs.del_yn = 'N'
		         where 1=1
		           and sgc.close_date = '99991231235959'
		           <![CDATA[
		           and (case when sgc.update_date > sg.update_date then sgc.update_date else sg.update_date end) >= current_timestamp + '-1 day'
		           and (case when sgc.update_date > sg.update_date then sgc.update_date else sg.update_date end) < current_timestamp
		           ]]>
		         ) a
		  where a.rnum = 1
		    and a.chg_type_cd in ('C','U','D')
	</select>
	
	<update id="upsertRgltChList" parameterType="sqlMap">
        /* upsertRgltChList */
        with rgltsbstlist as
		     (
		        update
		            tb_ch_rglt_sbst
		        set
		              lggosi_id             = #{lggosi_id}
		            , lgnoti_no             = #{lgnoti_no}
		            , lgnoti_nm             = #{lgnoti_nm}
		            , lgnoti_da             = #{lgnoti_da}
		            , lgnoti_law_nm         = #{lgnoti_law_nm}
		            , lgnoti_law_no         = #{lgnoti_law_no}
		            , lgnoti_law_cntn       = #{lgnoti_law_cntn}
		            , rglt_clsf_nm          = #{rglt_clsf_nm}
		            , rglt_dtl_clsf_nm      = #{rglt_dtl_clsf_nm}
		            , rglt_crtr_rati        = #{rglt_crtr_rati}
		            , make_crtr_qty         = #{make_crtr_qty}
		            , sk_crtr_qty           = #{sk_crtr_qty}
		            , trt_crtr_qty          = #{trt_crtr_qty}
		            , impt_crtr_qty         = #{impt_crtr_qty}
		            , helthsc_cycl_val      = #{helthsc_cycl_val}
		            , helthsc_1st_cycl_val  = #{helthsc_1st_cycl_val}
		            , dngr_crtr_qty         = #{dngr_crtr_qty}
		            , dngr_crtr_unit_nm     = #{dngr_crtr_unit_nm}
		            , rglt_crtr_cntn        = #{rglt_crtr_cntn}
		            , usg_yn                = #{usg_yn}
		            , del_yn                = #{del_yn}
		            , upt_usr_id            = #{upt_usr_id}
		            , upt_dt                = #{upt_dt}
		        where rglt_no = #{rglt_no}
		          and sbst_no = #{sbst_no}
		        returning *
		     )
		        insert
		            into
		            tb_ch_rglt_sbst (
		                  rglt_no
		                , sbst_no
		                , lggosi_id           
		                , lgnoti_no           
		                , lgnoti_nm           
		                , lgnoti_da           
		                , lgnoti_law_nm       
		                , lgnoti_law_no       
		                , lgnoti_law_cntn     
		                , rglt_clsf_nm        
		                , rglt_dtl_clsf_nm    
		                , rglt_crtr_rati      
		                , make_crtr_qty       
		                , sk_crtr_qty         
		                , trt_crtr_qty        
		                , impt_crtr_qty       
		                , helthsc_cycl_val    
		                , helthsc_1st_cycl_val
		                , dngr_crtr_qty       
		                , dngr_crtr_unit_nm   
		                , rglt_crtr_cntn      
		                , usg_yn              
		                , del_yn              
		                , crt_usr_id          
		                , crt_dt              
		                , upt_usr_id          
		                , upt_dt              
		            )
		        select    #{rglt_no}
		                , #{sbst_no}
		                , #{lggosi_id}           
		                , #{lgnoti_no}           
		                , #{lgnoti_nm}           
		                , #{lgnoti_da}           
		                , #{lgnoti_law_nm}       
		                , #{lgnoti_law_no}       
		                , #{lgnoti_law_cntn}     
		                , #{rglt_clsf_nm}        
		                , #{rglt_dtl_clsf_nm}    
		                , #{rglt_crtr_rati}      
		                , #{make_crtr_qty}       
		                , #{sk_crtr_qty}         
		                , #{trt_crtr_qty}        
		                , #{impt_crtr_qty}       
		                , #{helthsc_cycl_val}    
		                , #{helthsc_1st_cycl_val}
		                , #{dngr_crtr_qty}       
		                , #{dngr_crtr_unit_nm}   
		                , #{rglt_crtr_cntn}      
		                , #{usg_yn}              
		                , #{del_yn}              
		                , #{crt_usr_id}          
		                , #{crt_dt}              
		                , #{upt_usr_id}          
		                , #{upt_dt}
		         where not exists (select * from rgltsbstlist)
    </update>
    
    <insert id="insertRgltChHist" parameterType="sqlMap">
        /* insertRgltChHist */
        insert
		    into
		    tb_ch_rglt_sbst_hst (
		          chg_type_cd
		        , chg_dt
		        , chg_usr_id
		        , ver_seq
		        , rglt_no
		        , sbst_no
		        , lggosi_id
		        , lgnoti_no
		        , lgnoti_nm
		        , lgnoti_da
		        , lgnoti_law_nm
		        , lgnoti_law_no
		        , lgnoti_law_cntn
		        , rglt_clsf_nm
		        , rglt_dtl_clsf_nm
		        , rglt_crtr_rati
		        , make_crtr_qty
		        , sk_crtr_qty
		        , trt_crtr_qty
		        , impt_crtr_qty
		        , helthsc_cycl_val
		        , helthsc_1st_cycl_val
		        , dngr_crtr_qty
		        , dngr_crtr_unit_nm
		        , rglt_crtr_cntn
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		        , nat_cd
		        , rglt_type_cd
		        , rglt_chk_doma_cd
		        , law_cd
		        , rglt_nm
		        , rglt_abbr
		        , sbst_ko_nm
		        , sbst_en_nm
		        , cas_no
		        , ke_no
		        , ec_no
		    )
		values (
		          #{chg_type_cd}
		        , #{chg_dt}
		        , #{chg_usr_id}
		        , coalesce ((select max(b.ver_seq) + 1 from tb_ch_rglt_sbst_hst b where b.sbst_no = #{sbst_no} and b.rglt_no = #{rglt_no}),1)
		        , #{rglt_no}
		        , #{sbst_no}
		        , #{lggosi_id}           
		        , #{lgnoti_no}           
		        , #{lgnoti_nm}           
		        , #{lgnoti_da}           
		        , #{lgnoti_law_nm}       
		        , #{lgnoti_law_no}       
		        , #{lgnoti_law_cntn}     
		        , #{rglt_clsf_nm}        
		        , #{rglt_dtl_clsf_nm}    
		        , #{rglt_crtr_rati}      
		        , #{make_crtr_qty}       
		        , #{sk_crtr_qty}         
		        , #{trt_crtr_qty}        
		        , #{impt_crtr_qty}       
		        , #{helthsc_cycl_val}    
		        , #{helthsc_1st_cycl_val}
		        , #{dngr_crtr_qty}       
		        , #{dngr_crtr_unit_nm}   
		        , #{rglt_crtr_cntn}            
		        , #{usg_yn}              
		        , #{del_yn}              
		        , #{crt_usr_id}          
		        , #{crt_dt}              
		        , #{upt_usr_id}          
		        , #{upt_dt}
		        , (select nat_cd from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select rglt_type_cd from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select rglt_chk_doma_cd from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select law_cd from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select rglt_nm from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select rglt_abbr from tb_ch_rglt where rglt_no = #{rglt_no})
		        , (select sbst_ko_nm from tb_ch_sbst where sbst_no = #{sbst_no})
		        , (select sbst_en_nm from tb_ch_sbst where sbst_no = #{sbst_no})
		        , (select cas_no from tb_ch_sbst where sbst_no = #{sbst_no})
		        , (select ke_no from tb_ch_sbst where sbst_no = #{sbst_no})
		        , (select ec_no from tb_ch_sbst where sbst_no = #{sbst_no})
		    )
    </insert>
    
    <select id="selectAponAprvList" parameterType="sqlMap" resultType="sqlMap">
		/* selectAponAprvList */
		select aprvseq
		      ,reqno
		      ,docst
		      ,ecm_url 
		      ,recdt
		from tb_co_aprv tca
		join ti_co_aprv_apon_recv tcaar 
		on tca.aprv_no = tcaar.reqno and tcaar.trn_yn = 'N'
		where tca.usg_yn != 'N'
		order by reqno asc, recdt asc
	</select>
	
	<select id="selectAprvMethod" parameterType="sqlMap" resultType="string">
		/* selectAprvMethod */
		select aprv_mthd_nm 
		from tb_co_aprv
		where aprv_no = #{aprv_no}
		  and usg_yn != 'N'
	</select>
	
	<update id="updateAprvStt" parameterType="sqlMap">
        /* updateAprvStt */
        update tb_co_aprv 
		   set aprv_stt_cd = #{docst}
		      ,usg_yn = 'Y'
		      ,upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where aprv_no = #{aprv_no}
    </update>
    
    <update id="updateAprvRcvStt" parameterType="sqlMap">
        /* updateAprvRcvStt */
        update ti_co_aprv_apon_recv 
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where aprvseq = #{aprvseq}
    </update>
    
    <select id="selectAponDelList" parameterType="sqlMap" resultType="sqlMap">
		/* selectAponDelList */
		select aprv_no
		from tb_co_aprv
		where usg_yn = 'T'
		<![CDATA[
		  and upt_dt <= to_char(current_timestamp + '-1 day','YYYYMMDDHH24MI' || '00')
		]]>
	</select>
	
	<update id="deleteAprvData" parameterType="sqlMap">
        /* deleteAprvData */
        update tb_co_aprv set
		       usg_yn = 'N'
		      ,upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where aprv_no = #{aprv_no}
    </update>
    
    <select id="selectAponAprvdata" parameterType="sqlMap" resultType="sqlMap">
		/* selectAponAprvdata */
		select aprv_no
		      ,aprv_stt_cd
		from tb_co_aprv
		where usg_yn != 'N'
		  and aprv_no = #{aprv_no}
	</select>
	
	<select id="selectVndrSapList" parameterType="sqlMap" resultType="sqlMap">
		/* selectVndrSapList */
		select trim(snddt) as snddt
		      ,trim(sndsq) as sndsq
		      ,trim(cud_ci) as cud_ci
		      ,trim(lifnr) as lifnr
		      ,trim(name1) as name1
		      ,trim(ktokk) as ktokk
		      ,trim(pstlz) as pstlz
		      ,trim(land1) as land1
		      ,trim(landx) as landx
		      ,trim(city1) as city1
		      ,trim(street) as street
		      ,trim(house_num1) as house_num1
		      ,trim(telf1) as telf1
		      ,trim(telfx) as telfx
		      ,trim(j_1kfrepre) as j_1kfrepre
		      ,trim(erdat) as erdat
		      ,trim(loevm) as loevm
		      ,trim(username) as username
		      ,trim(chg_dtm) as chg_dtm
		      ,trim(send_ci) as send_ci
		      ,trim(stcd2) as stcd2
		from ti_co_vndr_sap_recv tcvsr 
		where trn_yn = 'N'
		order by trim(chg_dtm) asc
	</select>
	
	<update id="upsertVndrList" parameterType="sqlMap">
        /* upsertVndrList */
        insert
            into
            tb_co_vndr (
                  vndr_no
                 ,vndr_nm 
                 ,vndr_clsf_cd 
                 ,vndr_type_cd 
                 ,nat_cd 
                 ,cty_cd
                 ,vndr_addr 
                 ,vndr_pst_no 
                 ,vndr_phon_no 
                 ,vndr_fax_no 
                 ,vndr_rprs_nm 
                 ,vndr_crt_da 
                 ,vndr_upt_da 
                 ,vndr_coreg_no 
                 ,vndr_email 
                 ,vndr_url 
                 ,usg_yn 
                 ,del_yn 
                 ,crt_usr_id 
                 ,crt_dt 
                 ,upt_usr_id 
                 ,upt_dt 
            )
        values(
                 trim(#{lifnr})
                ,trim(#{name1})
                ,'1'
                ,'1'
                ,trim(#{land1})
                ,trim(#{city1})
                ,trim(#{street})
                ,trim(#{pstlz})
                ,trim(#{telf1})
                ,trim(#{telfx})
                ,trim(#{j_1kfrepre})
                ,trim(#{erdat})
                ,substring(trim(#{chg_dtm}), 0, 9)
                ,trim(#{stcd2})
                ,null
                ,null
                ,'Y'
                ,case when trim(#{cud_ci}) = 'D' then 'Y' else 'N' end
                ,'APCHEMS'
                ,to_char(now(),'YYYYMMDDHH24MISS')
                ,'APCHEMS'
                ,to_char(now(),'YYYYMMDDHH24MISS')
        ) on conflict (vndr_no) DO
        update set
              vndr_nm = trim(#{name1})
            , vndr_clsf_cd = '1'
            , vndr_type_cd  = '1'
            , nat_cd = trim(#{land1})
            , cty_cd = trim(#{city1})
            , vndr_addr = trim(#{street})
            , vndr_pst_no = trim(#{pstlz})
            , vndr_phon_no = trim(#{telf1})
            , vndr_fax_no = trim(#{telfx})
            , vndr_rprs_nm = trim(#{j_1kfrepre})
            , vndr_crt_da = trim(#{erdat})
            , vndr_upt_da = substring(trim(#{chg_dtm}), 0, 9)
            , vndr_coreg_no = trim(#{stcd2})
            , usg_yn = 'Y'
            , del_yn = case when trim(#{cud_ci}) = 'D' then 'Y' else 'N' end
            , upt_usr_id = 'APCHEMS'
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_co_vndr.vndr_no  = #{lifnr}
    </update>
    
    <update id="updateVndrSapStt" parameterType="sqlMap">
        /* updateVndrSapStt */
        update ti_co_vndr_sap_recv 
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
		 where snddt = #{snddt}
		   and sndsq = #{sndsq}
		   and lifnr = #{lifnr}
    </update>
    
    <select id="selectUpsertMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectUpsertMtrlList */
		select * from (
		select distinct tcms.mtrl_no 
		      ,tcm.rglt_chk_wkpl_id 
		      ,tcm.mtrl_kind_cd 
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) as rglt_nm
		      ,tcrs.lgnoti_da
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) || ' : ' || '추가' || '(' ||tcrs.lgnoti_da || ')' as re_chk_cau_cntn
		      ,case when tcrs.rglt_crtr_rati is null or tcrs.rglt_crtr_rati =0 or tcms.sbst_rati is null then 'Y'
		            when tcrs.rglt_crtr_rati is not null and tcms.sbst_rati is not null and tcms.sbst_rati >= tcrs.rglt_crtr_rati then 'Y'
		            else 'N'
		       end target_yn
		from tb_ch_mtrl_sbst tcms 
		join tb_ch_rglt_sbst tcrs
		  on tcms.sbst_no = tcrs.sbst_no
		join tb_co_mtrl tcm 
		  on tcms.mtrl_no = tcm.mtrl_no 
		where 1=1
		  and tcms.sbst_no = #{sbst_no}
		  and tcrs.rglt_no = #{rglt_no}
		  and tcrs.usg_yn = 'Y'
		  and tcrs.del_yn = 'N'
		  and tcms.usg_yn = 'Y'
		  and tcms.del_yn = 'N'
		  and tcm.usg_yn = 'Y'
		  and tcm.del_yn = 'N') a 
		  where a.target_yn='Y'
	</select>
	
	<select id="selectUpdateMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectUpdateMtrlList */
		select * from (
		select distinct tcms.mtrl_no 
		      ,tcm.rglt_chk_wkpl_id 
		      ,tcm.mtrl_kind_cd 
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) as rglt_nm
		      ,tcrs.lgnoti_da
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) || ' : ' || '규제대상 함량변경' || '(' ||tcrs.lgnoti_da || ')' as re_chk_cau_cntn
		      ,case when tcrs.rglt_crtr_rati is null or tcrs.rglt_crtr_rati =0 or tcms.sbst_rati is null then 'Y'
		            when tcrs.rglt_crtr_rati is not null and tcms.sbst_rati is not null and tcms.sbst_rati >= tcrs.rglt_crtr_rati then 'Y'
		            else 'N'
		       end as target_yn
		from tb_ch_mtrl_sbst tcms 
		join tb_ch_rglt_sbst tcrs
		  on tcms.sbst_no = tcrs.sbst_no
		join tb_co_mtrl tcm 
		  on tcms.mtrl_no = tcm.mtrl_no 
		where 1=1
		  and tcms.sbst_no = #{sbst_no}
		  and tcrs.rglt_no = #{rglt_no}
		  and tcrs.usg_yn = 'Y'
		  and tcrs.del_yn = 'N'
		  and tcms.usg_yn = 'Y'
		  and tcms.del_yn = 'N'
		  and tcm.usg_yn = 'Y'
		  and tcm.del_yn = 'N') a 
		  where a.target_yn='Y'
	</select>
	
	<select id="selectDeleteMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectDeleteMtrlList */
		select distinct tcmrs.mtrl_no 
		      ,tcm.rglt_chk_wkpl_id 
		      ,tcm.mtrl_kind_cd 
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) as rglt_nm
		      ,tcrs.lgnoti_da
		      ,(select rglt_nm from tb_ch_rglt tcr where tcrs.rglt_no = tcr.rglt_no) || ' : ' || '규제대상 제외' || '(' ||tcrs.lgnoti_da || ')' as re_chk_cau_cntn
		from tb_ch_mtrl_rglt_sbst tcmrs 
		join tb_ch_rglt_sbst tcrs
		  on tcmrs.sbst_no = tcrs.sbst_no and tcmrs.rglt_no = tcrs.rglt_no
		join tb_co_mtrl tcm 
		  on tcmrs.mtrl_no = tcm.mtrl_no 
		where 1=1
		  and tcmrs.sbst_no = #{sbst_no}
		  and tcmrs.rglt_no = #{rglt_no}
		  and tcrs.usg_yn = 'N'
		  and tcrs.del_yn = 'Y'
		  and tcmrs.usg_yn = 'Y'
		  and tcmrs.del_yn = 'N'
		  and tcm.del_yn = 'N'
		  and tcm.usg_yn = 'Y'
	</select>
	
	<insert id="insertRgltMtrlRechk" parameterType="sqlMap">
        /* insertRgltMtrlRechk */
        insert into tb_ch_rglt_chk_mtrl (  
        			   rglt_chk_no
		             , chk_req_clsf_cd
		             , mtrl_no
		             , mtrl_clsf_cd
		             , mtrl_kind_cd
		             , mtrl_type_cd
		             , mtrl_grp_cd
		             , macl_cd
		             , mtrl_ko_nm
		             , mtrl_en_nm
		             , mtrl_zh_nm
		             , mtrl_reg_usr_id
		             , mtrl_reg_da
		             , oem_odm_yn
		             , qdrg_yn
		             , imk_item_no
		             , imk_item_ctgr_cd
		             , imk_item_ctgr_nm
		             , msds_rev_no
		             , mtrl_puse_cd
		             , mtrl_puse_cntn
		             , pchs_unit_cd
		             , pchs_unit_nm
		             , pchs_unit_weght
		             , pchs_unit_nweght_qty
		             , mtrl_fspt_infr_estn_yn
		             , mtrl_fspt_vl
		             , phase_cd
		             , impt_yn
		             , usg_yn
		             , del_yn
		             , crt_usr_id
		             , crt_dt
		             , upt_usr_id
		             , upt_dt
		            )
		        select #{rglt_chk_no}
		             , '2'
		             , mtrl_no
		             , mtrl_clsf_cd
		             , mtrl_kind_cd
		             , mtrl_type_cd
		             , mtrl_grp_cd
		             , macl_cd
		             , mtrl_ko_nm
		             , mtrl_en_nm
		             , mtrl_zh_nm
		             , mtrl_reg_usr_id
		             , mtrl_reg_da
		             , oem_odm_yn
		             , qdrg_yn
		             , imk_item_no
		             , imk_item_ctgr_cd
		             , imk_item_ctgr_nm
		             , msds_rev_no
		             , mtrl_puse_cd
		             , mtrl_puse_cntn
		             , pchs_unit_cd
		             , pchs_unit_nm
		             , pchs_unit_weght
		             , pchs_unit_nweght_qty
		             , mtrl_fspt_infr_estn_yn
		             , mtrl_fspt_vl
		             , phase_cd
		             , impt_yn
		             , usg_yn
		             , del_yn
		             , crt_usr_id
		             , crt_dt
		             , upt_usr_id
		             , upt_dt
		          from tb_co_mtrl tcm
		         where mtrl_no = #{mtrl_no}
		           and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab
		                          on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcm.mtrl_no = aa.mtrl_no 
		                      )
		           and tcm.rglt_chk_yn = 'Y'
    </insert>
    
    <insert id="insertRgltChkMtrlRechk" parameterType="sqlMap">
        /* insertRgltChkMtrlRechk */
        insert 
		    into tb_ch_rglt_chk (
		         rglt_chk_no
		       , chk_req_clsf_cd
		       , chk_type_cd
		       , wkpl_id
		       , rglt_chk_prog_stt_cd
		       , aprv_no
		       , aprv_crt_dt
		       , aprv_cmpt_dt
		       , re_chk_cau_cntn
		       , del_yn
		       , crt_usr_id
		       , crt_dt
		       , upt_usr_id
		       , email_send_yn
		       , upt_dt
		       , rglt_chk_req_da
		       , rglt_chk_req_usr_id)
		   select #{rglt_chk_no}
		        , '2'
		        , '2'
		        , rglt_chk_wkpl_id
		        , '90'
		        , null
		        , null
		        , null
		        , #{re_chk_cau_cntn}
		        , 'N'
		        , 'APCHEMS'
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , 'APCHEMS'
		        , 'Y'
		        , to_char(now(),'YYYYMMDDHH24MISS')
		        , to_char(now(),'YYYYMMDD')
		        , 'APCHEMS'
		     from tb_co_mtrl tcm
		    where mtrl_no = #{mtrl_no}
		      and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcm.mtrl_no = aa.mtrl_no 
		                      )
		      and tcm.rglt_chk_yn = 'Y'
    </insert>
    
    <insert id="insertRgltChkRgltRechk" parameterType="sqlMap">
        /* insertRgltChkRgltRechk */
        insert 
		    into tb_ch_rglt_chk_rglt(
		    	 rglt_chk_no
		    	,chk_req_clsf_cd 
		    	,mtrl_no 
		    	,rglt_no 
		    	,rglt_chk_doma_cd 
		    	,nat_cd 
		    	,rglt_type_cd 
		    	,law_cd 
		    	,rglt_nm 
		    	,rglt_abbr 
		    	,rglt_note 
		    	,sort_seq 
		    	,del_yn 
		    	,crt_usr_id 
		    	,crt_dt 
		    	,upt_usr_id 
		    	,upt_dt )
		   select #{rglt_chk_no}
		    	 ,'2'
		    	 ,mtrl_no 
		    	 ,rglt_no 
		    	 ,rglt_chk_doma_cd 
		    	 ,nat_cd 
		    	 ,rglt_type_cd 
		    	 ,law_cd 
		    	 ,rglt_nm 
		    	 ,rglt_abbr 
		    	 ,rglt_note 
		    	 ,sort_seq 
		    	 ,del_yn 
		    	 ,'APCHEMS' 
		    	 ,to_char(now(),'YYYYMMDDHH24MISS') 
		    	 ,'APCHEMS' 
		    	 ,to_char(now(),'YYYYMMDDHH24MISS') 
		     from tb_ch_mtrl_rglt tcmr
		    where mtrl_no = #{mtrl_no}
		      and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcmr.mtrl_no = aa.mtrl_no 
		                      )
		      and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcmr.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
    </insert>
    
    <insert id="insertRgltChkRgltSbstRechk" parameterType="sqlMap">
        /* insertRgltChkRgltSbstRechk */
        insert 
		    into tb_ch_rglt_chk_rglt_sbst (
		         rglt_chk_no
		        ,chk_req_clsf_cd 
		    	,mtrl_no 
		    	,rglt_no 
		    	,sbst_no 
		    	,sbst_seq 
		    	,lggosi_id 
		    	,lgnoti_no 
		    	,lgnoti_nm 
		    	,lgnoti_da 
		    	,lgnoti_law_nm 
		    	,lgnoti_law_no 
		    	,lgnoti_law_cntn 
		    	,rglt_clsf_nm 
		    	,rglt_dtl_clsf_nm 
		    	,rglt_crtr_rati 
		    	,make_crtr_qty 
		    	,sk_crtr_qty 
		    	,trt_crtr_qty 
		    	,impt_crtr_qty 
		    	,helthsc_cycl_val 
		    	,helthsc_1st_cycl_val 
		    	,dngr_crtr_qty 
		    	,dngr_crtr_unit_nm 
		    	,rglt_crtr_cntn 
		    	,rglt_sbst_note 
		    	,usg_yn 
		    	,del_yn 
		    	,crt_usr_id 
		    	,crt_dt 
		    	,upt_usr_id 
		    	,upt_dt )
		    select rglt_chk_no
		        ,chk_req_clsf_cd 
		    	,mtrl_no 
		    	,rglt_no 
		    	,sbst_no 
		    	,sbst_seq 
		    	,lggosi_id 
		    	,lgnoti_no 
		    	,lgnoti_nm 
		    	,lgnoti_da 
		    	,lgnoti_law_nm 
		    	,lgnoti_law_no 
		    	,lgnoti_law_cntn 
		    	,rglt_clsf_nm 
		    	,rglt_dtl_clsf_nm 
		    	,rglt_crtr_rati 
		    	,make_crtr_qty 
		    	,sk_crtr_qty 
		    	,trt_crtr_qty 
		    	,impt_crtr_qty 
		    	,helthsc_cycl_val 
		    	,helthsc_1st_cycl_val 
		    	,dngr_crtr_qty 
		    	,dngr_crtr_unit_nm 
		    	,rglt_crtr_cntn 
		    	,rglt_sbst_note 
		    	,usg_yn 
		    	,del_yn 
		    	,crt_usr_id 
		    	,crt_dt 
		    	,upt_usr_id 
		    	,upt_dt
		     from(
		    select #{rglt_chk_no} as rglt_chk_no
		    	 ,'2' as chk_req_clsf_cd
		    	 ,tcms.mtrl_no 
		    	 ,tcrs.rglt_no 
		    	 ,tcrs.sbst_no 
		    	 ,tcms.sbst_seq 
		    	 ,tcrs.lggosi_id 
		    	 ,tcrs.lgnoti_no 
		    	 ,tcrs.lgnoti_nm 
		    	 ,tcrs.lgnoti_da 
		    	 ,tcrs.lgnoti_law_nm 
		    	 ,tcrs.lgnoti_law_no 
		    	 ,tcrs.lgnoti_law_cntn 
		    	 ,tcrs.rglt_clsf_nm 
		    	 ,tcrs.rglt_dtl_clsf_nm 
		    	 ,tcrs.rglt_crtr_rati 
		    	 ,tcrs.make_crtr_qty 
		    	 ,tcrs.sk_crtr_qty 
		    	 ,tcrs.trt_crtr_qty 
		    	 ,tcrs.impt_crtr_qty 
		    	 ,tcrs.helthsc_cycl_val 
		    	 ,tcrs.helthsc_1st_cycl_val 
		    	 ,tcrs.dngr_crtr_qty 
		    	 ,tcrs.dngr_crtr_unit_nm 
		    	 ,tcrs.rglt_crtr_cntn 
		    	 ,tcrs.rglt_sbst_note 
		    	 ,tcrs.usg_yn 
		    	 ,tcrs.del_yn 
		    	 ,'APCHEMS' as crt_usr_id
		    	 ,to_char(now(),'YYYYMMDDHH24MISS') as crt_dt  
		    	 ,'APCHEMS' as upt_usr_id 
		    	 ,to_char(now(),'YYYYMMDDHH24MISS') as upt_dt
		    	 ,case when tcrs.rglt_crtr_rati is null or tcrs.rglt_crtr_rati =0 or tcms.sbst_rati is null then 'Y'
		            when tcrs.rglt_crtr_rati is not null and tcms.sbst_rati is not null and tcms.sbst_rati >= tcrs.rglt_crtr_rati then 'Y'
		            else 'N'
		       		end as target_yn
		    from tb_ch_rglt_sbst tcrs
		    join tb_ch_mtrl_sbst tcms
		    <![CDATA[
		      on tcrs.sbst_no = tcms.sbst_no
		      ]]> 
		   where tcms.mtrl_no = #{mtrl_no} 
		     and tcrs.usg_yn = 'Y'
		     and tcrs.del_yn = 'N'
		     and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcms.mtrl_no = aa.mtrl_no 
		                      )
		     and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcms.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
		                     ) a where a.target_yn = 'Y'
    </insert>
    
    <insert id="insertRgltChkSbstRechk" parameterType="sqlMap">
        /* insertRgltChkSbstRechk */
        insert 
		    into tb_ch_rglt_chk_sbst (
		         rglt_chk_no
		        ,chk_req_clsf_cd 
		        ,mtrl_no 
		        ,sbst_no 
		        ,sbst_seq 
		        ,sbst_type_cd 
		        ,cas_no 
		        ,sbst_nm 
		        ,sbst_rati 
		        ,sbst_note 
		        ,del_yn 
		        ,crt_usr_id 
		        ,crt_dt 
		        ,upt_usr_id 
		        ,upt_dt )
		   select #{rglt_chk_no}
		    	 ,'2'
		    	 ,mtrl_no 
		    	 ,sbst_no 
		         ,sbst_seq 
		         ,sbst_type_cd 
		         ,cas_no 
		         ,sbst_ko_nm 
		         ,sbst_rati 
		         ,sbst_note 
		         ,del_yn 
		         ,'APCHEMS' 
		         ,to_char(now(),'YYYYMMDDHH24MISS') 
		         ,'APCHEMS' 
		         ,to_char(now(),'YYYYMMDDHH24MISS') 
		    from tb_ch_mtrl_sbst tcms
		   where mtrl_no = #{mtrl_no}
		     and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcms.mtrl_no = aa.mtrl_no 
		                      )
		     and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcms.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
    </insert>
    
    <insert id="insertRgltChkGwsgnRechk" parameterType="sqlMap">
        /* insertRgltChkGwsgnRechk */
        insert 
		    into tb_ch_rglt_chk_gwsgn (
		         rglt_chk_no
		        ,chk_req_clsf_cd 
		        ,mtrl_no 
		        ,sgw_cd 
		        ,hars_cntn 
		        ,prv_cntn 
		        ,act_cntn 
		        ,str_cntn 
		        ,scr_cntn 
		        ,vndr_no 
		        ,vndr_kyin_yn 
		        ,vndr_nm 
		        ,vndr_type_cd 
		        ,nat_cd 
		        ,vndr_addr 
		        ,vndr_pst_no 
		        ,vndr_phon_no 
		        ,vndr_fax_no 
		        ,vndr_rprs_nm 
		        ,vndr_coreg_no 
		        ,del_yn 
		        ,crt_usr_id 
		        ,crt_dt 
		        ,upt_usr_id 
		        ,upt_dt )
		  select #{rglt_chk_no}
		    	,'2'
		        ,mtrl_no 
		        ,sgw_cd 
		        ,hars_cntn 
		        ,prv_cntn 
		        ,act_cntn 
		        ,str_cntn 
		        ,scr_cntn 
		        ,tcmg.vndr_no 
		        ,'N'
		        ,(select tcv.vndr_nm from tb_co_vndr tcv where tcv.vndr_no = tcmg.vndr_no)
		        ,'1'
		        ,(select tcv.nat_cd from tb_co_vndr tcv where tcv.vndr_no = tcmg.vndr_no)
		        ,null 
		        ,null 
		        ,null 
		        ,null
		        ,null
		        ,null 
		        ,del_yn 
		        ,'APCHEMS'
		        ,to_char(now(),'YYYYMMDDHH24MISS')
		        ,'APCHEMS'
		        ,to_char(now(),'YYYYMMDDHH24MISS')
		   from tb_ch_mtrl_gwsgn tcmg
		  where mtrl_no = #{mtrl_no}
		    and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcmg.mtrl_no = aa.mtrl_no 
		                      )
		    and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcmg.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
    </insert>
    
    <insert id="insertRgltChkGwsgnPicg" parameterType="sqlMap">
        /* insertRgltChkGwsgnPicg */
        insert 
		    into tb_ch_rglt_chk_gwsgn_picg (
		         rglt_chk_no
		        ,chk_req_clsf_cd 
		        ,mtrl_no 
		        ,picg_cd 
		        ,print_yn 
		        ,del_yn 
		        ,crt_usr_id 
		        ,crt_dt 
		        ,upt_usr_id 
		        ,upt_dt)
		  select #{rglt_chk_no}
		    	,'2'
		        ,mtrl_no 
		        ,picg_cd 
		        ,print_yn 
		        ,del_yn 
		        ,'APCHEMS'
		        ,to_char(now(),'YYYYMMDDHH24MISS')
		        ,'APCHEMS'
		        ,to_char(now(),'YYYYMMDDHH24MISS')
		   from tb_ch_mtrl_gwsgn_picg tcmgp
		  where mtrl_no = #{mtrl_no}
		    and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcmgp.mtrl_no = aa.mtrl_no 
		                      )
		    and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcmgp.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
    </insert>
    
    <insert id="insertRgltMtrlMsdsRechk" parameterType="sqlMap">
        /* insertRgltMtrlMsdsRechk */
        insert
			into tb_ch_rglt_chk_msds (
				rglt_chk_no
			  , chk_req_clsf_cd
			  , mtrl_no
			  , msds_ver
			  , enact_da
			  , rev_da
			  , reg_da
			  , reg_usr_id
			  , ko_atfl_no
			  , en_atfl_no
			  , del_yn
			  , crt_usr_id
			  , crt_dt
			  , upt_usr_id
			  , upt_dt)
		select #{rglt_chk_no}
			  , '2'
			  , mtrl_no
			  , msds_ver
			  , enact_da
			  , rev_da
			  , reg_da
			  , reg_usr_id
			  , ko_atfl_no
			  , en_atfl_no
			  , del_yn
			  , 'APCHEMS'
			  , to_char(now(),'YYYYMMDDHH24MISS')
			  , 'APCHEMS'
			  , to_char(now(),'YYYYMMDDHH24MISS')
		from
			tb_ch_mtrl_msds tcmm
		where
			mtrl_no = #{mtrl_no}
			and not exists (select *
		                        from tb_ch_rglt_chk_mtrl aa 
		                        join tb_ch_rglt_chk ab on aa.rglt_chk_no = ab.rglt_chk_no and aa.chk_req_clsf_cd = ab.chk_req_clsf_cd 
		                       where ab.rglt_chk_prog_stt_cd not in ('80')
		                         and tcmm.mtrl_no = aa.mtrl_no 
		                      )
		    and exists (select *
		                    from tb_co_mtrl tcm
		                   where tcm.mtrl_no = tcmm.mtrl_no
		                     and tcm.rglt_chk_yn = 'Y')
    </insert>
    
    <select id="selectMtrlDataList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlDataList */
		select mtrl_no 
		      ,case when #{SESS_LANG} = 'KO' then mtrl_ko_nm 
				            when #{SESS_LANG} = 'EN' then mtrl_en_nm
				            else mtrl_zh_nm end as mtrl_nm
			  ,mtrl_reg_da
			  ,tcrc.rglt_chk_no 
			  ,tcrcm.mtrl_clsf_cd
		from tb_ch_rglt_chk tcrc
		join tb_ch_rglt_chk_mtrl tcrcm
		on tcrc.rglt_chk_no = tcrcm.rglt_chk_no 
		where 1=1
		  and tcrcm.rglt_chk_no in
		  <foreach item="data" collection="rgltNoList"
      		open="(" separator="," close=")">
		   #{data}::text
		  </foreach>
	</select>
	
	<select id="selectMsdstiumData" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdstiumData */
		select b.rglt_chk_no
		      ,case when c.rglt_chk_no is not null and (b.macl_cd = 'IIS' or b.macl_cd = 'ICS' or b.macl_cd = 'HIS' or b.macl_cd = 'IOS' ) then '1' 
		            when d.rglt_chk_no is not null and b.macl_cd != 'IIS' and b.macl_cd != 'ICS' and b.macl_cd != 'HIS' and b.macl_cd != 'IOS' then '2' 
		            else '2'
		            end as chk_req_clsf_cd
		      ,b.mtrl_no
		      ,'1' as msds_ver
		      ,null as enact_da
		      ,null as rev_da
		      ,substring(a.recv_dt,1,8) as reg_da
		      ,a.req_usr_id as reg_usr_id
		      ,#{ko_atfl_no}::Integer as ko_atfl_no
		      ,#{en_atfl_no}::Integer as en_atfl_no
		      ,'N' as del_yn
		      ,b.crt_usr_id
		      ,to_char(now(),'YYYYMMDDHH24MISS') as crt_dt
		      ,b.upt_usr_id
		      ,to_char(now(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_msds_tiumnet_recv a
		  join tb_co_mtrl b on a.mtrl_cd = b.mtrl_no
		  left outer join tb_ch_rglt_chk_req c on b.rglt_chk_no = c.rglt_chk_no
		  left outer join tb_ch_rglt_chk d on b.rglt_chk_no = d.rglt_chk_no
		 where a.trn_yn = 'N' -- 처리 완료 데이터 제외
		   and not exists (select 1 from tb_ch_msds_rev c where a.mtrl_cd=c.mtrl_no and c.rev_prog_stt_cd in ('10','20','30','40'))  -- MSDS 개정 중 자재 제외
		   and b.rglt_chk_yn = 'N' -- 규제검토 완료 전 자재
		   and b.rglt_chk_no = #{rglt_chk_no}
		   and b.mtrl_no = #{mtrl_no}
		   and a.recv_dt = #{recv_dt}
		   and a.recv_seq = #{recv_seq}
	</select>
    
    <select id="selectMtrlVndrSapList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlVndrSapList */
		select 
		     ltrim(trim(matnr),'0') as mtrl_no
		   , snddt
		   , sndsq
		   , lifnr
		   , ekorg
		   , trim(werks) as plant_cd
		   , trim(lifnr) as vndr_no
		   , case when trim(flifn) is not null then 'Y'
		          else 'N' end as cnfm_vndr_yn
		from ti_co_mtrl_vndr_sap_recv
		where trn_yn = 'N'
		order by snddt desc, matnr asc, sndsq asc
	</select>
	
	<update id="upsertMtrlVndrList" parameterType="sqlMap">
        /* upsertMtrlVndrList */
        insert
            into
            tb_co_mtrl_vndr (
                  mtrl_no
                 ,vndr_no
                 ,cnfm_vndr_yn
                 ,crt_usr_id
                 ,del_yn
                 ,crt_dt
                 ,upt_usr_id
                 ,upt_dt
            )
        values(
                 #{mtrl_no}
                ,#{vndr_no}
                ,#{cnfm_vndr_yn}
                ,'APCHEMS'
                ,'N'
                ,to_char(now(),'YYYYMMDDHH24MISS')
                ,'APCHEMS'
                ,to_char(now(),'YYYYMMDDHH24MISS')
        ) on conflict (mtrl_no, vndr_no) DO
        update set
              mtrl_no = #{mtrl_no}
             ,vndr_no = #{vndr_no}
             ,cnfm_vndr_yn = #{cnfm_vndr_yn}
             ,upt_usr_id = 'APCHEMS'
             ,upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_co_mtrl_vndr.vndr_no  = #{vndr_no}
          and tb_co_mtrl_vndr.mtrl_no  = #{mtrl_no}
    </update>
    
    <update id="updateVndrStt" parameterType="sqlMap">
        /* updateVndrStt */
        update ti_co_vndr_sap_recv 
           set trn_yn = 'Y'
              ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
         where lifnr = #{lifnr}
    </update>
    
    <update id="updateMtrlVndrStt" parameterType="sqlMap">
        /* updateMtrlVndrStt */
        update ti_co_mtrl_vndr_sap_recv 
           set trn_yn = 'Y'
              ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
         where trim(lifnr) = #{vndr_no}
           and ltrim(trim(matnr),'0') = #{mtrl_no}
           and trim(werks) = #{plant_cd}
           and ekorg = #{ekorg}
           and snddt = #{snddt}
           and sndsq = #{sndsq}
    </update>
    
    <select id="selectMsdsTiumList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsTiumList */
		select recv_dt
		 	   ,recv_seq
		       ,mtrl_cd 
		       ,req_usr_id 
		       ,msds_file_ko_url
		       ,msds_file_ko_nm
		       ,msds_file_en_url
		       ,msds_file_en_nm
		   from ti_ch_msds_tiumnet_recv tcmtr 
		  where mtrl_cd = #{mtrl_no}
		    and trn_yn = 'N'
		    and tcmtr.msds_file_ko_nm is not null
		  order by recv_dt desc, recv_seq desc limit 1
	</select>
	
	<select id="selectMsdsTiumKoFileKey" parameterType="sqlMap" resultType="string">
		/* selectMsdsTiumKoFileKey */
		select nextval('tb_co_atfl_seq') as ko_atfl_no
	</select>
	
	<select id="selectMsdsTiumEnFileKey" parameterType="sqlMap" resultType="string">
		/* selectMsdsTiumEnFileKey */
		select nextval('tb_co_atfl_seq') as en_atfl_no
	</select>
	
	<insert id="insertMsdsTiumfileMeta" parameterType="sqlMap">
        /* insertMsdsTiumfileMeta */
        insert
		    into
		         tb_co_atfl (
		          atfl_no
		        , atfl_seq
		        , atfl_nm
		        , atfl_url
		        , atfl_size
		        , atfl_note
		        , pub_yn
		        , ext_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select #{atfl_no}::Integer
		      ,1
		      ,case when #{file_lang} = 'ko' then tcmtr.msds_file_ko_nm else tcmtr.msds_file_en_nm end
		      ,case when #{file_lang} = 'ko' then tcmtr.msds_file_ko_url else tcmtr.msds_file_en_url end
		      ,case when #{file_lang} = 'ko' then tcmtr.msds_file_ko_size else tcmtr.msds_file_en_size end
		      ,tcmtr.mtrl_cd
		      ,'Y'
		      ,'Y'
		      ,tcmtr.req_usr_id 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,tcmtr.req_usr_id 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		  from ti_ch_msds_tiumnet_recv tcmtr
		 where mtrl_cd = #{mtrl_no}
		   and trn_yn = 'N'
		   and recv_dt = #{recv_dt}
		 order by recv_dt desc 
		 limit 1
    </insert>
    
    <insert id="insertRgltReqMsds" parameterType="sqlMap">
        /* insertRgltReqMsds */
        insert
		    into
		    tb_ch_rglt_chk_msds (
		          rglt_chk_no 
		        , chk_req_clsf_cd 
		        , mtrl_no
		        , msds_ver
		        , enact_da
		        , rev_da
		        , reg_da
		        , reg_usr_id
		        , ko_atfl_no
		        , en_atfl_no
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		        , imk_atfl_no
		    )
		select #{rglt_chk_no}
		      ,#{chk_req_clsf_cd}
			  ,tcmtr.mtrl_cd as mtrl_no
		      ,tcmtr.msds_file_ko_ver as msds_ver
		      ,null
		      ,null
		      ,substring(tcmtr.recv_dt,1,8)
		      ,tcmtr.req_usr_id 
		      ,#{ko_atfl_no}::Integer
		      ,#{en_atfl_no}::Integer
		      ,'N'
		      ,tcmtr.req_usr_id 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,tcmtr.req_usr_id 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,case when #{imk_atfl_no} is null then null
		            when #{imk_atfl_no} = '' then null
		            else #{imk_atfl_no}::Integer
		            end as imk_atfl_no
		  from ti_ch_msds_tiumnet_recv tcmtr
		 where mtrl_cd = #{mtrl_no}
		   and recv_dt = #{recv_dt}
		   and trn_yn = 'N'
		 order by recv_dt desc
		 limit 1
    </insert>
    
    <insert id="insertImkRgltReqMsds" parameterType="sqlMap">
        /* insertImkRgltReqMsds */
        insert
		    into
		    tb_ch_rglt_chk_msds (
		          rglt_chk_no 
		        , chk_req_clsf_cd 
		        , mtrl_no
		        , msds_ver
		        , enact_da
		        , rev_da
		        , reg_da
		        , reg_usr_id
		        , ko_atfl_no
		        , en_atfl_no
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		        , imk_atfl_no
		    ) values (
		       #{rglt_chk_no}
		      ,#{chk_req_clsf_cd}
			  ,#{mtrl_no}
		      ,'1'
		      ,null
		      ,null
		      ,substring(#{recv_dt},1,8)
		      ,#{usr_id} 
		      ,#{ko_atfl_no}::Integer
		      ,#{en_atfl_no}::Integer
		      ,'N'
		      ,#{usr_id} 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      ,#{usr_id} 
		      ,to_char(now(),'YYYYMMDDHH24MISS')
		      <if test='imk_atfl_no != null and imk_atfl_no != ""'>
		      ,#{imk_atfl_no}::Integer
		      </if>
		      <if test='imk_atfl_no == null or imk_atfl_no == ""'>
		      ,null
		      </if>
		    )
    </insert>
    
    <update id="updateMsdsTiumStt" parameterType="sqlMap">
        /* updateMsdsTiumStt */
        update ti_ch_msds_tiumnet_recv 
           set trn_yn = 'Y'
              ,trn_dt = to_char(now(),'YYYYMMDDHH24MISS')
         where trn_yn = 'N'
           and mtrl_cd = #{mtrl_no}
		   and recv_dt = #{recv_dt}
		   and recv_seq = #{recv_seq}::Integer
    </update>
    
    <select id="selectMtrlCnstSapKey" parameterType="sqlMap" resultType="string">
		/* selectMtrlCnstSapKey */
		/* selectAtfileKey */
		select nextval('ti_co_mtrl_cnst_sap_recv_seq') as key
	</select>
    
    <insert id="insertMtrlCnstSap" parameterType="sqlMap">
        /* insertMtrlCnstSap */
        insert into ti_co_mtrl_cnst_sap_recv(
					datetime
				   ,zseq
				   ,matnr
				   ,matnr_r
				   ,concd
				   ,con_in_per
				   ,conname_ko
				   ,conname_en
				   ,conname_cn
				   ,conname_ja
				   ,fcname_ko
				   ,fcname_en
				   ,casno
				   ,mixre
				   ,zgloval
				   ,zbubcl
				   ,zgllim
				   ,trn_yn
				   ,trn_dt
			) values (
					#{datetime}
				   ,#{zseq}
				   ,#{matnr}
				   ,#{matnr_r}
				   ,#{concd}
				   ,#{con_in_per}::Numeric
				   ,#{conname_ko}
				   ,#{conname_en}
				   ,#{conname_cn}
				   ,#{conname_ja}
				   ,#{fcname_ko}
				   ,#{fcname_en}
				   ,#{casno}
				   ,#{mixre}
				   ,#{zgloval}
				   ,#{zbubcl}
				   ,#{zgllim}
				   ,'N'
				   ,to_char(now(),'YYYYMMDDHH24MISS')
			)
    </insert>
    
    <insert id="insertMtrlCnst" parameterType="sqlMap">
        /* insertMtrlCnst */
        insert into tb_ch_mtrl_cnst(
					mtrl_no 
				   ,cnst_no 
				   ,cas_no 
				   ,cnst_ratio 
				   ,cnst_ko_nm 
				   ,cnst_en_nm 
				   ,cnst_zh_nm 
				   ,cnst_func_ko_nm 
				   ,cnst_func_en_nm 
				   ,mix_rglt_cntn 
				   ,glob_prhb_yn 
				   ,del_yn 
				   ,crt_usr_id 
				   ,crt_dt 
				   ,upt_usr_id 
				   ,upt_dt 
			) values (
				    #{matnr}
				   ,#{concd}
				   ,#{casno}
				   ,#{con_in_per}::Numeric
				   ,#{conname_ko}
				   ,#{conname_en}
				   ,#{conname_cn}
				   ,#{fcname_ko}
				   ,#{fcname_en}
				   ,#{mixre}
				   ,case when #{zgloval} like '%금지%' then 'Y' 
				         else 'N' end
				   ,'N'
				   ,'APCHEMS'
				   ,to_char(now(),'YYYYMMDDHH24MISS')
				   ,'APCHEMS'
				   ,to_char(now(),'YYYYMMDDHH24MISS')
			) on conflict (mtrl_no, cnst_no) DO
        update set
              cas_no = #{casno}
             ,cnst_ratio = #{con_in_per}::Numeric
             ,cnst_ko_nm = #{conname_ko}
             ,cnst_en_nm = #{conname_en}
             ,cnst_zh_nm = #{conname_cn}
             ,cnst_func_ko_nm = #{fcname_ko}
             ,cnst_func_en_nm = #{fcname_en}
             ,mix_rglt_cntn = #{mixre}
             ,glob_prhb_yn = case when #{zgloval} like '%금지%' then 'Y' 
				         	 else 'N' end
             ,del_yn = 'N'
             ,upt_usr_id = 'APCHEMS'
             ,upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_mtrl_cnst.mtrl_no  = #{matnr}
          and tb_ch_mtrl_cnst.cnst_no = #{concd}
    </insert>
    
    <update id="deleteMtrlCnst" parameterType="sqlMap">
        /* deleteMtrlCnst */
        update tb_ch_mtrl_cnst 
		   set del_yn = 'Y'
		 where mtrl_no = #{matnr}
    </update>
    
    <insert id="insertRgltChkCnst" parameterType="sqlMap">
        /* insertRgltChkCnst */
        insert into tb_ch_rglt_chk_cnst(
					rglt_chk_no
				   ,chk_req_clsf_cd
				   ,mtrl_no
				   ,comp_cnst_no
				   ,cas_no
				   ,comp_cnst_ratio
				   ,comp_cnst_ko_nm
				   ,comp_cnst_en_nm
				   ,comp_cnst_zh_nm
				   ,comp_cnst_func_ko_nm
				   ,comp_cnst_func_en_nm
				   ,mix_rglt_cntn
				   ,glob_prhb_yn
				   ,del_yn
				   ,crt_usr_id
				   ,crt_dt
				   ,upt_usr_id
				   ,upt_dt
			) select
				    #{rglt_chk_no}
				   ,#{chk_req_clsf_cd}
				   ,#{mtrl_no}
				   ,cnst_no
				   ,cas_no
				   ,cnst_ratio::Numeric
				   ,cnst_ko_nm
				   ,cnst_en_nm
				   ,cnst_zh_nm
				   ,cnst_func_ko_nm
				   ,cnst_func_en_nm
				   ,mix_rglt_cntn
				   ,glob_prhb_yn
				   ,'N'
				   ,#{usr_id}
				   ,to_char(now(),'YYYYMMDDHH24MISS')
				   ,#{usr_id}
				   ,to_char(now(),'YYYYMMDDHH24MISS')
			   from tb_ch_mtrl_cnst 
			  where mtrl_no = #{mtrl_no}
			    and del_yn = 'N'
    </insert>
    
    <insert id="insertRgltChkSbst" parameterType="sqlMap">
        /* insertRgltChkSbst */
        insert into tb_ch_rglt_chk_sbst(
					rglt_chk_no
				   ,chk_req_clsf_cd
				   ,mtrl_no
				   ,sbst_no
				   ,sbst_seq
				   ,sbst_type_cd
				   ,cas_no
				   ,sbst_nm
				   ,sbst_rati
				   ,sbst_note
				   ,del_yn
				   ,crt_usr_id
				   ,crt_dt
				   ,upt_usr_id
				   ,upt_dt
			) select
					#{rglt_chk_no}
				   ,#{chk_req_clsf_cd}
				   ,#{mtrl_no}
				   ,tcs.sbst_no 
				   ,row_number() over()
				   ,tcs.sbst_type_cd 
				   ,tcs.cas_no 
				   ,coalesce(tcs.sbst_ko_nm, tcs.sbst_en_nm)
				   ,tcmc.cnst_ratio::Numeric
				   ,''
				   ,'N'
				   ,#{usr_id}
				   ,to_char(now(),'YYYYMMDDHH24MISS')
				   ,#{usr_id}
				   ,to_char(now(),'YYYYMMDDHH24MISS')
			   from tb_ch_sbst tcs
			   join tb_ch_mtrl_cnst tcmc
			     on tcs.cas_no = tcmc.cas_no 
			  where tcmc.mtrl_no = #{mtrl_no}
			    and tcs.del_yn = 'N'
			    and tcmc.del_yn = 'N'
			    and tcs.usg_yn = 'Y'
			    and tcs.cas_no is not null
			    and tcs.cas_no != ''
    </insert>
    
    <insert id="insertWrkAreaCdGrp" parameterType="sqlMap">
        /* insertWrkAreaCdGrp */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000023' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000023' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000023'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn 
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		select
		    distinct 
		      ma.wrk_area as cd
		from
		    ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.wrk_area)) > 0
		    ]]>
		    and not exists (
		                    select 1
		                      from tb_co_cd cd2
		                     where cd2.cd = ma.wrk_area
		                       and cd2.cd_grp_no = 'CH00000023'
		                   )
		    and exists (select 1
		                  from tb_co_cd cd
		                  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                 where rl.cd_grp_no = 'CO00000007'
		                   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
		                   and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		order by ma.wrk_area
		) aa
    </insert>
    
    <insert id="insertWhWrkAreaCdGrp" parameterType="sqlMap">
        /* insertWhWrkAreaCdGrp */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000023' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000023' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000023'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn 
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		select
		    distinct 
		      ma.wrk_area as cd
		from
		    ti_ch_mtrl_wh_hal3_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.wrk_area)) > 0
		    ]]>
		    and not exists (
		                    select 1
		                      from tb_co_cd cd2
		                     where cd2.cd = ma.wrk_area
		                       and cd2.cd_grp_no = 'CH00000023'
		                   )
		    and exists (select 1
		                  from tb_co_cd cd
		                  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                 where rl.cd_grp_no = 'CO00000007'
		                   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
		                   and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		order by ma.wrk_area
		) aa
    </insert>
    
    <insert id="insertWrkAreaCdGrpMlang" parameterType="sqlMap">
        /* insertWrkAreaCdGrpMlang */
        with wrkarea as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn as mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.wrk_area as cd
		                        , max(ma.wrk_area_name) as mlang_cntn
		                    from
		                        ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.wrk_area)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		                    group by ma.wrk_area
		                    order by ma.wrk_area
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000023'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert
		    into
		    tb_co_mlang (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 
		     'CD' || lpad(((select max(replace(mlang_no,'CD','')::integer) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd))::varchar,8,'0') as mlang_no 
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000023' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.wrk_area as cd
		            , max(ma.wrk_area_name) as mlang_cntn
		        from
		            ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_area)) > 0
		            ]]>
		            and not exists (select 1
		                              from tb_co_mlang cd3
		                             where cd3.cd = ma.wrk_area
		                               and cd3.cd_grp_no = 'CH00000023'
		                           )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		         group by ma.wrk_area
		        order by ma.wrk_area
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		 where not exists (select 1 from wrkarea where cd=aa.cd and cd_grp_no = 'CH00000023' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertWhWrkAreaCdGrpMlang" parameterType="sqlMap">
        /* insertWhWrkAreaCdGrpMlang */
        with wrkarea as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn as mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.wrk_area as cd
		                        , max(ma.wrk_area_name) as mlang_cntn
		                    from
		                        ti_ch_mtrl_wh_hal3_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.wrk_area)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		                    group by ma.wrk_area
		                    order by ma.wrk_area
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000023'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert
		    into
		    tb_co_mlang (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 
		     'CD' || lpad(((select max(replace(mlang_no,'CD','')::integer) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd))::varchar,8,'0') as mlang_no 
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000023' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.wrk_area as cd
		            , max(ma.wrk_area_name) as mlang_cntn
		        from
		            ti_ch_mtrl_wh_hal3_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_area)) > 0
		            ]]>
		            and not exists (select 1
		                              from tb_co_mlang cd3
		                             where cd3.cd = ma.wrk_area
		                               and cd3.cd_grp_no = 'CH00000023'
		                           )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		         group by ma.wrk_area
		        order by ma.wrk_area
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		 where not exists (select 1 from wrkarea where cd=aa.cd and cd_grp_no = 'CH00000023' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertWrkAreaCd" parameterType="sqlMap">
        /* insertWrkAreaCd */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000024' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000024' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000024'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn 
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		        select
		            distinct 
		              ma.wrk_center as cd
		        from
		            ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_center)) > 0
		            ]]>
		            and not exists (
		                            select 1
		                              from tb_co_cd cd2
		                             where cd2.cd_grp_no = 'CH00000024'
		                               and cd2.cd = ma.wrk_center
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출    
		        order by ma.wrk_center 
		) aa
    </insert>
    
    <insert id="insertWhWrkAreaCd" parameterType="sqlMap">
        /* insertWhWrkAreaCd */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000024' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000024' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000024'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn 
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		        select
		            distinct 
		              ma.wrk_center as cd
		        from
		            ti_ch_mtrl_wh_hal3_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_center)) > 0
		            ]]>
		            and not exists (
		                            select 1
		                              from tb_co_cd cd2
		                             where cd2.cd_grp_no = 'CH00000024'
		                               and cd2.cd = ma.wrk_center
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출    
		        order by ma.wrk_center 
		) aa
    </insert>
    
    <insert id="insertWrkAreaCdMlang" parameterType="sqlMap">
        /* insertWrkAreaCdMlang */
        with wrkcenter as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.wrk_center as cd
		                        , max(ma.wrk_center_name) as mlang_cntn
		                    from
		                        ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.wrk_center)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		                    group by ma.wrk_center
		                    order by ma.wrk_center
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000024'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert
		    into
		    tb_co_mlang (
		        mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 
		     'CD' || (select max(lpad(replace(mlang_no,'CD',''),8 ,'0')::numeric) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd) as mlang_no 
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000024' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.wrk_center as cd
		            , max(ma.wrk_center_name) as mlang_cntn
		        from
		            ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_center)) > 0
		            ]]>
		            and not exists (
		                            select 1
		                              from tb_co_mlang cd3
		                             where cd3.cd = ma.wrk_center
		                               and cd3.cd_grp_no = 'CH00000024'
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출    
		        group by ma.wrk_center
		        order by ma.wrk_center
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		 where not exists (select 1 from wrkcenter where cd=aa.cd and cd_grp_no = 'CH00000025' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertWhWrkAreaCdMlang" parameterType="sqlMap">
        /* insertWhWrkAreaCdMlang */
        with wrkcenter as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.wrk_center as cd
		                        , max(ma.wrk_cente_name) as mlang_cntn
		                    from
		                        ti_ch_mtrl_wh_hal3_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.wrk_center)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		                    group by ma.wrk_center
		                    order by ma.wrk_center
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000024'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert
		    into
		    tb_co_mlang (
		        mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 
		     'CD' || (select max(lpad(replace(mlang_no,'CD',''), 8, '0')::numeric) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd) as mlang_no 
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000024' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.wrk_center as cd
		            , max(ma.wrk_cente_name) as mlang_cntn
		        from
		            ti_ch_mtrl_wh_hal3_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.wrk_center)) > 0
		            ]]>
		            and not exists (
		                            select 1
		                              from tb_co_mlang cd3
		                             where cd3.cd = ma.wrk_center
		                               and cd3.cd_grp_no = 'CH00000024'
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출    
		        group by ma.wrk_center
		        order by ma.wrk_center
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		 where not exists (select 1 from wrkcenter where cd=aa.cd and cd_grp_no = 'CH00000025' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertEqupCd" parameterType="sqlMap">
        /* insertEqupCd */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000025' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000025' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000025'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		        select
		            distinct 
		              ma.equp_code as cd
		        from
		            ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.equp_code)) > 0
		            ]]>
		            and not exists (select 1
		                              from tb_co_cd cd2
		                             where cd2.cd_grp_no = 'CH00000025'
		                               and cd2.cd = ma.equp_code
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출   
		        order by ma.equp_code 
		        ) aa
    </insert>
    
    <insert id="insertWhEqupCd" parameterType="sqlMap">
        /* insertWhEqupCd */
        insert
		    into
		    tb_co_cd (
		        cd_grp_no
		        , cd
		        , sort_seq
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    )
		select 'CH00000025' as cd_grp_no
		    , aa.cd
		    <![CDATA[
		    , coalesce ((select max(cd3.sort_seq) from tb_co_cd cd3 where cd3.cd_grp_no='CH00000025' and cd3.sort_seq < 99999), row_number () over (), (select max(cd3.sort_seq) + row_number () over () from tb_co_cd cd3 where cd3.cd_grp_no='CH00000025'))
		    ]]>
		    ,'Y' as usg_yn 
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as crt_dt 
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from (
		        select
		            distinct 
		              ma.equp_code as cd
		        from
		            ti_ch_mtrl_wh_hal3_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.equp_code)) > 0
		            ]]>
		            and not exists (select 1
		                              from tb_co_cd cd2
		                             where cd2.cd_grp_no = 'CH00000025'
		                               and cd2.cd = ma.equp_code
		                            )
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출   
		        order by ma.equp_code 
		        ) aa
    </insert>
    
    <insert id="insertEqupCdMlang" parameterType="sqlMap">
        /* insertEqupCdMlang */
        with equplang as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.equp_code as cd
		                        , ma.equp_code as mlang_cntn
		                    from
		                        ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.equp_code)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출   
		                    group by ma.equp_code
		                    order by ma.equp_code
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000025'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert into tb_co_mlang 
		       (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		       )
		select
		      'CD' || (select max(lpad(replace(mlang_no,'CD',''), 8, '0')::numeric) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd) as mlang_no
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000025' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.equp_code as cd
		            , ma.equp_code as mlang_cntn
		        from
		            ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.equp_code)) > 0
		            ]]>
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		        group by ma.equp_code
		        order by ma.equp_code
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		where not exists (select 1 from equplang where cd=aa.cd and cd_grp_no = 'CH00000025' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertWhEqupCdMlang" parameterType="sqlMap">
        /* insertWhEqupCdMlang */
        with equplang as (
		    update tb_co_mlang cm
		       set mlang_cntn = ab.mlang_cntn
		          ,mlang_abbr = ab.mlang_cntn
		          ,upt_usr_id = 'AC927145'
		          ,upt_dt = TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		      from (
		            select aa.cd
		                  ,aa.mlang_cntn
		                  ,cl.lang_cd
		              from (
		                    select
		                          ma.equp_code as cd
		                        , ma.equp_code as mlang_cntn
		                    from
		                        ti_ch_mtrl_wh_hal3_mes_recv ma
		                    where
		                        ma.trn_yn = 'N'
		                        <![CDATA[
		                        and length(trim(ma.equp_code)) > 0
		                        ]]>
		                        and exists (select 1
		                                      from tb_co_cd cd
		                                      join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                                     where rl.cd_grp_no = 'CO00000007'
		                                       and cd.usg_yn = 'Y'
		                                       and cd.del_yn = 'N'
		                                       and rl.usg_yn = 'Y'
		                                       and rl.del_yn = 'N'
		                                       and rl.cd = ma.plant) -- 관리대상 플랜트만 추출   
		                    group by ma.equp_code
		                    order by ma.equp_code
		                    --, cl.lang_cd
		                    ) aa
		                    join 
		                    (select cd.cd as lang_cd
		                       from tb_co_cd cd
		                      where cd.cd_grp_no = 'CO00000002'
		                    ) cl on 1 = 1
		            ) ab
		     where cm.cd_grp_no = 'CH00000025'
		       and cm.cd = ab.cd
		       and cm.lang_cd = ab.lang_cd
		       returning cm.*
		)
		insert into tb_co_mlang 
		       (
		          mlang_no
		        , lang_cd
		        , mlang_type_cd
		        , biz_cd
		        , mlang_cntn
		        , mlang_abbr
		        , cd_grp_no
		        , cd
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		       )
		select
		      'CD' || lpad(((select max(replace(mlang_no,'CD','')::integer) from tb_co_mlang where mlang_type_cd = 'CD') + row_number () over (partition by cl.lang_cd order by cl.lang_cd, aa.cd))::varchar,8,'0') as mlang_no
		    , cl.lang_cd
		    , 'CD' as mlang_type_cd
		    , 'CH' as biz_cd
		    , aa.mlang_cntn
		    , aa.mlang_cntn as mlang_abbr
		    ,'CH00000025' as cd_grp_no
		    , aa.cd
		    ,'Y' as usg_yn
		    ,'N' as del_yn
		    ,'AC927145' as crt_usr_id
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    ,'AC927145' as upt_usr_id 
		    ,TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		  from (
		        select
		              ma.equp_code as cd
		            , ma.equp_code as mlang_cntn
		        from
		            ti_ch_mtrl_wh_hal3_mes_recv ma
		        where
		            ma.trn_yn = 'N'
		            <![CDATA[
		            and length(trim(ma.equp_code)) > 0
		            ]]>
		            and exists (select 1
		                          from tb_co_cd cd
		                          join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		                         where rl.cd_grp_no = 'CO00000007'
		                           and cd.usg_yn = 'Y'
		                           and cd.del_yn = 'N'
		                           and rl.usg_yn = 'Y'
		                           and rl.del_yn = 'N'
		                           and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		        group by ma.equp_code
		        order by ma.equp_code
		        --, cl.lang_cd
		        ) aa
		        join (select cd.cd as lang_cd
		                from tb_co_cd cd
		               where cd.cd_grp_no = 'CO00000002'
		        ) cl on 1 = 1
		where not exists (select 1 from equplang where cd=aa.cd and cd_grp_no = 'CH00000025' and lang_cd = cl.lang_cd)
    </insert>
    
    <insert id="insertEqupWrkAreaRel" parameterType="sqlMap">
        /* insertEqupWrkAreaRel */
        INSERT INTO tb_co_cd_rel
		(cd_grp_no, cd, up_cd_grp_no, up_cd, usg_yn, del_yn, crt_usr_id, crt_dt, upt_usr_id, upt_dt)
		select
		      'CH00000025' as cd_grp_cd
		    , ma.equp_code as cd
		    , 'CH00000024' as up_cd_grp_cd
		    , ma.wrk_center as up_cd
		    , 'Y'
		    , 'N'
		    , 'AC927145' as crt_usr_id
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    , 'AC927145' as upt_usr_id 
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		from
		    ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.equp_code)) > 0
		    ]]>
		    and not exists (select 1 
		                      from tb_co_cd_rel ab 
		                     where ab.cd_grp_no='CH00000025' 
		                       and ab.up_cd_grp_no = 'CH00000024' 
		                       and ab.cd = ma.equp_code 
		                       and ab.up_cd = ma.wrk_center)
		    and exists (select 1
		              from tb_co_cd cd
		              join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		             where rl.cd_grp_no = 'CO00000007'
		               and cd.usg_yn = 'Y'
		               and cd.del_yn = 'N'
		               and rl.usg_yn = 'Y'
		               and rl.del_yn = 'N'
		               and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		group by ma.equp_code, ma.wrk_center 
    </insert>
    
    <insert id="insertWhEqupWrkAreaRel" parameterType="sqlMap">
        /* insertWhEqupWrkAreaRel */
        INSERT INTO tb_co_cd_rel
		(cd_grp_no, cd, up_cd_grp_no, up_cd, usg_yn, del_yn, crt_usr_id, crt_dt, upt_usr_id, upt_dt)
		select
		      'CH00000025' as cd_grp_cd
		    , ma.equp_code as cd
		    , 'CH00000024' as up_cd_grp_cd
		    , ma.wrk_center as up_cd
		    , 'Y'
		    , 'N'
		    , 'AC927145' as crt_usr_id
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    , 'AC927145' as upt_usr_id 
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		from
		    ti_ch_mtrl_wh_hal3_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.equp_code)) > 0
		    ]]>
		    and not exists (select 1 
		                      from tb_co_cd_rel ab 
		                     where ab.cd_grp_no='CH00000025' 
		                       and ab.up_cd_grp_no = 'CH00000024' 
		                       and ab.cd = ma.equp_code 
		                       and ab.up_cd = ma.wrk_center)
		    and exists (select 1
		              from tb_co_cd cd
		              join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		             where rl.cd_grp_no = 'CO00000007'
		               and cd.usg_yn = 'Y'
		               and cd.del_yn = 'N'
		               and rl.usg_yn = 'Y'
		               and rl.del_yn = 'N'
		               and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		group by ma.equp_code, ma.wrk_center 
    </insert>
    
    <insert id="insertEqupWrkAreaRelT" parameterType="sqlMap">
        /* insertEqupWrkAreaRelT */
        INSERT INTO tb_co_cd_rel
		(cd_grp_no, cd, up_cd_grp_no, up_cd, usg_yn, del_yn, crt_usr_id, crt_dt, upt_usr_id, upt_dt)
		select
		      'CH00000024' as cd_grp_cd
		    , ma.wrk_center as cd
		    , 'CH00000023' as up_cd_grp_cd
		    , ma.wrk_area as up_cd
		    , 'Y'
		    , 'N'
		    , 'AC927145' as crt_usr_id
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    , 'AC927145' as upt_usr_id 
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		from
		    ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.equp_code)) > 0
		    ]]>
		    and not exists (select 1 
		                      from tb_co_cd_rel ab 
		                     where ab.cd_grp_no='CH00000024' 
		                       and ab.up_cd_grp_no = 'CH00000023' 
		                       and ab.cd = ma.wrk_center 
		                       and ab.up_cd = ma.wrk_area)
		    and exists (select 1
		              from tb_co_cd cd
		              join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		             where rl.cd_grp_no = 'CO00000007'
		               and cd.usg_yn = 'Y'
		               and cd.del_yn = 'N'
		               and rl.usg_yn = 'Y'
		               and rl.del_yn = 'N'
		               and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		group by ma.wrk_center, ma.wrk_area
    </insert>
    
    <insert id="insertWhEqupWrkAreaRelT" parameterType="sqlMap">
        /* insertWhEqupWrkAreaRelT */
        INSERT INTO tb_co_cd_rel
		(cd_grp_no, cd, up_cd_grp_no, up_cd, usg_yn, del_yn, crt_usr_id, crt_dt, upt_usr_id, upt_dt)
		select
		      'CH00000024' as cd_grp_cd
		    , ma.wrk_center as cd
		    , 'CH00000023' as up_cd_grp_cd
		    , ma.wrk_area as up_cd
		    , 'Y'
		    , 'N'
		    , 'AC927145' as crt_usr_id
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		    , 'AC927145' as upt_usr_id 
		    , TO_CHAR(NOW(),'YYYYMMDDHH24MISS')
		from
		    ti_ch_mtrl_wh_hal3_mes_recv ma
		where
		    ma.trn_yn = 'N'
		    <![CDATA[
		    and length(trim(ma.equp_code)) > 0
		    ]]>
		    and not exists (select 1 
		                      from tb_co_cd_rel ab 
		                     where ab.cd_grp_no='CH00000024' 
		                       and ab.up_cd_grp_no = 'CH00000023' 
		                       and ab.cd = ma.wrk_center 
		                       and ab.up_cd = ma.wrk_area)
		    and exists (select 1
		              from tb_co_cd cd
		              join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
		             where rl.cd_grp_no = 'CO00000007'
		               and cd.usg_yn = 'Y'
		               and cd.del_yn = 'N'
		               and rl.usg_yn = 'Y'
		               and rl.del_yn = 'N'
		               and rl.cd = ma.plant) -- 관리대상 플랜트만 추출
		group by ma.wrk_center, ma.wrk_area
    </insert>
    
    <insert id="insertDlDdData" parameterType="sqlMap">
        /* insertDlDdData */
        insert into tb_ch_mtrl_dl_dd(
					dl_ya 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select wghg_date as dl_ya
		     , aa.matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = aa.plant) as wkpl_id
		     , aa.plant as plant_cd
		     , aa.wrk_area as wrk_area_cd
		     , aa.wrk_center as wrk_center_cd
		     , aa.equp_code as equip_cd
		     , sum(aa.wghg_wgt) as dl_qty
		     , substring(wghg_date, 0, 5)
		     , substring(wghg_date, 5, 2)
		     , substring(wghg_date, 7, 2)
		     , substring(wghg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from (
		select matr_code
			 , plant
			 , wrk_area
			 , wrk_center
			 , equp_code
			 , sum(wghg_wgt) as wghg_wgt
			 , wghg_date
		  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		 where exists (select 1
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '261' and ma.cud_ci = 'C') or (ma.tran_type = '262' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.wghg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.wghg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, wrk_area, wrk_center, equp_code, wghg_date
		union
		select matr_code
			 , plant
			 , wrk_area
			 , wrk_center
			 , equp_code
			 , -1*sum(wghg_wgt) as wghg_wgt
			 , wghg_date
		  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '262' and ma.cud_ci = 'C') or (ma.tran_type = '261' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.wghg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.wghg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, wrk_area, wrk_center, equp_code, wghg_date
		union
		select bb.matr_code
			 , bb.plant
			 , bb.wrk_area
			 , bb.wrk_center
			 , bb.equp_code
			 , sum(wghg_wgt) as wghg_wgt
			 , wghg_date
		  from (
				select matr_code
					 , plant
					 , wrk_area
					 , wrk_center
					 , equp_code
					 , mnu_order
					 , mnu_order_item_seq
					 , lot_no
					 , max(wghg_wgt) as wghg_wgt
					 , wghg_date
				  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '261'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.wghg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.wghg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , wrk_area
					 , wrk_center
					 , equp_code
					 , wghg_date
					 , mnu_order
					 , mnu_order_item_seq
					 , lot_no
				) bb 
			group by bb.matr_code
					 , bb.plant
					 , bb.wrk_area
					 , bb.wrk_center
					 , bb.equp_code
					 , bb.wghg_date
		union
		select bb.matr_code
			 , bb.plant
			 , bb.wrk_area
			 , bb.wrk_center
			 , bb.equp_code
			 , sum(wghg_wgt) as wghg_wgt
			 , wghg_date
		  from (
				select matr_code
					 , plant
					 , wrk_area
					 , wrk_center
					 , equp_code
					 , mnu_order
					 , mnu_order_item_seq
					 , lot_no
					 , max(wghg_wgt)*-1 as wghg_wgt
					 , wghg_date
				  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '262'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.wghg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.wghg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , wrk_area
					 , wrk_center
					 , equp_code
					 , wghg_date
					 , mnu_order
					 , mnu_order_item_seq
					 , lot_no
				) bb 
			group by bb.matr_code
					 , bb.plant
					 , bb.wrk_area
					 , bb.wrk_center
					 , bb.equp_code
					 , bb.wghg_date
		) aa
		group by aa.matr_code, aa.plant, aa.wrk_area, aa.wrk_center, aa.equp_code, aa.wghg_date
    </insert>
    
    <insert id="insertWhDdRohData" parameterType="sqlMap">
        /* insertWhDdRohData */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select strg_date as wh_da 
		     , aa.matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = aa.plant) as wkpl_id
		     , aa.plant as plant_cd
		     , case when aa.pur_type = '11' then 'Y'
		            else 'N' 
		            end as impt_yn
		     , aa.po_dept_cd
		     , aa.save_loc
		     , 'ZZ6WH' as wrk_area_cd
		     , 'ZZ6WH' as wrk_center_cd
		     , 'ZZ6WH' as equip_cd
		     , sum(aa.strg_wgt) as wh_qty
		     , substring(strg_date, 0, 5)
		     , substring(strg_date, 5, 2)
		     , substring(strg_date, 7, 2)
		     , substring(strg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from (
		select matr_code, plant, sum(strg_wgt::numeric) as strg_wgt, strg_date, (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = pur_prsn) as po_dept_cd, save_loc, pur_type
		  from ti_ch_mtrl_wh_roh6_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '101' and ma.cud_ci = 'C') or (ma.tran_type = '102' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, strg_date, po_dept_cd, save_loc, pur_type
		union
		select matr_code, plant, -1*sum(strg_wgt::numeric) as strg_wgt, strg_date, (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = pur_prsn) as po_dept_cd, save_loc, pur_type
		  from ti_ch_mtrl_wh_roh6_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '102' and ma.cud_ci = 'C') or (ma.tran_type = '101' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, strg_date, po_dept_cd, save_loc, pur_type
		union
		select bb.matr_code
		     , bb.plant
		     , sum(bb.strg_wgt::numeric) as strg_wgt
		     , bb.strg_date
		     , bb.po_dept_cd
		     , bb.save_loc
		     , bb.pur_type
		  from (
				select matr_code
					 , plant
					 , pur_order
					 , pur_item_seq
					 , lot_no
					 , max(strg_wgt::numeric) as strg_wgt
					 , strg_date
					 , (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = pur_prsn) as po_dept_cd
					 , save_loc
					 , pur_type
				  from ti_ch_mtrl_wh_roh6_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '101'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , pur_order
					 , pur_item_seq
					 , lot_no
					 , strg_date
					 , po_dept_cd
					 , save_loc
					 , pur_type
				) bb 
			group by bb.matr_code, bb.plant, bb.strg_date, bb.po_dept_cd, bb.save_loc, bb.pur_type
		union
		select bb.matr_code
		     , bb.plant
		     , sum(bb.strg_wgt::numeric) as strg_wgt
		     , bb.strg_date
		     , bb.po_dept_cd
		     , bb.save_loc
		     , bb.pur_type
		  from (
				select matr_code
					 , plant
					 , pur_order
					 , pur_item_seq
					 , lot_no
					 , max(strg_wgt::numeric)*-1 as strg_wgt
					 , strg_date
					 , (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = pur_prsn) as po_dept_cd
					 , save_loc
					 , pur_type
				  from ti_ch_mtrl_wh_roh6_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '102'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , pur_order
					 , pur_item_seq
					 , lot_no
					 , strg_date
					 , po_dept_cd
					 , save_loc
					 , pur_type
				) bb 
			group by bb.matr_code, bb.plant, bb.strg_date, bb.po_dept_cd, bb.save_loc, bb.pur_type
		) aa
		group by aa.matr_code, aa.plant, aa.strg_date, aa.po_dept_cd, aa.save_loc, aa.pur_type
    </insert>
    
    <insert id="insertDlDdEtcData" parameterType="sqlMap">
        /* insertDlDdEtcData */
        insert into tb_ch_mtrl_dl_dd(
					dl_ya 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select inout_date as dl_ya
		     , aa.matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = aa.plant) as wkpl_id
		     , aa.plant as plant_cd
		     , 'ZZZZZ' as wrk_area_cd
		     , 'ZZZZZ' as wrk_center_cd
		     , 'ZZZZZ' as equip_cd
		     , sum(aa.inout_wgt) as dl_qty
		     , substring(inout_date, 0, 5)
		     , substring(inout_date, 5, 2)
		     , substring(inout_date, 7, 2)
		     , substring(inout_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from (
		select matr_code, plant, sum(inout_wgt) as inout_wgt, inout_date
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') and cud_ci = 'C'
		   <![CDATA[
		   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, inout_date
		union
		select matr_code, plant, -1*sum(inout_wgt) as inout_wgt, inout_date
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') and cud_ci = 'D'
		   <![CDATA[
		   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, inout_date
		union
		select matr_code, plant, -1*sum(inout_wgt) as inout_wgt, inout_date
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('332', '334', '552', '554', '556','Z02', 'Z06') and cud_ci = 'C'
		   <![CDATA[
		   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, inout_date
		union
		select matr_code, plant, sum(inout_wgt) as inout_wgt, inout_date
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('332', '334', '552', '554', '556','Z02', 'Z06') and cud_ci = 'D'
		   <![CDATA[
		   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, inout_date
		union
		select bb.matr_code
			 , bb.plant
			 , sum(bb.inout_wgt) as inout_wgt
			 , bb.inout_date
		  from (
				select matr_code
				     , plant
				     , max(inout_wgt) as inout_wgt
				     , inout_date
				     , lot_no
				  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and tran_type in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') and cud_ci = 'U'
				   <![CDATA[
				   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , inout_date
				     , lot_no
				) bb 
			group by bb.matr_code
				   , bb.plant
				   , bb.inout_date
		union
		select bb.matr_code
			 , bb.plant
			 , sum(bb.inout_wgt) as inout_wgt
			 , bb.inout_date
		  from (
				select matr_code
				     , plant
				     , max(inout_wgt)*-1 as inout_wgt
				     , inout_date
				     , lot_no
				  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and tran_type in ('332', '334', '552', '554', '556','Z02', 'Z06') and cud_ci = 'U'
				   <![CDATA[
				   and ma.send_dt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_dt < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.inout_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.inout_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , inout_date
				     , lot_no
				) bb 
			group by bb.matr_code
				   , bb.plant
				   , bb.inout_date
		) aa
		group by aa.matr_code, aa.plant, aa.inout_date
    </insert>
    
    <insert id="insertWhDdHalData" parameterType="sqlMap">
        /* insertWhDdHalData */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select strg_date as wh_da
		     , aa.matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = aa.plant) as wkpl_id
		     , aa.plant as plant_cd
		     , 'N' as impt_yn
		     , 'Z'
		     , aa.save_loc
		     , aa.wrk_area as wrk_area_cd
		     , aa.wrk_center as wrk_center_cd
		     , aa.equp_code as equip_cd
		     , sum(aa.strg_wgt) as wh_qty
		     , substring(strg_date, 0, 5)
		     , substring(strg_date, 5, 2)
		     , substring(strg_date, 7, 2)
		     , substring(strg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from (
		select matr_code, plant, wrk_area, wrk_center, equp_code, save_loc, sum(strg_wgt) as strg_wgt, strg_date
		  from ti_ch_mtrl_wh_hal3_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '101' and ma.cud_ci = 'C') or (ma.tran_type = '102' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, strg_date, save_loc, wrk_area, wrk_center, equp_code
		union 
		select matr_code, plant, wrk_area, wrk_center, equp_code, save_loc, -1*sum(strg_wgt) as strg_wgt, strg_date
		  from ti_ch_mtrl_wh_hal3_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ((ma.tran_type = '102' and ma.cud_ci = 'C') or (ma.tran_type = '101' and ma.cud_ci = 'D'))
		   <![CDATA[
		   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
		   ]]>
		   and ma.trn_yn = 'N'
		group by matr_code, plant, strg_date, save_loc, wrk_area, wrk_center, equp_code
		union
		select bb.matr_code
		     , bb.plant
		     , bb.wrk_area
		     , bb.wrk_center
		     , bb.equp_code
		     , bb.save_loc
		     , sum(bb.strg_wgt) as strg_wgt
		     , bb.strg_date
		  from (
				select matr_code
					 , plant
					 , wrk_area
				     , wrk_center
				     , equp_code
				     , save_loc
					 , max(strg_wgt) as strg_wgt
					 , strg_date
					 , mnu_order
					 , batch_no
				  from ti_ch_mtrl_wh_hal3_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '101'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , wrk_area
				     , wrk_center
				     , equp_code
				     , save_loc
					 , strg_date
					 , mnu_order
					 , batch_no
				) bb 
			group by bb.matr_code, bb.plant, bb.strg_date, bb.save_loc, bb.wrk_area, bb.wrk_center, bb.equp_code
		union
		select bb.matr_code
		     , bb.plant
		     , bb.wrk_area
		     , bb.wrk_center
		     , bb.equp_code
		     , bb.save_loc
		     , sum(bb.strg_wgt) as strg_wgt
		     , bb.strg_date
		  from (
				select matr_code
					 , plant
					 , wrk_area
				     , wrk_center
				     , equp_code
				     , save_loc
					 , max(strg_wgt)*-1 as strg_wgt
					 , strg_date
					 , mnu_order
					 , batch_no
				  from ti_ch_mtrl_wh_hal3_mes_recv ma
				 where exists (select cd.cd as wkpl_id
								      ,rl.cd as plant_cd
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant)
				   and ma.cud_ci = 'U' and ma.tran_type = '102'
				   <![CDATA[
				   and ma.send_datetime >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
				   and ma.send_datetime < to_char(current_timestamp,'YYYYMMDD' || '000000')
				   and ma.strg_date >= to_char(current_timestamp + '-2 day','YYYYMMDD')
		   		   and ma.strg_date < to_char(current_timestamp + '-1 day','YYYYMMDD')
				   ]]>
				   and ma.trn_yn = 'N'
				group by matr_code
					 , plant
					 , wrk_area
				     , wrk_center
				     , equp_code
				     , save_loc
					 , strg_date
					 , mnu_order
					 , batch_no
				) bb 
			group by bb.matr_code, bb.plant, bb.strg_date, bb.save_loc, bb.wrk_area, bb.wrk_center, bb.equp_code
		) aa
		group by aa.matr_code, aa.plant, aa.strg_date, aa.save_loc, aa.wrk_area, aa.wrk_center, aa.equp_code
    </insert>
    
    <update id="updateRohMaTrn" parameterType="sqlMap">
        /* updateRohMaTrn */
        update ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('261', '262')
		   and ma.trn_yn = 'N'
    </update>
    
    <update id="updateWhRohMaTrn" parameterType="sqlMap">
        /* updateWhRohMaTrn */
        update ti_ch_mtrl_wh_roh6_mes_recv ma
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('101', '102')
		   and ma.trn_yn = 'N'
    </update>
    
    <update id="updateWhHalMaTrn" parameterType="sqlMap">
        /* updateWhHalMaTrn */
        update ti_ch_mtrl_wh_hal3_mes_recv ma
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('101', '102')
		   and ma.trn_yn = 'N'
    </update>
    
    <update id="updateEtcMaTrn" parameterType="sqlMap">
        /* updateEtcMaTrn */
        update ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('331', '332', '333', '334', '551', '552', '553', '554', '555', '556', 'Z01', 'Z02', 'X05', 'Z05', 'Z06')
		   and ma.trn_yn = 'N'
    </update>
    
    <delete id="deleteDlMmData" parameterType="sqlMap">
        /* deleteDlMmData */
        delete from tb_ch_mtrl_dl_mm tcmdd
 		 where tcmdd.dl_ym = to_char(current_timestamp + '-2 day','YYYYMM')
    </delete>
    
    <delete id="deleteWhMmData" parameterType="sqlMap">
        /* deleteWhMmData */
        delete from tb_ch_mtrl_wh_mm tcmwm
 		 where tcmwm.wh_ym = #{wh_ym}
    </delete>
    
    <insert id="insertDlMmData" parameterType="sqlMap">
        /* insertDlMmData */
        insert into tb_ch_mtrl_dl_mm(
					dl_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				)  
		select dl_ym
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(dl_qty) as dl_qty
		     , dl_yy
		     , dl_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_mtrl_dl_dd tcmdd
		 where tcmdd.dl_ym = to_char(current_timestamp + '-2 day','YYYYMM')
		 group by dl_ym, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd, dl_yy, dl_mm
    </insert>
    
    <insert id="insertWhMmData" parameterType="sqlMap">
        /* insertWhMmData */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				)  
		select wh_ym
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , impt_yn 
		     , po_dept_cd 
		     , sav_loc_cd 
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(wh_qty) as wh_qty
		     , wh_yy
		     , wh_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_mtrl_wh_dd tcmwd
		 where tcmwd.wh_ym = to_char(current_timestamp + '-2 day','YYYYMM')
		 group by wh_ym, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd, wh_yy, wh_mm
    </insert>
    
    <insert id="insertSbstDlDd" parameterType="sqlMap">
        /* insertSbstDlDd */
        insert into tb_ch_sbst_dl_dd(
					dl_ya 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty 
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				)
	    select 
	           aa.dl_ya
	         , aa.sbst_no
	         , aa.mtrl_no
	         , aa.wkpl_id
	         , aa.plant_cd
	         , aa.wrk_area_cd
	         , aa.wrk_center_cd
	         , aa.equip_cd
	         , sum(dl_qty)
	         , aa.dl_yy
	         , aa.dl_mm
	         , aa.dl_dd
	         , aa.dl_ym
	         , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		from(
			select dl_ya
			     , tcms.sbst_no 
			     , tcmdd.mtrl_no
			     , tcmdd.wkpl_id
			     , tcmdd.plant_cd
			     , tcmdd.wrk_area_cd
			     , tcmdd.wrk_center_cd
			     , tcmdd.equip_cd
			     , (tcmdd.dl_qty * tcms.sbst_rati) / 100 as dl_qty
			     , tcmdd.dl_yy
			     , tcmdd.dl_mm
			     , tcmdd.dl_dd
			     , tcmdd.dl_ym
			  from tb_ch_mtrl_dl_dd tcmdd
			  join tb_ch_mtrl_sbst tcms 
			    on tcmdd.mtrl_no = tcms.mtrl_no
			    <![CDATA[
			 where tcmdd.crt_dt >= to_char(current_timestamp, 'YYYYMMDD' || '000000')
			   and tcmdd.crt_dt < to_char(current_timestamp + '+1 day','YYYYMMDD' || '000000')
			   ]]>
	   ) aa
	   group by dl_ya, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd, dl_yy, dl_mm, dl_dd, dl_ym
    </insert>
    
    <insert id="insertSbstWhDd" parameterType="sqlMap">
        /* insertSbstWhDd */
        insert into tb_ch_sbst_wh_dd(
					wh_da 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , lat_po_dept_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty 
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				  , sav_loc_cd
				)
		select 
			   aa.wh_da
			 , aa.sbst_no
			 , aa.mtrl_no
			 , aa.wkpl_id
			 , aa.plant_cd
			 , aa.impt_yn
			 , aa.po_dept_cd
			 , aa.wrk_area_cd
			 , aa.wrk_center_cd
			 , aa.equip_cd
			 , sum(aa.wh_qty)
			 , aa.wh_yy
			 , aa.wh_mm
			 , aa.wh_dd
			 , aa.wh_ym
			 , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , aa.sav_loc_cd
		from(
			select wh_da 
			     , tcms.sbst_no 
			     , tcmwd.mtrl_no
			     , tcmwd.wkpl_id
			     , tcmwd.plant_cd
			     , tcmwd.impt_yn 
			     , tcmwd.po_dept_cd 
			     , tcmwd.wrk_area_cd
			     , tcmwd.wrk_center_cd
			     , tcmwd.equip_cd
			     , (tcmwd.wh_qty * tcms.sbst_rati) / 100 as wh_qty
			     , tcmwd.wh_yy
			     , tcmwd.wh_mm
			     , tcmwd.wh_dd
			     , tcmwd.wh_ym
			     , tcmwd.sav_loc_cd
			  from tb_ch_mtrl_wh_dd tcmwd
			  join tb_ch_mtrl_sbst tcms 
			    on tcmwd.mtrl_no = tcms.mtrl_no
			    <![CDATA[
			 where tcmwd.crt_dt >= to_char(current_timestamp, 'YYYYMMDD' || '000000')
			   and tcmwd.crt_dt < to_char(current_timestamp + '+1 day','YYYYMMDD' || '000000')
			   ]]>
		) aa
		group by wh_da, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd, sav_loc_cd, wh_yy, wh_mm, wh_dd, wh_ym
    </insert>
    
    <delete id="deleteSbstDlMm" parameterType="sqlMap">
        /* deleteSbstDlMm */
        delete from tb_ch_sbst_dl_mm tcsdm
 		 where tcsdm.dl_ym = to_char(current_timestamp + '-2 day','YYYYMM')
    </delete>
    
    <delete id="deleteSbstWhMm" parameterType="sqlMap">
        /* deleteSbstWhMm */
        delete from tb_ch_sbst_wh_mm tcswm
 		 where tcswm.wh_ym = to_char(current_timestamp + '-2 day','YYYYMM')
    </delete>
    
    <insert id="insertSbstDlMm" parameterType="sqlMap">
        /* insertSbstDlMm */
        insert into tb_ch_sbst_dl_mm(
					dl_ym
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				)  
		select dl_ym
		     , sbst_no
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(dl_qty) as dl_qty
		     , dl_yy
		     , dl_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_sbst_dl_dd tcsdd
		 where tcsdd.dl_ym = to_char(current_timestamp + '-2 day','YYYYMM')
		 group by dl_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd, dl_yy, dl_mm
    </insert>
    
    <insert id="insertSbstWhMm" parameterType="sqlMap">
        /* insertSbstWhMm */
        insert into tb_ch_sbst_wh_mm(
					wh_ym 
				  , sbst_no 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn 
				  , lat_po_dept_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd 
				  , wh_qty 
				  , wh_yy 
				  , wh_mm 
				  , crt_usr_id 
				  , crt_dt 
				  , upt_usr_id 
				  , upt_dt 
				)  
		select wh_ym 
		     , sbst_no
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , impt_yn 
		     , lat_po_dept_cd 
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(wh_qty) as wh_qty
		     , wh_yy
		     , wh_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_sbst_wh_dd tcswd
		 where tcswd.wh_ym = to_char(current_timestamp + '-2 day','YYYYMM')
		 group by wh_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd, wh_yy, wh_mm
    </insert>
    
    <insert id="insertMtrlDl" parameterType="sqlMap">
        /* insertMtrlDl */
        insert into tb_ch_mtrl_dl(
					dl_ya
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , make_ordr_no
				  , item_no
				  , move_type_cd
				  , wghg_seq
				  , lot_no
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_tt
				  , dl_usr_id
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				  , send_sqno
				  , reg_cd
				)  
		select wghg_date
		     , matr_code
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
		     , plant
		     , mnu_order
		     , mnu_order_item_seq
		     , tran_type
		     , wghg_seq
		     , case when lot_no is null then 'Z'
		            else lot_no end as lot_no
		     , wrk_area
		     , wrk_center
		     , equp_code
		     , wghg_time
		     , wghg_prsn
		     , wghg_wgt
		     , substring(wghg_date, 0, 5)
		     , substring(wghg_date, 5, 2)
		     , substring(wghg_date, 7, 2)
		     , substring(wghg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , send_seq
		     , cud_ci
		  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		  where 1=1
		   and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and trn_yn = 'N'
		 union
		 select inout_date
		     , matr_code
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = mr.plant) as wkpl_id
		     , plant
		     , 'Z'
		     , 'Z'
		     , tran_type
		     , 0
		     , case when lot_no is null then 'Z'
		            else lot_no end as lot_no
		     , 'ZZZZZ'
		     , 'ZZZZZ'
		     , 'ZZZZZ'
		     , inout_time
		     , reg_id
		     , inout_wgt
		     , substring(inout_date, 0, 5)
		     , substring(inout_date, 5, 2)
		     , substring(inout_date, 7, 2)
		     , substring(inout_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , send_seq
		     , cud_ci
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv mr
		  where 1=1
		    and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = mr.plant)
		    and trn_yn = 'N'
    </insert>
    
    <insert id="insertMtrlWhDl" parameterType="sqlMap">
        /* insertMtrlWhDl */
        insert into tb_ch_mtrl_wh(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , lat_po_no 
				  , item_no 
				  , lot_no 
				  , po_usr_id 
				  , wh_usr_id 
				  , move_type_cd 
				  , vndr_no 
				  , sav_loc_cd 
				  , sav_loc_nm 
				  , impt_yn 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd 
				  , wh_qty 
				  , wh_yy 
				  , wh_mm 
				  , wh_dd 
				  , wh_ym 
				  , crt_usr_id 
				  , crt_dt 
				  , upt_usr_id 
				  , upt_dt 
				  , send_sqno
				  , reg_cd
				)  
		select strg_date
		     , matr_code
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
			 , plant
			 , pur_order
			 , pur_item_seq
			 , case when lot_no is null then 'Z'
			        else lot_no end as lot_no
			 , pur_prsn
			 , strg_prsn
			 , tran_type
			 , prtnr_code
			 , save_loc
			 , loc_name
			 , case when pur_type = '11' then 'Y'
			        else 'N' 
			        end as impt_yn
			 , 'ZZ6WH' as wrk_area_cd
			 , 'ZZ6WH' as wrk_center_cd
			 , 'ZZ6WH' as equip_cd
			 , strg_wgt::numeric
		     , substring(strg_date, 0, 5)
		     , substring(strg_date, 5, 2)
		     , substring(strg_date, 7, 2)
		     , substring(strg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , send_seq
		     , cud_ci
		  from ti_ch_mtrl_wh_roh6_mes_recv ma
		 where 1=1
		   and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and trn_yn = 'N'
		 union
		 select strg_date
		     , matr_code
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = mr.plant) as wkpl_id
			 , plant
			 , mnu_order
			 , '0'
			 , 'Z'
			 , 'Z'
			 , strg_prsn
			 , tran_type
			 , 'Z'
			 , save_loc
			 , loc_name
			 , 'N'
			 , wrk_area as wrk_area_cd
			 , wrk_center as wrk_center_cd
			 , equp_code as equip_cd
			 , strg_wgt
		     , substring(strg_date, 0, 5)
		     , substring(strg_date, 5, 2)
		     , substring(strg_date, 7, 2)
		     , substring(strg_date, 0, 7)
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , send_seq
		     , cud_ci
		  from ti_ch_mtrl_wh_hal3_mes_recv mr
		 where 1=1
		   and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = mr.plant)
		   and trn_yn = 'N'
    </insert>
    
    <insert id="insertMtrlSk" parameterType="sqlMap">
        /* insertMtrlSk */
        insert into tb_ch_mtrl_sk_dd(
					sk_ya
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , sl_cd
				  , labst_qty
				  , insme_qty
				  , speme_qty
				  , sk_yy
				  , sk_mm
				  , sk_dd
				  , sk_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select ersda
		     , matnr
		     , (select cd.cd as wkpl_id
					  from tb_co_cd cd
					  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
					 where rl.cd_grp_no = 'CO00000007'
					   and cd.usg_yn = 'Y'
		               and cd.del_yn = 'N'
		               and rl.usg_yn = 'Y'
		               and rl.del_yn = 'N'
					   and rl.cd = sr.werks) as wkpl_id
			 , werks
			 , lgort
			 , sum(labst)
			 , sum(insme)
			 , sum(speme)
			 , substring(ersda, 0, 5)
			 , substring(ersda, 5, 2)
			 , substring(ersda, 7, 2)
			 , substring(ersda, 0, 7)
			 , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from ti_co_mtrl_sk_sap_recv sr
		 where trn_yn = 'N'
		 <![CDATA[
		   and sr.snddt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and sr.snddt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   ]]>
		 group by ersda, matnr, werks, lgort
    </insert>
    
    <insert id="insertSbstSk" parameterType="sqlMap">
        /* insertSbstSk */
        insert into tb_ch_sbst_sk_dd(
					sk_ya
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , sl_cd
				  , labst_qty
				  , insme_qty
				  , speme_qty
				  , sl_yy
				  , sl_mm
				  , sl_dd
				  , sl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) 
		select 
	           aa.sk_ya
	         , aa.sbst_no
	         , aa.mtrl_no
	         , aa.wkpl_id
	         , aa.plant_cd
	         , aa.sl_cd
	         , sum(labst_qty)
	         , sum(insme_qty)
	         , sum(speme_qty)
	         , substring(aa.sk_ya, 0, 5) as sl_yy
			 , substring(aa.sk_ya, 5, 2) as sl_mm
			 , substring(aa.sk_ya, 7, 2) as sl_dd
			 , substring(aa.sk_ya, 0, 7) as sl_ym
	         , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		from(
			select sk_ya
			     , tcms.sbst_no
			     , tcmsd.mtrl_no
			     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
			               and cd.del_yn = 'N'
			               and rl.usg_yn = 'Y'
			               and rl.del_yn = 'N'
						   and rl.cd = tcmsd.plant_cd) as wkpl_id
				 , tcmsd.plant_cd
				 , tcmsd.sl_cd
				 , (labst_qty * tcms.sbst_rati) / 100 as labst_qty
				 , (insme_qty * tcms.sbst_rati) / 100 as insme_qty
				 , (speme_qty * tcms.sbst_rati) / 100 as speme_qty
			  from tb_ch_mtrl_sk_dd tcmsd
			  join tb_ch_mtrl_sbst tcms 
			    on tcmsd.mtrl_no = tcms.mtrl_no
			    <![CDATA[
			 where tcmsd.crt_dt >= to_char(current_timestamp,'YYYYMMDD' || '000000')
			   and tcmsd.crt_dt < to_char(current_timestamp + '+1 day','YYYYMMDD' || '000000')
			   ]]>
		) aa 
		group by aa.sk_ya, aa.sbst_no, aa.mtrl_no, aa.wkpl_id, aa.plant_cd, aa.sl_cd
    </insert>
    
    <update id="updateMtrlTrnStt" parameterType="sqlMap">
        /* updateMtrlTrnStt */
        update ti_co_mtrl_sk_sap_recv ma
		   set trn_yn = 'Y'
		      ,trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.werks)
		   <![CDATA[
		   and ma.snddt >= to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
		   and ma.snddt < to_char(current_timestamp,'YYYYMMDD' || '000000')
		   ]]>
		   and ma.trn_yn = 'N'
    </update>
    
    <select id="selectMtrlDl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlDl */
		select ma.send_datetime 
		     , ma.send_seq 
		     , ma.cud_ci 
		     , ma.tran_type 
		     , ma.mnu_order 
		     , ma.mnu_order_item_seq 
		     , wghg_date as dl_ya
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , wrk_area as wrk_area_cd
		     , wrk_center as wrk_center_cd
		     , equp_code as equip_cd
		     , wghg_wgt as dl_qty
		     , substring(wghg_date, 0, 5) as dl_yy
		     , substring(wghg_date, 5, 2) as dl_mm
		     , substring(wghg_date, 7, 2) as dl_dd
		     , substring(wghg_date, 0, 7) as dl_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and ma.trn_yn = 'N'
		   and ma.tran_type in ('261', '262')
		 order by ma.send_datetime asc, ma.send_seq asc
	</select>
	
	<!-- 사업장 선임교육만료일 조회 -->
	<select id="selectWkplElcTrnExpire" parameterType="sqlMap" resultType="sqlMap">
		/* selectWkplElcTrnExpire */
		select 
			  a.wkpl_id
			  ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
			  ,a.elc_reg_sn
			  ,a.elc_cl_cd
			  ,fn_get_cd('ST00000004', a.elc_cl_cd, 'NM', #{SESS_LANG}) as elc_cl_nm
			  ,a.elc_rspn_usr_id
			  ,a.wkpl_elc_dt
			  ,a.elc_infr_atfl_no
			  ,a.elc_pric_nm
			  ,a.elc_pric_dept_nm
			  ,a.elc_pric_tel_no
			  ,a.elc_pric_email
			  ,a.ag_yn
			  ,a.elc_cl_oth_txt
			  ,a.elc_dtl_cl_cd
			  ,fn_get_cd('SH00000088', a.elc_dtl_cl_cd, 'NM', #{SESS_LANG}) as elc_dtl_cl_nm
			  ,a.bsns_agen_orga_nm
			  ,a.bsns_agen_cont_rnew_dt
			  ,a.elc_pric_pstn_nm
			  ,a.ctsv_yrs
			  ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = a.elc_rspn_usr_id) as lang_cd 
			  ,a.ctsv_mths
			  ,a.elc_crr_yrs
			  ,a.elc_crr_mths
			  ,a.crtf_nm
			  ,a.mand_tlgl_trn_yn
			  ,a.fst_trn_fcst_dt
			  ,a.rglr_trn_fcst_dt
			  ,a.elc_trn_cyc_cd
			  ,substring(a.trn_expr_dt, 0, 5) || '-' || substring(a.trn_expr_dt, 5, 2) || '-' || substring(a.trn_expr_dt, 7, 2) as trn_expr_dt
			  ,a.lst_trn_fcst_dt
			  ,a.aprv_prst_cd
			  ,a.aprv_no
			  ,a.trn_fcst_cert_reg_yn
			  ,(select date_part('DAY', a.trn_expr_dt::TIMESTAMP - to_char(now(),'yyyy-mm-dd')::TIMESTAMP))::INTEGER as expr_dt
		  	  ,fn_get_dept(b.dept_cd,'DD','KO') as dept_head_id
		  from tb_sh_wkpl_elc a
     left join tb_co_user b
		 	on a.elc_rspn_usr_id = b.usr_id 
		 where a.trn_fcst_cert_reg_yn = 'N'
		   and a.ag_yn = 'N'
	</select>
	
	<!-- 사업장 안전/보건관리자 조회 -->
	<select id="selectWkplElcTrnMng" parameterType="sqlMap" resultType="sqlMap">
		/* selectWkplElcTrnMng */
		select a.elc_rspn_usr_id
		  from tb_sh_wkpl_elc a
		 where a.ag_yn = 'N'
		   and (a.elc_cl_cd = 'ELC04'
	   			or a.elc_cl_cd = 'ELC06')
		   and a.wkpl_id = #{wkpl_id}
		   and a.elc_rspn_usr_id != #{elc_rspn_usr_id}
	</select>
	
	<select id="selectMtrlEtcDl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlEtcDl */
		select ma.send_dt 
		     , ma.send_seq 
		     , ma.cud_ci 
		     , ma.tran_type  
		     ,inout_date as dl_ya
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = plant) as wkpl_id
		     , plant as plant_cd
		     , 'ZZZZZ' as wrk_area_cd
		     , 'ZZZZZ' as wrk_center_cd
		     , 'ZZZZZ' as equip_cd
		     , inout_wgt as dl_qty
		     , substring(inout_date, 0, 5) as dl_yy
		     , substring(inout_date, 5, 2) as dl_mm
		     , substring(inout_date, 7, 2) as dl_dd
		     , substring(inout_date, 0, 7) as dl_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		 where exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   and tran_type in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05', '332', '334', '552', '554', '556','Z02', 'Z06')
		   and ma.trn_yn = 'N'
		 order by ma.send_dt asc, ma.send_seq asc
	</select>
	
	<select id="selectMtrlRohWh" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlRohWh */
		select send_datetime
		     , send_seq
		     , cud_ci
		     , tran_type
		     , pur_order
		     , pur_item_seq
		     , strg_date as wh_da 
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , case when ma.pur_type = '11' then 'Y'
		            else 'N' 
		            end as impt_yn
		     , (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = ma.pur_prsn) as po_dept_cd
		     , save_loc as sav_loc_cd
		     , 'ZZ6WH' as wrk_area_cd
		     , 'ZZ6WH' as wrk_center_cd
		     , 'ZZ6WH' as equip_cd
		     , strg_wgt::numeric as wh_qty
		     , substring(strg_date, 0, 5) as wh_yy
		     , substring(strg_date, 5, 2) as wh_mm
		     , substring(strg_date, 7, 2) as wh_dd
		     , substring(strg_date, 0, 7) as wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_mtrl_wh_roh6_mes_recv ma
		 where ma.trn_yn = 'N'
		   and ma.tran_type in ('101', '102')
		   and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) -- 담당 플랜트의 경우만 조회해온다
	     order by ma.send_datetime asc, ma.send_seq asc
	</select>
	
	<select id="selectMtrlHalWh" parameterType="sqlMap" resultType="sqlMap">
		/* selectMtrlHalWh */
		select send_datetime
		     , send_seq
		     , cud_ci
		     , tran_type
		     , mnu_order as pur_order
		     , '0' as pur_item_seq
		     , strg_date as wh_da
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , 'N' as impt_yn
		     , 'Z' as po_dept_cd
		     , save_loc as sav_loc_cd
		     , wrk_area as wrk_area_cd
		     , wrk_center as wrk_center_cd
		     , equp_code as equip_cd
		     , strg_wgt::numeric as wh_qty
		     , substring(strg_date, 0, 5) as wh_yy
		     , substring(strg_date, 5, 2) as wh_mm
		     , substring(strg_date, 7, 2) as wh_dd
		     , substring(strg_date, 0, 7) as wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_mtrl_wh_hal3_mes_recv ma
		 where trn_yn = 'N'
		   and tran_type in ('101', '102')
		   and exists (select cd.cd as wkpl_id
						      ,rl.cd as plant_cd
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant)
		   order by ma.send_datetime asc, ma.send_seq asc
	</select>
	
	<insert id="insertImkRecvData" parameterType="sqlMap">
        /* insertImkRecvData */
        insert into ti_co_po_imk_recv(
					if_ymd
			      , if_seq 
			      , if_gb 
			      , if_gijun 
			      , ord_ymd 
			      , po_no 
			      , po_seq 
			      , itm_cd 
			      , sal_cur_cd 
			      , ord_qty 
			      , biz_no 
			      , bdgt_org_cd 
			      , bp_cust_cd 
			      , div_cust_cd 
			      , acc_cd 
			      , itm_nm 
			      , itm_spec 
			      , ord_ps_usr_id 
			      , ord_nm 
			      , tov_ps_usr_id 
			      , tov_nm 
			      , spcp_nm 
			      , cp_cust_cd 
			      , cp_cust_nm 
			      , org_cd 
			      , org_nm 
			      , spcp_cd 
			      , bdgt_org_nm
			      , bp_cust_nm 
			      , div_cust_nm 
			      , itm_clsf_nm 
			      , chm_mtr_yn 
			      , tov_zip_cd 
			      , tov_addr1 
			      , tov_addr2 
			      , msds_fil_url 
			      , recv_dt 
			) values (
				    #{if_ymd}
				  , #{if_seq}
				  , #{if_gb}
				  , #{if_gijun}
				  , #{ord_ymd}
				  , #{po_no}
				  , #{po_seq}
				  , #{itm_cd}
				  , #{sal_cur_cd}
				  , #{ord_qty}
				  , #{biz_no}
				  , #{bdgt_org_cd}
				  , #{bp_cust_cd}
				  , #{div_cust_cd}
				  , #{acc_cd}
				  , #{itm_nm}
				  , #{itm_spec}
				  , #{ord_ps_usr_id}
				  , #{ord_nm}
				  , #{tov_ps_usr_id} 
				  , #{tov_nm}
				  , #{spcp_nm}
				  , #{cp_cust_cd}
				  , #{cp_cust_nm}
				  , #{org_cd}
				  , #{org_nm}
				  , #{spcp_cd}
				  , #{bdgt_org_nm}
				  , #{bp_cust_nm}
				  , #{div_cust_nm}
				  , #{itm_clsf_nm}
				  , #{chm_mtr_yn}
				  , #{tov_zip_cd}
				  , #{tov_addr1}
				  , #{tov_addr2}
				  , #{msds_fil_url}
				  , to_char(NOW(),'YYYYMMDDHH24MISS')
			)
    </insert>
    
    <select id="selectImkMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkMtrlList */
		select 	if_ymd
			  , if_seq 
			  , if_gb 
			  , if_gijun 
			  , ord_ymd 
			  , po_no 
			  , po_seq 
			  , itm_cd 
			  , sal_cur_cd 
			  , ord_qty 
			  , biz_no 
			  , bdgt_org_cd 
			  , bp_cust_cd 
			  , div_cust_cd 
			  , acc_cd 
			  , itm_nm 
			  , itm_spec 
			  , ord_ps_usr_id 
			  , ord_nm 
			  , tov_ps_usr_id 
			  , tov_nm 
			  , spcp_nm 
			  , cp_cust_cd 
			  , cp_cust_nm 
			  , org_cd 
			  , org_nm 
			  , spcp_cd 
			  , bdgt_org_nm
			  , bp_cust_nm 
			  , div_cust_nm 
			  , itm_clsf_nm 
			  , chm_mtr_yn 
			  , tov_zip_cd 
			  , tov_addr1 
			  , tov_addr2 
			  , msds_fil_url 
			  , recv_dt
			  , case when tov_addr1 like '%용인%' then 'S02'
		                  when tov_addr1 like '%대전%' then 'S04'
		                  when tov_addr1 like '%오산%' then 'S03'
		                  end as rglt_chk_wkpl_id
		 from ti_co_po_imk_recv
		where mtrl_trn_yn = 'N'
		  and (tov_addr1 like '%용인%' or tov_addr1 like '%대전%' or tov_addr1 like '%오산%')
	</select>
	
	<select id="selectImkMstYn" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkMstYn */
		select mtrl_no
		  from tb_co_mtrl
		 where imk_item_no = #{itm_cd}
	</select>
	
	<insert id="insertImkMtrlMstData" parameterType="sqlMap">
        /* insertImkMtrlMstData */
        insert
		    into tb_co_mtrl (
		          mtrl_no
		        , rglt_chk_wkpl_id
		        , mtrl_clsf_cd
		        , mtrl_kind_cd
		        , mtrl_type_cd
		        , mtrl_grp_cd
		        , macl_cd
		        , mtrl_ko_nm
		        , mtrl_en_nm
		        , mtrl_zh_nm
		        , mtrl_reg_usr_id
		        , mtrl_reg_da
		        , oem_odm_yn
		        , qdrg_yn
		        , imk_item_no
		        , imk_item_ctgr_cd
		        , imk_item_ctgr_nm
		        , rglt_chk_req_yn
		        , rglt_chk_yn
		        , rglt_chk_no
		        , msds_rev_no
		        , mtrl_puse_cd
		        , mtrl_puse_cntn
		        , pchs_unit_nm
		        , pchs_unit_nweght_qty
		        , phase_cd
		        , impt_yn
		        , usg_yn
		        , del_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    ) select #{mtrl_no}
		           , case when #{tov_addr1} like '%용인%' then 'S02'
		                  when #{tov_addr1} like '%대전%' then 'S04'
		                  when #{tov_addr1} like '%오산%' then 'S03'
		                  end as rglt_chk_wkpl_id
		           , '2'
		           , '4'
		           , null
		           , null
		           , case when #{itm_clsf_nm} like '%시약%' then 'RGT'
		                  else 'MTN' end as macl_cd
		           , #{itm_nm}
		           , #{itm_nm}
		           , #{itm_nm}
		           , coalesce((select upper(imk.ord_ps_usr_id)
								 from ti_co_po_imk_recv imk
							    where position('AP' in upper(imk.ord_ps_usr_id)) > 0
								  and imk.if_ymd = #{if_ymd}
								  and imk.if_seq = #{if_seq}
								  limit 1
							  ), 'AC927145') as mtrl_reg_usr_id
				   , substring(#{recv_dt}, 1, 8)
				   , null
				   , null
				   , #{itm_cd}
				   , null
				   , #{itm_clsf_nm}
				   , 'N'
				   , 'N'
				   , null
				   , null
				   , ''
				   , ''
				   , ''
				   , 0
				   , ''
				   , 'N'
				   , 'Y'
				   , 'N'
				   , 'AC927145'
				   , to_char(NOW(),'YYYYMMDDHH24MISS')
				   , 'AC927145'
				   , to_char(NOW(),'YYYYMMDDHH24MISS')
    </insert>
    
    <select id="selectImkMtrlKey" parameterType="sqlMap" resultType="string">
		/* selectImkMtrlKey */
		select 'M' || LPAD((nextval('mro_mtrl_no_seq'::regclass))::text, 6, '0') AS mtrl_no
	</select>
	
	<update id="updateImkMtrlMstTrn" parameterType="sqlMap">
        /* updateImkMtrlMstTrn */
        update ti_co_po_imk_recv 
		   set mtrl_trn_yn = 'Y'
		     , mtrl_trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where if_ymd = #{if_ymd} 
		   and if_seq = #{if_seq}::integer
    </update>
    
    <select id="selectFileKey" parameterType="sqlMap" resultType="string">
		/* selectFileKey */
		select nextval('tb_co_atfl_seq') as file_key
	</select>
	
	<insert id="insertImkFileMetaInfo" parameterType="sqlMap">
        /* insertImkFileMetaInfo */
        insert
		    into
		         tb_co_atfl (
		          atfl_no
		        , atfl_seq
		        , atfl_nm
		        , atfl_url
		        , atfl_size
		        , atfl_note
		        , pub_yn
		        , ext_yn
		        , crt_usr_id
		        , crt_dt
		        , upt_usr_id
		        , upt_dt
		    ) values (
		       #{imk_atfl_no}::Integer
		      ,#{imk_atfl_seq}::Integer
		      ,reverse(split_part(reverse(trim(#{imk_atfl_nm})), '\', 1))
		      ,trim(#{imk_atfl_url})
		      ,'1'
		      ,#{mtrl_no}
		      ,'Y'
		      ,'Y'
		      , 'AC927145'
		      , to_char(NOW(),'YYYYMMDDHH24MISS')
		      , 'AC927145'
		      , to_char(NOW(),'YYYYMMDDHH24MISS')
		    )
    </insert>
    
    <update id="updateImkFileMtrlInfo" parameterType="sqlMap">
        /* updateImkFileMtrlInfo */
        update tb_co_mtrl 
		   set imk_atfl_no = #{imk_atfl_no}::Integer
		 where mtrl_no = #{mtrl_no}
    </update>
    
    <select id="selectimkAtfileNoCount" parameterType="sqlMap" resultType="sqlMap">
		/* selectimkAtfileNoCount */
		select atfl_no, atfl_seq
		  from tb_co_atfl
		 where atfl_no = #{imk_atfl_no}::Integer
	</select>
	
    <select id="selectImkMtrlWhList" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkMtrlWhList */
		select if_ymd
		     , if_seq
		     , if_gb
		     , ord_ymd as wh_da
			 , (select mtrl_no from tb_co_mtrl tcm where tcpir.itm_cd = tcm.imk_item_no) as mtrl_no 
			 , case when tov_addr1 like '%용인%' then 'S02'
				                  when tov_addr1 like '%대전%' then 'S04'
				                  when tov_addr1 like '%오산%' then 'S03'
				                  end as wkpl_id
		     , case when tov_addr1 like '%용인%' then 'ZZZ1'
				                  when tov_addr1 like '%대전%' then '1111'
				                  when tov_addr1 like '%오산%' then '1110'
				                  end as plant_cd
		     , 'N' as impt_yn
		     , coalesce((select dp.dept_cd 
								 from tb_co_user us
								 join tb_co_dept dp on us.dept_cd = dp.dept_cd
								where exists ( select 1
								                 from ti_co_po_imk_recv imk
								                where upper(replace(imk.org_nm, ' ', '')) = upper(replace(dp.dept_ko_nm, ' ', ''))
								                  and (us.usr_ko_nm = imk.tov_nm or us.usr_ko_nm = imk.ord_nm)
								                  and imk.if_ymd = tcpir.if_ymd
								                  and imk.if_seq = tcpir.if_seq
								             ) limit 1), (select dp.dept_cd 
														    from tb_co_user us
														    join tb_co_dept dp on us.dept_cd = dp.dept_cd
														   where us.usr_id = 'AC927145')) as po_dept_cd
		     , 'ZZMRO' as sav_loc_cd
		     , 'ZZMRO' as wrk_area_cd
		     , 'ZZMRO' as wrk_center_cd
		     , 'ZZMRO' as equip_cd
		     , case when tcm.pchs_unit_cd = '1' then ord_qty * 1000 * tcm.pchs_unit_weght
		            when tcm.pchs_unit_cd = '2' then ord_qty * tcm.pchs_unit_weght
		            else ord_qty
		            end as ord_qty
		     , substring(ord_ymd, 0, 5) as wh_yy
		     , substring(ord_ymd, 5, 2) as wh_mm
		     , substring(ord_ymd, 7, 2) as wh_dd
		     , substring(ord_ymd, 0, 7) as wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		 from ti_co_po_imk_recv tcpir
		 join tb_co_mtrl tcm 
		   on tcm.imk_item_no = tcpir.itm_cd and rglt_chk_yn = 'Y'
		where tcpir.wh_trn_yn = 'N'
		  and (tcpir.tov_addr1 like '%용인%' or tcpir.tov_addr1 like '%대전%' or tcpir.tov_addr1 like '%오산%')
		order by if_ymd asc, if_seq asc
	</select>
	
	<select id="selectImkWhData" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkWhData */
		select tcmwd.wh_da
		     , tcmwd.mtrl_no
		     , tcmwd.wkpl_id
		     , tcmwd.plant_cd
		     , tcmwd.impt_yn
		     , tcmwd.po_dept_cd
		     , tcmwd.sav_loc_cd
		     , tcmwd.wrk_area_cd
		     , tcmwd.wrk_center_cd
		     , tcmwd.equip_cd
		     , tcmwd.wh_qty
		     , tcmwd.wh_yy
		     , tcmwd.wh_mm
		     , tcmwd.wh_dd
		     , tcmwd.wh_ym
		  from tb_ch_mtrl_wh_dd tcmwd 
		 where tcmwd.wh_da = #{wh_da}
		   and tcmwd.mtrl_no = #{mtrl_no}
		   and tcmwd.wkpl_id = #{wkpl_id}
		   and tcmwd.plant_cd = #{plant_cd}
		   and tcmwd.impt_yn = #{impt_yn}
		   and tcmwd.po_dept_cd = #{po_dept_cd}
		   and tcmwd.sav_loc_cd = #{sav_loc_cd}
		   and tcmwd.wrk_area_cd = #{wrk_area_cd}
		   and tcmwd.wrk_center_cd = #{wrk_center_cd}
		   and tcmwd.equip_cd = #{equip_cd}
		   and del_yn = 'N'
	</select>
	
	<update id="updateImkWhDdData" parameterType="sqlMap">
        /* updateImkWhDdData */
       insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{if_gb} = 'C' then #{ord_qty}::Integer 
	                     else -1 * #{ord_qty}::Integer
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_da, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
       update set wh_qty = 
       case when #{if_gb} = 'C' then tb_ch_mtrl_wh_dd.wh_qty + #{ord_qty}::Integer 
            when #{if_gb} = 'D' then tb_ch_mtrl_wh_dd.wh_qty - #{ord_qty}::Integer 
            else 0
            end
            ,upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_dd.wh_da = #{wh_da}
			   and tb_ch_mtrl_wh_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_wh_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_wh_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_wh_dd.impt_yn = #{impt_yn}
			   and tb_ch_mtrl_wh_dd.po_dept_cd = #{po_dept_cd}
			   and tb_ch_mtrl_wh_dd.sav_loc_cd = #{sav_loc_cd}
			   and tb_ch_mtrl_wh_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_wh_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_wh_dd.equip_cd = #{equip_cd}
    </update>
    
    <delete id="deleteWhImkMmData" parameterType="sqlMap">
        /* deleteWhImkMmData */
        delete from tb_ch_mtrl_wh_mm tcmwm
 		 where tcmwm.wh_ym = #{wh_ym}
    </delete>
    
    <insert id="insertWhImkMmData" parameterType="sqlMap">
        /* insertWhImkMmData */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				)  
		select wh_ym
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , impt_yn 
		     , po_dept_cd 
		     , sav_loc_cd 
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(wh_qty) as wh_qty
		     , wh_yy
		     , wh_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_mtrl_wh_dd tcmwd
		 where tcmwd.wh_ym = #{wh_ym}
		 group by wh_ym, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd, wh_yy, wh_mm
    </insert>
    
    <select id="selectImkSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectImkSbstList */
		select distinct wh_da 
		     , tcms.sbst_no 
		     , tcmwd.mtrl_no
		     , tcmwd.wkpl_id
		     , tcmwd.plant_cd
		     , tcmwd.impt_yn 
		     , tcmwd.po_dept_cd as lat_po_dept_cd
		     , tcmwd.wrk_area_cd
		     , tcmwd.wrk_center_cd
		     , tcmwd.equip_cd
		     , (tcmwd.wh_qty * tcms.sbst_rati) / 100 as wh_qty
		     , tcmwd.wh_yy
		     , tcmwd.wh_mm
		     , tcmwd.wh_dd
		     , tcmwd.wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from tb_ch_mtrl_wh_dd tcmwd
		  join tb_ch_mtrl_sbst tcms 
		    on tcmwd.mtrl_no = tcms.mtrl_no
		  join tb_co_mtrl tcm
		    on tcms.mtrl_no = tcm.mtrl_no and tcm.del_yn = 'N'
		 where tcmwd.mtrl_no = #{mtrl_no}
		   and tcmwd.wh_da = #{wh_da}
		   and tcmwd.wkpl_id = #{wkpl_id}
		   and tcmwd.plant_cd = #{plant_cd}
		   and tcmwd.impt_yn = #{impt_yn}
		   and tcmwd.po_dept_cd = #{po_dept_cd}
		   and tcmwd.sav_loc_cd = #{sav_loc_cd}
		   and tcmwd.wrk_area_cd = #{wrk_area_cd}
		   and tcmwd.wrk_center_cd = #{wrk_center_cd}
		   and tcmwd.equip_cd = #{equip_cd}
	</select>
	
	<insert id="updateImkSbstDlData" parameterType="sqlMap">
        /* updateImkSbstDlData */
        insert into tb_ch_sbst_wh_dd(
					wh_da 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , lat_po_dept_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty 
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				  , sav_loc_cd
				) values ( 
				    #{wh_da}
				  , #{sbst_no}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{lat_po_dept_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{if_gb} = 'C' then #{wh_qty}::Integer 
	                     else -1 * #{wh_qty}::Integer
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
			      , #{sav_loc_cd}
				 ) on conflict (wh_da, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update  
		    set wh_qty = 
		    case when #{if_gb} = 'C' then tb_ch_sbst_wh_dd.wh_qty + #{wh_qty}::Integer 
	             when #{if_gb} = 'D' then tb_ch_sbst_wh_dd.wh_qty - #{wh_qty}::Integer 
	             else 0
	             end
		      , upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		      , upt_usr_id = 'AC927145'
		  where tb_ch_sbst_wh_dd.wh_da = #{wh_da}
		    and tb_ch_sbst_wh_dd.sbst_no = #{sbst_no}
		    and tb_ch_sbst_wh_dd.mtrl_no = #{mtrl_no}
		    and tb_ch_sbst_wh_dd.wkpl_id = #{wkpl_id}
		    and tb_ch_sbst_wh_dd.plant_cd = #{plant_cd}
		    and tb_ch_sbst_wh_dd.impt_yn = #{impt_yn}
		    and tb_ch_sbst_wh_dd.lat_po_dept_cd = #{po_dept_cd}
		    and tb_ch_sbst_wh_dd.wrk_area_cd = #{wrk_area_cd}
		    and tb_ch_sbst_wh_dd.wrk_center_cd = #{wrk_center_cd}
		    and tb_ch_sbst_wh_dd.equip_cd = #{equip_cd}
    </insert>
    
    <delete id="deleteSbstImkWhMm" parameterType="sqlMap">
        /* deleteSbstImkWhMm */
        delete from tb_ch_sbst_wh_mm tcswm
 		 where tcswm.wh_ym = #{wh_ym}
    </delete>
    
    <insert id="insertSbstImkWhMm" parameterType="sqlMap">
        /* insertSbstImkWhMm */
        insert into tb_ch_sbst_wh_mm(
					wh_ym 
				  , sbst_no 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn 
				  , lat_po_dept_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd 
				  , wh_qty 
				  , wh_yy 
				  , wh_mm 
				  , crt_usr_id 
				  , crt_dt 
				  , upt_usr_id 
				  , upt_dt 
				)  
		select wh_ym 
		     , sbst_no
		     , mtrl_no
		     , wkpl_id
		     , plant_cd
		     , impt_yn 
		     , lat_po_dept_cd 
		     , wrk_area_cd
		     , wrk_center_cd
		     , equip_cd
		     , sum(wh_qty) as wh_qty
		     , wh_yy
		     , wh_mm
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		  from tb_ch_sbst_wh_dd tcswd
		 where tcswd.wh_ym = #{wh_ym}
		 group by wh_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd, wh_yy, wh_mm
    </insert>
    
    <insert id="insertImkWhDdData" parameterType="sqlMap">
        /* insertImkWhDdData */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{if_gb} = 'C' then #{ord_qty}::Integer 
	                     else -1 * #{ord_qty}::Integer
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 )
    </insert>
    
    <insert id="insertImkSbstDdData" parameterType="sqlMap">
        /* insertImkSbstDdData */
        insert into tb_ch_sbst_wh_dd(
					wh_da 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , lat_po_dept_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty 
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				  , sav_loc_cd
				)
		select wh_da 
		     , tcms.sbst_no 
		     , tcmwd.mtrl_no
		     , tcmwd.wkpl_id
		     , tcmwd.plant_cd
		     , tcmwd.impt_yn 
		     , tcmwd.po_dept_cd 
		     , tcmwd.wrk_area_cd
		     , tcmwd.wrk_center_cd
		     , tcmwd.equip_cd
		     , (tcmwd.wh_qty * tcms.sbst_rati) / 100 as wh_qty
		     , tcmwd.wh_yy
		     , tcmwd.wh_mm
		     , tcmwd.wh_dd
		     , tcmwd.wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS')
		     , tcmwd.sav_loc_cd
		  from tb_ch_mtrl_wh_dd tcmwd
		  join tb_ch_mtrl_sbst tcms 
		    on tcmwd.mtrl_no = tcms.mtrl_no
		 where tcmwd.wh_da = #{wh_da}
		   and tcmwd.mtrl_no = #{mtrl_no}
		   and tcmwd.wkpl_id = #{wkpl_id}
		   and tcmwd.plant_cd = #{plant_cd}
		   and tcmwd.impt_yn = #{impt_yn}
		   and tcmwd.po_dept_cd = #{po_dept_cd}
		   and tcmwd.sav_loc_cd = #{sav_loc_cd}
		   and tcmwd.wrk_area_cd = #{wrk_area_cd}
		   and tcmwd.wrk_center_cd = #{wrk_center_cd}
		   and tcmwd.equip_cd = #{equip_cd}
		   and tcmwd.del_yn = 'N'
    </insert>
    
    <update id="updateImkMtrlTrnYn" parameterType="sqlMap">
        /* updateImkMtrlTrnYn */
        update ti_co_po_imk_recv 
		   set wh_trn_yn = 'Y'
		     , wh_trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where if_ymd = #{if_ymd}
		   and if_seq = #{if_seq}
    </update>
    
    <insert id="insertImkMstData" parameterType="sqlMap">
        /* insertImkMstData */
        insert into tb_ch_mtrl_wh(
					wh_da 
				  , mtrl_no 
				  , wkpl_id
				  , plant_cd
				  , lat_po_no 
				  , item_no 
				  , lot_no 
				  , po_usr_id 
				  , wh_usr_id 
				  , move_type_cd 
				  , vndr_no 
				  , sav_loc_cd 
				  , sav_loc_nm 
				  , impt_yn 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd 
				  , wh_qty 
				  , wh_yy 
				  , wh_mm 
				  , wh_dd 
				  , wh_ym 
				  , crt_usr_id 
				  , crt_dt 
				  , upt_usr_id 
				  , upt_dt 
				  , send_sqno
				  , reg_cd
			) select ord_ymd as wh_da
				   , (select mtrl_no from tb_co_mtrl tcm where tcpir.itm_cd = tcm.imk_item_no) as mtrl_no 
				   , case when tov_addr1 like '%용인%' then 'S02'
					                    when tov_addr1 like '%대전%' then 'S04'
					                    when tov_addr1 like '%오산%' then 'S03'
					                    end as wkpl_id
			       , case when tov_addr1 like '%용인%' then 'ZZZ1'
					                    when tov_addr1 like '%대전%' then '1111'
					                    when tov_addr1 like '%오산%' then '1110'
					                    end as plant_cd
				   , po_no
				   , itm_cd
				   , 'IMK'
				   , coalesce((select us.usr_id 
								 from tb_co_user us
								 join tb_co_dept dp on us.dept_cd = dp.dept_cd
								where exists ( select 1
								                 from ti_co_po_imk_recv imk
								                where upper(replace(imk.org_nm, ' ', '')) = upper(replace(dp.dept_ko_nm, ' ', ''))
								                  and (us.usr_ko_nm = imk.tov_nm or us.usr_ko_nm = imk.ord_nm)
								                  and imk.if_ymd = #{if_ymd}
								                  and imk.if_seq = #{if_seq}
								             ) limit 1), 'AC927145')
				   , coalesce((select us.usr_id 
								 from tb_co_user us
								 join tb_co_dept dp on us.dept_cd = dp.dept_cd
								where exists ( select 1
								                 from ti_co_po_imk_recv imk
								                where upper(replace(imk.org_nm, ' ', '')) = upper(replace(dp.dept_ko_nm, ' ', ''))
								                  and (us.usr_ko_nm = imk.tov_nm or us.usr_ko_nm = imk.ord_nm)
								                  and imk.if_ymd = #{if_ymd}
								                  and imk.if_seq = #{if_seq}
								             ) limit 1), 'AC927145')
				   , 'IMK'
				   , 'V000000000'
				   , 'ZZ6WH' as sav_loc_cd
				   , 'IMK'
			       , 'N' as impt_yn
			       , 'ZZ6WH' as wrk_area_cd
			       , 'ZZ6WH' as wrk_center_cd
			       , 'ZZ6WH' as equip_cd
			       , ord_qty
			       , substring(ord_ymd, 0, 5) as wh_yy
			       , substring(ord_ymd, 5, 2) as wh_mm
			       , substring(ord_ymd, 7, 2) as wh_dd
			       , substring(ord_ymd, 0, 7) as wh_ym
			       , 'AC927145' as crt_usr_id
			       , to_char(NOW(),'YYYYMMDDHH24MISS')
			       , 'AC927145' as upt_usr_id
			       , to_char(NOW(),'YYYYMMDDHH24MISS')
			       , if_seq
			       , if_gb
			   from ti_co_po_imk_recv tcpir
			  where tcpir.wh_trn_yn = 'N'
			    and (tcpir.tov_addr1 like '%용인%' or tcpir.tov_addr1 like '%대전%' or tcpir.tov_addr1 like '%오산%')
			    and exists (select 1 
			                  from tb_co_mtrl tcm
			                 where tcm.imk_item_no = tcpir.itm_cd 
			               )
			    and tcpir.if_ymd = #{if_ymd}
                and tcpir.if_seq = #{if_seq} 
    </insert>
    
    <select id="selectMroMtrlWhList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroMtrlWhList */
		select    tcmp.mro_pchs_no
		        , substring(tcmp.aprv_cmpt_dt, 0, 9) as wh_da
		        , tcm.mtrl_no 
		        , tcmp.wkpl_id 
		        , case when tcmp.wkpl_id = 'S02' then 'ZZZ1'
				                  when tcmp.wkpl_id = 'S03' then '1110'
				                  when tcmp.wkpl_id = 'S04' then '1111'
				                  end as plant_cd
				, tcmpm.impt_yn 
				, (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = tcmp.pchs_usr_id) as po_dept_cd 
				, 'ZZMRO' as sav_loc_cd
				, 'ZZMRO' as wrk_area_cd
			    , 'ZZMRO' as wrk_center_cd
			    , 'ZZMRO' as equip_cd
			    , case when tcm.pchs_unit_cd = '1' then tcmpm.pchs_qty * 1000 * tcm.pchs_unit_weght
			           when tcm.pchs_unit_cd = '2' then tcmpm.pchs_qty * tcm.pchs_unit_weght
			           else tcmpm.pchs_qty
			           end as wh_qty
				, substring(tcmp.aprv_cmpt_dt, 0, 5) as wh_yy
		        , substring(tcmp.aprv_cmpt_dt, 5, 2) as wh_mm
		        , substring(tcmp.aprv_cmpt_dt, 7, 2) as wh_dd
		        , substring(tcmp.aprv_cmpt_dt, 0, 7) as wh_ym 
		        , 'AC927145' as crt_usr_id
		        , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		        , 'AC927145' as upt_usr_id
		        , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
	      from tb_ch_mro_pchs_mtrl tcmpm
	      join tb_co_mtrl tcm
	        on tcmpm.mtrl_no = tcm.mtrl_no and tcm.rglt_chk_yn = 'Y' and tcm.del_yn = 'N'
	      join tb_ch_mro_pchs tcmp
	        on tcmpm.mro_pchs_no = tcmp.mro_pchs_no 
	     where tcmpm.wh_trn_yn = 'N'
	       and (tcmp.aprv_cmpt_dt is not null and tcmp.aprv_cmpt_dt != '')
	     order by tcmp.mro_pchs_no asc
	</select>
    
    <insert id="insertMroWhDl" parameterType="sqlMap">
        /* insertMroWhDl */
        insert into tb_ch_mtrl_wh(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , lat_po_no 
				  , item_no 
				  , lot_no 
				  , po_usr_id 
				  , wh_usr_id 
				  , move_type_cd 
				  , vndr_no 
				  , sav_loc_cd 
				  , sav_loc_nm 
				  , impt_yn 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd 
				  , wh_qty 
				  , wh_yy 
				  , wh_mm 
				  , wh_dd 
				  , wh_ym 
				  , crt_usr_id 
				  , crt_dt 
				  , upt_usr_id 
				  , upt_dt 
				  , send_sqno
				  , reg_cd
				)  select substring(tcmp.aprv_cmpt_dt, 0, 9) 
				        , tcm.mtrl_no 
				        , tcmp.wkpl_id 
				        , case when tcmp.wkpl_id = 'S02' then 'ZZZ1'
						                  when tcmp.wkpl_id = 'S03' then '1110'
						                  when tcmp.wkpl_id = 'S04' then '1111'
						                  end as plant_cd
						, tcmpm.mro_pchs_no 
						, 'MRO' 
						, 'MRO'
						, tcmp.pchs_usr_id 
						, tcmp.pchs_usr_id 
						, 'MRO'
						, tcmpm.vndr_no
						, 'ZZMRO'
						, 'MRO'
						, tcmpm.impt_yn 
						, 'ZZMRO'
						, 'ZZMRO'
						, 'ZZMRO'
						, tcmpm.pchs_qty
						, substring(tcmp.aprv_cmpt_dt, 0, 5) as wh_yy
				        , substring(tcmp.aprv_cmpt_dt, 5, 2) as wh_mm
				        , substring(tcmp.aprv_cmpt_dt, 7, 2) as wh_dd
				        , substring(tcmp.aprv_cmpt_dt, 0, 7) as wh_ym 
				        , 'AC927145' as crt_usr_id
				        , to_char(NOW(),'YYYYMMDDHH24MISS')
				        , 'AC927145' as upt_usr_id
				        , to_char(NOW(),'YYYYMMDDHH24MISS')
				        , 0
				        , 'C'
				     from tb_ch_mro_pchs_mtrl tcmpm
				     join tb_co_mtrl tcm
				       on tcmpm.mtrl_no = tcm.mtrl_no and tcm.rglt_chk_yn = 'Y' and tcm.del_yn = 'N'
				     join tb_ch_mro_pchs tcmp
				       on tcmpm.mro_pchs_no = tcmp.mro_pchs_no 
				    where tcmpm.wh_trn_yn = 'N'
				      and (tcmp.aprv_cmpt_dt is not null and tcmp.aprv_cmpt_dt != '')
    </insert>
    
    <insert id="insertWhDdMroData" parameterType="sqlMap">
        /* insertWhDdMroData */
        insert into tb_ch_mtrl_wh_dd(
			wh_da 
		  , mtrl_no 
		  , wkpl_id 
		  , plant_cd 
		  , impt_yn 
		  , po_dept_cd 
		  , sav_loc_cd   
		  , wrk_area_cd 
		  , wrk_center_cd 
		  , equip_cd 
		  , wh_qty 
		  , wh_yy 
		  , wh_mm 
		  , wh_dd 
		  , wh_ym 
		  , crt_usr_id 
		  , crt_dt 
		  , upt_usr_id 
		  , upt_dt 
		) select aa.wh_da
		       , aa.mtrl_no
		       , aa.wkpl_id
		       , aa.plant_cd
		       , aa.impt_yn
		       , aa.po_dept_cd
		       , 'ZZMRO'
		       , 'ZZMRO'
			   , 'ZZMRO'
			   , 'ZZMRO'
			   , aa.wh_qty
			   , substring(aa.wh_da, 0, 5) as wh_yy
	           , substring(aa.wh_da, 5, 2) as wh_mm
	           , substring(aa.wh_da, 7, 2) as wh_dd
	           , substring(aa.wh_da, 0, 7) as wh_ym 
	           , 'AC927145' as crt_usr_id
	           , to_char(NOW(),'YYYYMMDDHH24MISS')
	           , 'AC927145' as upt_usr_id
	           , to_char(NOW(),'YYYYMMDDHH24MISS')
		    from (
		    	select substring(tcmp.aprv_cmpt_dt, 0, 9) as wh_da 
			        , tcm.mtrl_no as mtrl_no
			        , tcmp.wkpl_id as wkpl_id
			        , case when tcmp.wkpl_id = 'S02' then 'ZZZ1'
					                  when tcmp.wkpl_id = 'S03' then '1110'
					                  when tcmp.wkpl_id = 'S04' then '1111'
					                  end as plant_cd
					, tcmpm.impt_yn as impt_yn
				    , (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = tcmp.pchs_usr_id) as po_dept_cd  
					, sum(tcmpm.pchs_qty) as wh_qty
			     from tb_ch_mro_pchs_mtrl tcmpm
			     join tb_co_mtrl tcm
			       on tcmpm.mtrl_no = tcm.mtrl_no and tcm.del_yn = 'N'
			     join tb_ch_mro_pchs tcmp
			       on tcmpm.mro_pchs_no = tcmp.mro_pchs_no 
			    where tcmpm.wh_trn_yn = 'N'
			      and tcmp.aprv_cmpt_dt <![CDATA[>=]]> to_char(current_timestamp + '-1 day','YYYYMMDD' || '000000')
			      and tcmp.aprv_cmpt_dt <![CDATA[<]]> to_char(current_timestamp,'YYYYMMDD' || '000000')
			   	group by wh_da, tcm.mtrl_no, wkpl_id, plant_cd, tcmpm.impt_yn, po_dept_cd
		    ) aa
    </insert>
    
    <update id="updateWhMroTrn" parameterType="sqlMap">
        /* updateWhMroTrn */
        update tb_ch_mro_pchs_mtrl tcmpm
		   set wh_trn_yn = 'Y'
		     , wh_trn_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where wh_trn_yn = 'N'
		   and tcmpm.mtrl_no = #{mtrl_no}
		   and tcmpm.mro_pchs_no = #{mro_pchs_no}
    </update>
    
    <select id="selectNewSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectNewSbstList */
		select tcmwd.wkpl_id
		     , fn_get_cd('CO00000006',tcmwd.wkpl_id,'NM','KO') as wkpl_nm
		     , tcm.mtrl_no 
		     , tcm.mtrl_ko_nm 
		     , tcm.mtrl_en_nm 
		     , tcm.mtrl_clsf_cd 
		     , sum(tcmwd.wh_qty) as qty 
		  from tb_co_mtrl tcm 
		  join tb_ch_mtrl_sbst tcms on tcm.mtrl_no = tcms.mtrl_no 
		  join tb_ch_mtrl_wh_dd tcmwd on tcm.mtrl_no = tcmwd.mtrl_no and tcmwd.wh_da = to_char(current_timestamp + '-1 day','YYYYMMDD') -- 어제 날짜 입고 테이블
		 where tcm.rglt_chk_yn = 'Y'
		   and tcm.usg_yn = 'Y'
		   and tcm.del_yn = 'N'
		   and tcms.sbst_type_cd = '30' or tcms.sbst_type_cd = '40' -- 신규 자재
		   group by tcmwd.wkpl_id, tcm.mtrl_no
	</select>
	
	<select id="selectNewSbstUserList" parameterType="sqlMap" resultType="sqlMap">
		/* selectNewSbstUserList */
		select usr_id 
		      ,(select usr_email from tb_co_user tcu2 where tcu2.usr_id = tcbp.usr_id) as usr_email
		      ,(select lang_cd from tb_co_user tcu where tcu.usr_id = tcbp.usr_id) as lang_cd
		      ,cnct_1st_cd as wkpl_id
		from tb_co_biz_pc tcbp
		where biz_pc_grp_cd = 'BG00004'
		  and usg_yn = 'Y'
		  and del_yn = 'N'
	</select>
	
	<select id="selectRgltAlrmKey" parameterType="sqlMap" resultType="string">
		/* selectRgltAlrmKey */
		select nextval('tb_ch_rglt_act_alrm_seq') as alrm_key
	</select>
	
	<insert id="insertRgltActAlrm" parameterType="sqlMap">
        /* insertRgltActAlrm */
        insert into tb_ch_rglt_act_alrm(
		 				rglt_act_alrm_no
		 			  , crt_da
		 			  , alrm_type_cd
		 			  , alrm_ttl
		 			  , alrm_cntn
		 			  , crt_usr_id
		 			  , crt_dt
		 			  , upt_usr_id
		 			  , upt_dt
		 	) values (
		 				#{alrm_key}
		 			  , to_char(NOW(),'YYYYMMDDHH24MISS')
		 			  , #{alrm_type_cd}
		 			  , #{subject}
		 			  , #{mContent}
		 			  , 'AC927145'
			          , to_char(NOW(),'YYYYMMDDHH24MISS')
			          , 'AC927145'
			          , to_char(NOW(),'YYYYMMDDHH24MISS')
		 	)
    </insert>
    
    <insert id="insertRgltActAlrmRecv" parameterType="sqlMap">
        /* insertRgltActAlrmRecv */
        insert into tb_ch_rglt_act_alrm_recv(
		 				rglt_act_alrm_no
		 			  , crt_da
		 			  , usr_id
		 			  , usr_email
		 			  , crt_usr_id
		 			  , crt_dt
		 			  , upt_usr_id
		 			  , upt_dt
		 	) values (
		 				#{alrm_key}
		 			  , to_char(NOW(),'YYYYMMDDHH24MISS')
		 			  , #{mTo}
		 			  , #{mEmail}
		 			  , 'AC927145'
			          , to_char(NOW(),'YYYYMMDDHH24MISS')
			          , 'AC927145'
			          , to_char(NOW(),'YYYYMMDDHH24MISS')
		 	)
    </insert>
    
    <insert id="insertRgltActMtrl" parameterType="sqlMap">
        /* insertRgltActMtrl */
        insert into tb_ch_rglt_act_mtrl(
		 				rglt_act_alrm_no
		 			  , crt_da
		 			  , wkpl_id
		 			  , mtrl_no
		 			  , alrm_crtr_qtt
		 			  , anul_use_tot
		 			  , crt_usr_id
		 			  , crt_dt
		 			  , upt_usr_id
		 			  , upt_dt
		 ) select
		 				#{alrm_key}
		 			  , to_char(NOW(),'YYYYMMDDHH24MISS')
		 			  , #{wkpl_id}
		 			  , tcm.mtrl_no
		 			  , 0
		 			  ,case when tcm.mtrl_clsf_cd = '1' then 
							      coalesce( (select sum(tcmdd.dl_qty)
							          from tb_ch_mtrl_dl_dd tcmdd
							         where tcm.mtrl_no = tcmdd.mtrl_no
							          and tcm.rglt_chk_yn = 'Y'
							          and tcmdd.dl_yy = to_char(NOW(),'YYYY')
							          and tcmdd.wkpl_id = #{wkpl_id}
							         ), 0) 
							else
							       coalesce( (select sum(tcmwd.wh_qty)
							          from tb_ch_mtrl_wh_dd tcmwd
							         where 1=1
							           and tcm.mtrl_no = tcmwd.mtrl_no
							           and tcm.rglt_chk_yn = 'Y'
							           and tcmwd.wh_yy = to_char(NOW(),'YYYY')
							           and tcmwd.wkpl_id = #{wkpl_id}
							         ), 0)
					    end
					  , 'AC927145'
				      , to_char(NOW(),'YYYYMMDDHH24MISS')
				      , 'AC927145'
				      , to_char(NOW(),'YYYYMMDDHH24MISS')
				   from tb_co_mtrl tcm
				  where 1=1
				    and tcm.mtrl_no = #{mtrl_no}
				    and tcm.rglt_chk_yn = 'Y'
					and tcm.usg_yn = 'Y'
					and tcm.del_yn = 'N'	
    </insert>
    
    <select id="selectCmrSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCmrSbstList */
		select distinct tcmrs2.mtrl_no 
		      ,aa.mtrl_ko_nm
		      ,aa.mtrl_en_nm
		      ,tcmrs2.rglt_no 
		      ,(select tcr.rglt_nm from tb_ch_rglt tcr where tcr.rglt_no = tcmrs2.rglt_no) as rglt_nm
		      ,(aa.use_qty / (1000*1000)) as use_qty
		  from tb_ch_mtrl_rglt_sbst tcmrs2 
		  join( 
		select tcm.mtrl_no
		      ,tcm.mtrl_ko_nm 
		      ,tcm.mtrl_en_nm 
		      ,sum(tcmdd.dl_qty) as use_qty
		  from tb_ch_mtrl_dl_dd tcmdd
		  join tb_co_mtrl tcm on tcmdd.mtrl_no = tcm.mtrl_no 
		 where tcm.rglt_chk_yn = 'Y' 
		   and tcm.usg_yn = 'Y'
		   and tcm.del_yn = 'N'
		   and tcmdd.dl_yy = to_char(NOW(),'YYYY')
		   and exists (select 1 from tb_ch_mtrl_rglt_sbst tcmrs
		                where tcm.mtrl_no = tcmrs.mtrl_no
		                  and (tcmrs.rglt_no = 'RGLT000008' or tcmrs.rglt_no = 'RGLT000009'))
		 group by tcm.mtrl_no
		having sum(tcmdd.dl_qty) <![CDATA[>]]> (800 * 1000)
		 ) aa 
		    on tcmrs2.mtrl_no = aa.mtrl_no
		   and (tcmrs2.rglt_no = 'RGLT000008' or tcmrs2.rglt_no = 'RGLT000009')
		   and not exists (select 1 from tb_ch_rglt_act_mtrl tcram
   					where tcram.mtrl_no = tcmrs2.mtrl_no 
   					  and tcram.alrm_crtr_qtt = 800
   					  and substring(tcram.crt_da, 0, 5) = to_char(NOW(),'YYYY')) -- 해당 년도에 해당 자재의 800 알람이 일어났는지 여부 확인
	</select>
	
	<select id="selectCmrMtrlNo" parameterType="sqlMap" resultType="sqlMap">
		/* selectCmrMtrlNo */
		select distinct tcmrs2.mtrl_no 
		  from tb_ch_mtrl_rglt_sbst tcmrs2 
		  join( 
		select tcm.mtrl_no
		      ,tcm.mtrl_ko_nm 
		      ,tcm.mtrl_en_nm 
		      ,sum(tcmdd.dl_qty) as use_qty
		  from tb_ch_mtrl_dl_dd tcmdd 
		  join tb_co_mtrl tcm on tcmdd.mtrl_no = tcm.mtrl_no 
		 where tcm.rglt_chk_yn = 'Y' 
		   and tcm.usg_yn = 'Y'
		   and tcm.del_yn = 'N'
		   and tcmdd.dl_yy = to_char(NOW(),'YYYY')
		   and exists (select 1 from tb_ch_mtrl_rglt_sbst tcmrs
		                where tcm.mtrl_no = tcmrs.mtrl_no
		                  and (tcmrs.rglt_no = 'RGLT000008' or tcmrs.rglt_no = 'RGLT000009'))
		 group by tcm.mtrl_no
		having sum(tcmdd.dl_qty) <![CDATA[>]]> (800 * 1000)
		 ) aa 
		    on tcmrs2.mtrl_no = aa.mtrl_no
		   and (tcmrs2.rglt_no = 'RGLT000008' or tcmrs2.rglt_no = 'RGLT000009')
		   and not exists (select 1 from tb_ch_rglt_act_mtrl tcram
   					where tcram.mtrl_no = tcmrs2.mtrl_no 
   					  and tcram.alrm_crtr_qtt = 800
   					  and substring(tcram.crt_da, 0, 5) = to_char(NOW(),'YYYY')) -- 해당 년도에 해당 자재의 800 알람이 일어났는지 여부 확인
	</select>
	
	<insert id="insertRgltActAlrmMtrl" parameterType="sqlMap">
        /* insertRgltActAlrmMtrl */
        insert into tb_ch_rglt_act_mtrl(
		 				rglt_act_alrm_no
		 			  , crt_da
		 			  , wkpl_id
		 			  , mtrl_no
		 			  , alrm_crtr_qtt
		 			  , anul_use_tot
		 			  , crt_usr_id
		 			  , crt_dt
		 			  , upt_usr_id
		 			  , upt_dt
		 ) select #{alrm_key}
				 , to_char(NOW(),'YYYYMMDDHH24MISS')
				 , tcmdd.wkpl_id 
				 , tcm.mtrl_no
				 , #{qtt}::Integer
				 , sum(tcmdd.dl_qty)
				 , 'AC927145'
			     , to_char(NOW(),'YYYYMMDDHH24MISS')
			     , 'AC927145'
			     , to_char(NOW(),'YYYYMMDDHH24MISS') 
			  from tb_ch_mtrl_dl_dd tcmdd 
			  join tb_co_mtrl tcm on tcmdd.mtrl_no = tcm.mtrl_no 
			 where tcm.rglt_chk_yn = 'Y' 
			   and tcm.usg_yn = 'Y'
			   and tcm.del_yn = 'N'
			   and tcm.mtrl_no = #{mtrl_no}
			 group by tcm.mtrl_no, tcmdd.wkpl_id
    </insert>
    
    <select id="selectEtcAlrmSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectEtcAlrmSbstList */
		select tcmwd.wkpl_id
		     , fn_get_cd('CO00000006',tcmwd.wkpl_id,'NM','KO') as wkpl_nm
		     , tcm.mtrl_no 
		     , tcm.mtrl_ko_nm 
		     , tcm.mtrl_en_nm 
		     , tcm.mtrl_clsf_cd 
		     , sum(tcmwd.wh_qty) as qty 
		  from tb_co_mtrl tcm 
		  join tb_ch_mtrl_wh_dd tcmwd on tcm.mtrl_no = tcmwd.mtrl_no and tcmwd.wh_da = to_char(current_timestamp + '-1 day','YYYYMMDD') -- 어제 날짜 입고 테이블
		 where tcm.rglt_chk_yn = 'Y'
		   and tcm.usg_yn = 'Y'
		   and tcm.del_yn = 'N'
		   and exists (select 1 from tb_ch_mtrl_rglt_sbst tcmrs 
		                where tcmrs.mtrl_no = tcm.mtrl_no
		                  and tcmrs.rglt_no in ('RGLT000001', 'RGLT000002', 'RGLT000004', 'RGLT000005', 'RGLT000006', 'RGLT000020'))
		   group by tcmwd.wkpl_id, tcm.mtrl_no
	</select>
	
	<select id="selectTonAlrmSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectTonAlrmSbstList */
		select distinct tcm.mtrl_no
		      ,tcm.mtrl_ko_nm 
		      ,tcm.mtrl_en_nm 
		      ,(sum(tcmdd.dl_qty) / (1000*1000)) as use_qty
		      ,case when sum(tcmdd.dl_qty) <![CDATA[>]]> (10*1000*1000) and sum(tcmdd.dl_qty) <![CDATA[<]]> (100*1000*1000) then 10
										             when sum(tcmdd.dl_qty) <![CDATA[>]]> (100*1000*1000) and sum(tcmdd.dl_qty) <![CDATA[<]]> (1000*1000*1000) then 100
										             else 1000
		                                             end as qtt
		  from tb_ch_mtrl_dl_dd tcmdd
		  join tb_co_mtrl tcm on tcmdd.mtrl_no = tcm.mtrl_no 
		 where tcm.rglt_chk_yn = 'Y' 
		   and tcm.usg_yn = 'Y'
		   and tcm.del_yn = 'N'
		   and tcmdd.dl_yy = to_char(NOW(),'YYYY')
		 group by tcm.mtrl_no
		having sum(tcmdd.dl_qty) <![CDATA[>]]> (10 * 1000 * 1000)
		   and not exists (select 1 from tb_ch_rglt_act_mtrl tcram
   					where tcram.mtrl_no = tcm.mtrl_no 
   					  and tcram.alrm_crtr_qtt = case when sum(tcmdd.dl_qty) <![CDATA[>]]> (10*1000*1000) and sum(tcmdd.dl_qty) <![CDATA[<]]> (100*1000*1000) then 10
										             when sum(tcmdd.dl_qty) <![CDATA[>]]> (100*1000*1000) and sum(tcmdd.dl_qty) <![CDATA[<]]>(1000*1000*1000) then 100
										             else 1000
		                                             end
   					  and substring(tcram.crt_da, 0, 5) = to_char(NOW(),'YYYY'))
	</select>
    
    <select id="selectWhRohYn" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhRohYn */
		select 1
		  from tb_ch_mtrl_wh_dd tcmwd 
		 where tcmwd.wh_da = #{wh_da}
		   and tcmwd.mtrl_no = #{mtrl_no}
		   and tcmwd.wkpl_id = #{wkpl_id}
		   and tcmwd.plant_cd = #{plant_cd}
		   and tcmwd.impt_yn = #{impt_yn}
		   and tcmwd.po_dept_cd = #{po_dept_cd}
		   and tcmwd.sav_loc_cd = #{sav_loc_cd}
		   and tcmwd.wrk_area_cd = #{wrk_area_cd}
		   and tcmwd.wrk_center_cd = #{wrk_center_cd}
		   and tcmwd.equip_cd = #{equip_cd}
		   and del_yn = 'N'
	</select>
	
	<update id="updateCreateWhDd" parameterType="sqlMap">
        /* updateCreateWhDd */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_da, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = 
        case when #{tran_type} = '101' then tb_ch_mtrl_wh_dd.wh_qty + #{wh_qty}::numeric 
             when #{tran_type} = '102' then tb_ch_mtrl_wh_dd.wh_qty - #{wh_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_dd.wh_da = #{wh_da}
			   and tb_ch_mtrl_wh_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_wh_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_wh_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_wh_dd.impt_yn = #{impt_yn}
			   and tb_ch_mtrl_wh_dd.po_dept_cd = #{po_dept_cd}
			   and tb_ch_mtrl_wh_dd.sav_loc_cd = #{sav_loc_cd}
			   and tb_ch_mtrl_wh_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_wh_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_wh_dd.equip_cd = #{equip_cd}
    </update>
    
    <insert id="insertCreateWhRohDd" parameterType="sqlMap">
        /* insertCreateWhRohDd */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 )
    </insert>
    
    <select id="selectWhRohMmYn" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhRohMmYn */
		select 1
		  from tb_ch_mtrl_wh_mm tcmwm
		 where tcmwm.wh_ym = #{wh_ym}
		   and del_yn = 'N'
	</select>
	
	<update id="updateCreateWhMm" parameterType="sqlMap">
        /* updateCreateWhMm */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_ym, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = 
        case when #{tran_type} = '101' then tb_ch_mtrl_wh_mm.wh_qty + #{wh_qty}::numeric 
             when #{tran_type} = '102' then tb_ch_mtrl_wh_mm.wh_qty - #{wh_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_mm.wh_ym = #{wh_ym}
		   and tb_ch_mtrl_wh_mm.mtrl_no = #{mtrl_no}   
		   and tb_ch_mtrl_wh_mm.wkpl_id = #{wkpl_id}  
		   and tb_ch_mtrl_wh_mm.plant_cd = #{plant_cd}  
		   and tb_ch_mtrl_wh_mm.impt_yn = #{impt_yn}  
		   and tb_ch_mtrl_wh_mm.po_dept_cd = #{po_dept_cd}  
		   and tb_ch_mtrl_wh_mm.sav_loc_cd = #{sav_loc_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_area_cd = #{wrk_area_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_center_cd = #{wrk_center_cd}  
		   and tb_ch_mtrl_wh_mm.equip_cd = #{equip_cd}  
    </update>
    
    <insert id="insertCreateWhRohMm" parameterType="sqlMap">
        /* insertCreateWhRohMm */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 )
    </insert>
    
    <select id="selectWhRohSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhRohSbstList */
		select send_datetime
		     , send_seq
		     , cud_ci
		     , tran_type
		     , tcms.sbst_no
		     , strg_date as wh_da 
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , case when ma.pur_type = '11' then 'Y'
		            else 'N' 
		            end as impt_yn
		     , (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = ma.pur_prsn) as lat_po_dept_cd
		     , save_loc as save_loc_cd
		     , 'ZZ6WH' as wrk_area_cd
		     , 'ZZ6WH' as wrk_center_cd
		     , 'ZZ6WH' as equip_cd
		     , (strg_wgt::numeric * tcms.sbst_rati) / 100  as wh_qty
		     , substring(strg_date, 0, 5) as wh_yy
		     , substring(strg_date, 5, 2) as wh_mm
		     , substring(strg_date, 7, 2) as wh_dd
		     , substring(strg_date, 0, 7) as wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		     <if test='bf_qty != null and bf_qty != ""'>
		     , (#{bf_qty}::numeric * tcms.sbst_rati) / 100 as bf_sbst_qty
		     </if>
		  from ti_ch_mtrl_wh_roh6_mes_recv ma
		  join tb_ch_mtrl_sbst tcms 
		    on ma.matr_code = tcms.mtrl_no
		 where send_datetime = #{send_datetime}
		   and send_seq = #{send_seq}
	</select>
    
    <update id="updateCreateWhSbDd" parameterType="sqlMap">
        /* updateCreateWhSbDd */
        insert
            into
            tb_ch_sbst_wh_dd (
                 wh_da
                ,sbst_no
                ,mtrl_no
                ,wkpl_id
                ,plant_cd
                ,impt_yn
                ,lat_po_dept_cd
                ,wrk_area_cd
                ,wrk_center_cd
                ,equip_cd
                ,wh_qty
                ,wh_yy
                ,wh_mm
                ,wh_dd
                ,wh_ym
                ,crt_usr_id
                ,crt_dt
                ,upt_usr_id
                ,upt_dt
                ,sav_loc_cd
            )
        values(
                 #{wh_da}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{impt_yn}
                ,#{lat_po_dept_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
                ,#{wh_yy}
                ,#{wh_mm}
                ,#{wh_dd}
                ,#{wh_ym}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,#{sav_loc_cd}
        ) on conflict (wh_da, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              wh_qty = case when #{tran_type} = '101' then tb_ch_sbst_wh_dd.wh_qty + #{wh_qty}::numeric 
             				when #{tran_type} = '102' then tb_ch_sbst_wh_dd.wh_qty - #{wh_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_wh_dd.wh_da  = #{wh_da}
          and tb_ch_sbst_wh_dd.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_wh_dd.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_wh_dd.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_wh_dd.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_wh_dd.impt_yn  = #{impt_yn} 
          and tb_ch_sbst_wh_dd.lat_po_dept_cd  = #{lat_po_dept_cd} 
          and tb_ch_sbst_wh_dd.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_wh_dd.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_wh_dd.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateWhSbMm" parameterType="sqlMap">
        /* updateCreateWhSbMm */
        insert
            into
            tb_ch_sbst_wh_mm (
                 wh_ym
                ,sbst_no
                ,mtrl_no
                ,wkpl_id
                ,plant_cd
                ,impt_yn
                ,lat_po_dept_cd
                ,wrk_area_cd
                ,wrk_center_cd
                ,equip_cd
                ,wh_qty
                ,wh_yy
                ,wh_mm
                ,crt_usr_id
                ,crt_dt
                ,upt_usr_id
                ,upt_dt
                ,sav_loc_cd
            )
        values(
                 #{wh_ym}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{impt_yn}
                ,#{lat_po_dept_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
                ,#{wh_yy}
                ,#{wh_mm}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,#{sav_loc_cd}
        ) on conflict (wh_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              wh_qty = case when #{tran_type} = '101' then tb_ch_sbst_wh_mm.wh_qty + #{wh_qty}::numeric 
             				when #{tran_type} = '102' then tb_ch_sbst_wh_mm.wh_qty - #{wh_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_wh_mm.wh_ym  = #{wh_ym}
          and tb_ch_sbst_wh_mm.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_wh_mm.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_wh_mm.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_wh_mm.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_wh_mm.impt_yn  = #{impt_yn} 
          and tb_ch_sbst_wh_mm.lat_po_dept_cd  = #{lat_po_dept_cd} 
          and tb_ch_sbst_wh_mm.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_wh_mm.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_wh_mm.equip_cd  = #{equip_cd} 
    </update>
    
    <select id="selectWhUpdateList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhUpdateList */
		select wh_qty
		      ,move_type_cd
		  from tb_ch_mtrl_wh ma
		 where wh_da = #{wh_da}
		   and mtrl_no = #{mtrl_no}
		   and wkpl_id = #{wkpl_id}
		   and plant_cd = #{plant_cd}
		   and impt_yn = #{impt_yn}
		   and sav_loc_cd = #{sav_loc_cd}
		   and wrk_area_cd = #{wrk_area_cd}
		   and wrk_center_cd = #{wrk_center_cd}
		   and equip_cd = #{equip_cd}
		   and lat_po_no = #{pur_order}
		   and item_no = #{pur_item_seq}
		   and reg_cd in ('C', 'U')
		   and #{po_dept_cd} = (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = ma.po_usr_id)
		   <![CDATA[
		   and crt_dt <= #{crt_dt}
		   and send_sqno < #{send_seq}
		   ]]>
		 order by crt_dt desc, send_sqno desc
	</select>
	
	<update id="updateUpdateWhDd" parameterType="sqlMap">
        /* updateUpdateWhDd */
        update tb_ch_mtrl_wh_dd set wh_qty = 
        case when #{bf_type_cd} = '101' and #{tran_type} = '101' then wh_qty - #{bf_qty}::numeric + #{wh_qty}::numeric
             when #{bf_type_cd} = '101' and #{tran_type} = '102' then wh_qty - #{bf_qty}::numeric - #{wh_qty}::numeric 
             when #{bf_type_cd} = '102' and #{tran_type} = '101' then wh_qty + #{bf_qty}::numeric + #{wh_qty}::numeric
             when #{bf_type_cd} = '102' and #{tran_type} = '102' then wh_qty + #{bf_qty}::numeric - #{wh_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where wh_da = #{wh_da}
			   and mtrl_no = #{mtrl_no}
			   and wkpl_id = #{wkpl_id}
			   and plant_cd = #{plant_cd}
			   and impt_yn = #{impt_yn}
			   and po_dept_cd = #{po_dept_cd}
			   and sav_loc_cd = #{sav_loc_cd}
			   and wrk_area_cd = #{wrk_area_cd}
			   and wrk_center_cd = #{wrk_center_cd}
			   and equip_cd = #{equip_cd}
    </update>
    
    <update id="updateUpdateWhMm" parameterType="sqlMap">
        /* updateUpdateWhMm */
        update tb_ch_mtrl_wh_mm set wh_qty = 
        case when #{bf_type_cd} = '101' and #{tran_type} = '101' then wh_qty - #{bf_qty}::numeric + #{wh_qty}::numeric
             when #{bf_type_cd} = '101' and #{tran_type} = '102' then wh_qty - #{bf_qty}::numeric - #{wh_qty}::numeric 
             when #{bf_type_cd} = '102' and #{tran_type} = '101' then wh_qty + #{bf_qty}::numeric + #{wh_qty}::numeric
             when #{bf_type_cd} = '102' and #{tran_type} = '102' then wh_qty + #{bf_qty}::numeric - #{wh_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where wh_ym = #{wh_ym}
		   and mtrl_no = #{mtrl_no}   
		   and wkpl_id = #{wkpl_id}  
		   and plant_cd = #{plant_cd}  
		   and impt_yn = #{impt_yn}  
		   and po_dept_cd = #{po_dept_cd}  
		   and sav_loc_cd = #{sav_loc_cd}  
		   and wrk_area_cd = #{wrk_area_cd}  
		   and wrk_center_cd = #{wrk_center_cd}  
		   and equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateUpdateWhSbDd" parameterType="sqlMap">
        /* updateUpdateWhRohSbDd */
        update tb_ch_sbst_wh_dd set
              wh_qty = case when #{bf_type_cd} = '101' and #{tran_type} = '101' then wh_qty - #{bf_sbst_qty}::numeric + #{wh_qty}::numeric
				            when #{bf_type_cd} = '101' and #{tran_type} = '102' then wh_qty - #{bf_sbst_qty}::numeric - #{wh_qty}::numeric 
				            when #{bf_type_cd} = '102' and #{tran_type} = '101' then wh_qty + #{bf_sbst_qty}::numeric + #{wh_qty}::numeric
				            when #{bf_type_cd} = '102' and #{tran_type} = '102' then wh_qty + #{bf_sbst_qty}::numeric - #{wh_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where wh_da  = #{wh_da}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and impt_yn  = #{impt_yn} 
          and lat_po_dept_cd  = #{lat_po_dept_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateUpdateWhSbMm" parameterType="sqlMap">
        /* updateUpdateWhSbMm */
        update tb_ch_sbst_wh_mm set
              wh_qty = case when #{bf_type_cd} = '101' and #{tran_type} = '101' then wh_qty - #{bf_sbst_qty}::numeric + #{wh_qty}::numeric
				            when #{bf_type_cd} = '101' and #{tran_type} = '102' then wh_qty - #{bf_sbst_qty}::numeric - #{wh_qty}::numeric 
				            when #{bf_type_cd} = '102' and #{tran_type} = '101' then wh_qty + #{bf_sbst_qty}::numeric + #{wh_qty}::numeric
				            when #{bf_type_cd} = '102' and #{tran_type} = '102' then wh_qty + #{bf_sbst_qty}::numeric - #{wh_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where wh_ym  = #{wh_ym}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and impt_yn  = #{impt_yn} 
          and lat_po_dept_cd  = #{lat_po_dept_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteWhDd" parameterType="sqlMap">
        /* updateDeleteWhDd */
        update tb_ch_mtrl_wh_dd set wh_qty = 
        case when #{bf_type_cd} = '101' then wh_qty - #{bf_qty}::numeric
             when #{bf_type_cd} = '102' then wh_qty + #{bf_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where wh_da = #{wh_da}
			   and mtrl_no = #{mtrl_no}
			   and wkpl_id = #{wkpl_id}
			   and plant_cd = #{plant_cd}
			   and impt_yn = #{impt_yn}
			   and po_dept_cd = #{po_dept_cd}
			   and sav_loc_cd = #{sav_loc_cd}
			   and wrk_area_cd = #{wrk_area_cd}
			   and wrk_center_cd = #{wrk_center_cd}
			   and equip_cd = #{equip_cd}
    </update>
    
    <update id="updateDeleteWhMm" parameterType="sqlMap">
        /* updateDeleteWhMm */
        update tb_ch_mtrl_wh_mm set wh_qty = 
        case when #{bf_type_cd} = '101' then wh_qty - #{bf_qty}::numeric
             when #{bf_type_cd} = '102' then wh_qty + #{bf_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where wh_ym = #{wh_ym}
		   and mtrl_no = #{mtrl_no}   
		   and wkpl_id = #{wkpl_id}  
		   and plant_cd = #{plant_cd}  
		   and impt_yn = #{impt_yn}  
		   and po_dept_cd = #{po_dept_cd}  
		   and sav_loc_cd = #{sav_loc_cd}  
		   and wrk_area_cd = #{wrk_area_cd}  
		   and wrk_center_cd = #{wrk_center_cd}  
		   and equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateDeleteWhSbDd" parameterType="sqlMap">
        /* updateDeleteWhSbDd */
        update tb_ch_sbst_wh_dd set
              wh_qty = case when #{bf_type_cd} = '101' then wh_qty - #{bf_sbst_qty}::numeric
             			    when #{bf_type_cd} = '102' then wh_qty + #{bf_sbst_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where wh_da  = #{wh_da}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and impt_yn  = #{impt_yn} 
          and lat_po_dept_cd  = #{lat_po_dept_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteWhSbMm" parameterType="sqlMap">
        /* updateDeleteWhSbMm */
        update tb_ch_sbst_wh_mm set
              wh_qty = case when #{bf_type_cd} = '101' then wh_qty - #{bf_sbst_qty}::numeric
             			    when #{bf_type_cd} = '102' then wh_qty + #{bf_sbst_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where wh_ym  = #{wh_ym}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and impt_yn  = #{impt_yn} 
          and lat_po_dept_cd  = #{lat_po_dept_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateWhHalDd" parameterType="sqlMap">
        /* updateCreateWhHalDd */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '101' then #{wh_qty}::numeric 
	                     else -1 * #{wh_qty}::numeric
	                     end
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_da, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = 
        case when #{tran_type} = '101' then tb_ch_mtrl_wh_dd.wh_qty + #{wh_qty}::numeric 
             when #{tran_type} = '102' then tb_ch_mtrl_wh_dd.wh_qty - #{wh_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_dd.wh_da = #{wh_da}
			   and tb_ch_mtrl_wh_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_wh_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_wh_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_wh_dd.impt_yn = #{impt_yn}
			   and tb_ch_mtrl_wh_dd.po_dept_cd = #{po_dept_cd}
			   and tb_ch_mtrl_wh_dd.sav_loc_cd = #{sav_loc_cd}
			   and tb_ch_mtrl_wh_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_wh_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_wh_dd.equip_cd = #{equip_cd}
    </update>
    
    <select id="selectWhHalSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhHalSbstList */
		select send_datetime
		     , send_seq
		     , cud_ci
		     , tran_type
		     , tcms.sbst_no
		     , strg_date as wh_da
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , 'N' as impt_yn
		     , 'Z' as po_dept_cd
		     , save_loc as sav_loc_cd
		     , wrk_area as wrk_area_cd
		     , wrk_center as wrk_center_cd
		     , equp_code as equip_cd
		     , strg_wgt::numeric as wh_qty
		     , substring(strg_date, 0, 5) as wh_yy
		     , substring(strg_date, 5, 2) as wh_mm
		     , substring(strg_date, 7, 2) as wh_dd
		     , substring(strg_date, 0, 7) as wh_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		     <if test='bf_qty != null and bf_qty != ""'>
		     , (#{bf_qty}::numeric * tcms.sbst_rati) / 100 as bf_sbst_qty
		     </if>
		  from ti_ch_mtrl_wh_hal3_mes_recv ma
		  join tb_ch_mtrl_sbst tcms 
		    on ma.matr_code = tcms.mtrl_no
		 where send_datetime = #{send_datetime}
		   and send_seq = #{send_seq}
	</select>
	
	<update id="updateCreateWhMroDd" parameterType="sqlMap">
        /* updateCreateWhMroDd */
        insert into tb_ch_mtrl_wh_dd(
					wh_da 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , impt_yn
				  , po_dept_cd
				  , sav_loc_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd 
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , wh_dd
				  , wh_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_da}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , #{wh_qty}::numeric
			      , #{wh_yy}
			      , #{wh_mm}
			      , #{wh_dd}
			      , #{wh_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_da, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = tb_ch_mtrl_wh_dd.wh_qty + #{wh_qty}::numeric 
                 , upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_dd.wh_da = #{wh_da}
			   and tb_ch_mtrl_wh_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_wh_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_wh_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_wh_dd.impt_yn = #{impt_yn}
			   and tb_ch_mtrl_wh_dd.po_dept_cd = #{po_dept_cd}
			   and tb_ch_mtrl_wh_dd.sav_loc_cd = #{sav_loc_cd}
			   and tb_ch_mtrl_wh_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_wh_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_wh_dd.equip_cd = #{equip_cd}
    </update>
    
    <update id="updateCreateWhMroMm" parameterType="sqlMap">
        /* updateCreateWhMroMm */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , #{wh_qty}::numeric
			      , #{wh_yy}
			      , #{wh_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_ym, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = tb_ch_mtrl_wh_mm.wh_qty + #{wh_qty}::numeric 
                 , upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_mm.wh_ym = #{wh_ym}
		   and tb_ch_mtrl_wh_mm.mtrl_no = #{mtrl_no}   
		   and tb_ch_mtrl_wh_mm.wkpl_id = #{wkpl_id}  
		   and tb_ch_mtrl_wh_mm.plant_cd = #{plant_cd}  
		   and tb_ch_mtrl_wh_mm.impt_yn = #{impt_yn}  
		   and tb_ch_mtrl_wh_mm.po_dept_cd = #{po_dept_cd}  
		   and tb_ch_mtrl_wh_mm.sav_loc_cd = #{sav_loc_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_area_cd = #{wrk_area_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_center_cd = #{wrk_center_cd}  
		   and tb_ch_mtrl_wh_mm.equip_cd = #{equip_cd}  
    </update>
    
    <select id="selectWhMroSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWhMroSbstList */
		select distinct tcmp.mro_pchs_no
		        , tcms.sbst_no
		        , substring(tcmp.aprv_cmpt_dt, 0, 9) as wh_da
		        , tcm.mtrl_no 
		        , tcmp.wkpl_id 
		        , case when tcmp.wkpl_id = 'S02' then 'ZZZ1'
				                  when tcmp.wkpl_id = 'S03' then '1110'
				                  when tcmp.wkpl_id = 'S04' then '1111'
				                  end as plant_cd
				, tcmpm.impt_yn 
				, (select tcu.dept_cd from tb_co_user tcu where tcu.usr_id = tcmp.pchs_usr_id) as lat_po_dept_cd 
				, 'ZZMRO' as sav_loc_cd
				, 'ZZMRO' as wrk_area_cd
			    , 'ZZMRO' as wrk_center_cd
			    , 'ZZMRO' as equip_cd
			    , (tcmpm.pchs_qty::numeric * tcm.pchs_unit_weght * tcms.sbst_rati) / 100 as wh_qty
				, substring(tcmp.aprv_cmpt_dt, 0, 5) as wh_yy
		        , substring(tcmp.aprv_cmpt_dt, 5, 2) as wh_mm
		        , substring(tcmp.aprv_cmpt_dt, 7, 2) as wh_dd
		        , substring(tcmp.aprv_cmpt_dt, 0, 7) as wh_ym 
		        , 'AC927145' as crt_usr_id
		        , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		        , 'AC927145' as upt_usr_id
		        , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
	      from tb_ch_mro_pchs_mtrl tcmpm
	      join tb_co_mtrl tcm
	        on tcmpm.mtrl_no = tcm.mtrl_no 
	      join tb_ch_mro_pchs tcmp
	        on tcmpm.mro_pchs_no = tcmp.mro_pchs_no 
	      join tb_ch_mtrl_sbst tcms 
		    on tcm.mtrl_no = tcms.mtrl_no
	     where tcmpm.wh_trn_yn = 'N'
	       and tcmp.mro_pchs_no = #{mro_pchs_no}
	       and tcm.mtrl_no = #{mtrl_no}
	</select>
	
	<update id="updateCreateWhSbMroDd" parameterType="sqlMap">
        /* updateCreateWhSbMroDd */
        insert
            into
            tb_ch_sbst_wh_dd (
                 wh_da
                ,sbst_no
                ,mtrl_no
                ,wkpl_id
                ,plant_cd
                ,impt_yn
                ,lat_po_dept_cd
                ,wrk_area_cd
                ,wrk_center_cd
                ,equip_cd
                ,wh_qty
                ,wh_yy
                ,wh_mm
                ,wh_dd
                ,wh_ym
                ,crt_usr_id
                ,crt_dt
                ,upt_usr_id
                ,upt_dt
                ,sav_loc_cd
            )
        values(
                 #{wh_da}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{impt_yn}
                ,#{lat_po_dept_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,#{wh_qty}::numeric
                ,#{wh_yy}
                ,#{wh_mm}
                ,#{wh_dd}
                ,#{wh_ym}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,#{sav_loc_cd}
        ) on conflict (wh_da, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              wh_qty = tb_ch_sbst_wh_dd.wh_qty + #{wh_qty}::numeric 
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_wh_dd.wh_da  = #{wh_da}
          and tb_ch_sbst_wh_dd.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_wh_dd.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_wh_dd.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_wh_dd.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_wh_dd.impt_yn  = #{impt_yn} 
          and tb_ch_sbst_wh_dd.lat_po_dept_cd  = #{lat_po_dept_cd} 
          and tb_ch_sbst_wh_dd.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_wh_dd.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_wh_dd.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateWhSbMroMm" parameterType="sqlMap">
        /* updateCreateWhSbMroMm */
        insert
            into
            tb_ch_sbst_wh_mm (
                 wh_ym
                ,sbst_no
                ,mtrl_no
                ,wkpl_id
                ,plant_cd
                ,impt_yn
                ,lat_po_dept_cd
                ,wrk_area_cd
                ,wrk_center_cd
                ,equip_cd
                ,wh_qty
                ,wh_yy
                ,wh_mm
                ,crt_usr_id
                ,crt_dt
                ,upt_usr_id
                ,upt_dt
                ,sav_loc_cd
            )
        values(
                 #{wh_ym}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{impt_yn}
                ,#{lat_po_dept_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,#{wh_qty}::numeric
                ,#{wh_yy}
                ,#{wh_mm}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,#{sav_loc_cd}
        ) on conflict (wh_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              wh_qty =  tb_ch_sbst_wh_mm.wh_qty + #{wh_qty}::numeric 
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_wh_mm.wh_ym  = #{wh_ym}
          and tb_ch_sbst_wh_mm.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_wh_mm.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_wh_mm.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_wh_mm.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_wh_mm.impt_yn  = #{impt_yn} 
          and tb_ch_sbst_wh_mm.lat_po_dept_cd  = #{lat_po_dept_cd} 
          and tb_ch_sbst_wh_mm.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_wh_mm.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_wh_mm.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateImkWhMmData" parameterType="sqlMap">
        /* updateImkWhMmData */
        insert into tb_ch_mtrl_wh_mm(
					wh_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , impt_yn
				  , po_dept_cd 
				  , sav_loc_cd 
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , wh_qty
				  , wh_yy
				  , wh_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{wh_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{impt_yn}
			      , #{po_dept_cd}
			      , #{sav_loc_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{if_gb} = 'C' then #{ord_qty}::numeric 
				            when #{if_gb} = 'D' then -1 * #{ord_qty}::numeric 
				            else 0
				            end
			      , #{wh_yy}
			      , #{wh_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (wh_ym, mtrl_no, wkpl_id, plant_cd, impt_yn, po_dept_cd, sav_loc_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set wh_qty = case when #{if_gb} = 'C' then tb_ch_mtrl_wh_mm.wh_qty + #{ord_qty}::numeric 
				            when #{if_gb} = 'D' then tb_ch_mtrl_wh_mm.wh_qty - #{ord_qty}::numeric 
				            else 0
				            end
                 , upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_wh_mm.wh_ym = #{wh_ym}
		   and tb_ch_mtrl_wh_mm.mtrl_no = #{mtrl_no}   
		   and tb_ch_mtrl_wh_mm.wkpl_id = #{wkpl_id}  
		   and tb_ch_mtrl_wh_mm.plant_cd = #{plant_cd}  
		   and tb_ch_mtrl_wh_mm.impt_yn = #{impt_yn}  
		   and tb_ch_mtrl_wh_mm.po_dept_cd = #{po_dept_cd}  
		   and tb_ch_mtrl_wh_mm.sav_loc_cd = #{sav_loc_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_area_cd = #{wrk_area_cd}  
		   and tb_ch_mtrl_wh_mm.wrk_center_cd = #{wrk_center_cd}  
		   and tb_ch_mtrl_wh_mm.equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateImkSbstMmData" parameterType="sqlMap">
        /* updateImkSbstMmData */
        insert
            into
            tb_ch_sbst_wh_mm (
                 wh_ym
                ,sbst_no
                ,mtrl_no
                ,wkpl_id
                ,plant_cd
                ,impt_yn
                ,lat_po_dept_cd
                ,wrk_area_cd
                ,wrk_center_cd
                ,equip_cd
                ,wh_qty
                ,wh_yy
                ,wh_mm
                ,crt_usr_id
                ,crt_dt
                ,upt_usr_id
                ,upt_dt
                ,sav_loc_cd
            )
        values(
                 #{wh_ym}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{impt_yn}
                ,#{lat_po_dept_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{if_gb} = 'C' then #{wh_qty}::numeric 
		              when #{if_gb} = 'D' then -1 * #{wh_qty}::numeric 
		              else 0
		              end 
                ,#{wh_yy}
                ,#{wh_mm}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,#{sav_loc_cd}
        ) on conflict (wh_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, impt_yn, lat_po_dept_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              wh_qty =  case when #{if_gb} = 'C' then tb_ch_sbst_wh_mm.wh_qty + #{wh_qty}::numeric 
				             when #{if_gb} = 'D' then tb_ch_sbst_wh_mm.wh_qty - #{wh_qty}::numeric 
				             else 0
				             end 
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_wh_mm.wh_ym  = #{wh_ym}
          and tb_ch_sbst_wh_mm.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_wh_mm.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_wh_mm.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_wh_mm.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_wh_mm.impt_yn  = #{impt_yn} 
          and tb_ch_sbst_wh_mm.lat_po_dept_cd  = #{lat_po_dept_cd} 
          and tb_ch_sbst_wh_mm.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_wh_mm.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_wh_mm.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateDlDd" parameterType="sqlMap">
        /* updateCreateDlDd */
        insert into tb_ch_mtrl_dl_dd(
					dl_ya 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{dl_ya}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '261' then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
			      , #{dl_yy}
			      , #{dl_mm}
			      , #{dl_dd}
			      , #{dl_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (dl_ya, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set dl_qty = 
        case when #{tran_type} = '261' then tb_ch_mtrl_dl_dd.dl_qty + #{dl_qty}::numeric 
             when #{tran_type} = '262' then tb_ch_mtrl_dl_dd.dl_qty - #{dl_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_dl_dd.dl_ya = #{dl_ya}
			   and tb_ch_mtrl_dl_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_dl_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_dl_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_dl_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_dl_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_dl_dd.equip_cd = #{equip_cd}
    </update>
    
    <update id="updateCreateDlMm" parameterType="sqlMap">
        /* updateCreateDlMm */
        insert into tb_ch_mtrl_dl_mm(
					dl_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{dl_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} = '261' then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
			      , #{dl_yy}
			      , #{dl_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (dl_ym, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set dl_qty = 
        case when #{tran_type} = '261' then tb_ch_mtrl_dl_mm.dl_qty + #{dl_qty}::numeric 
             when #{tran_type} = '262' then tb_ch_mtrl_dl_mm.dl_qty - #{dl_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_dl_mm.dl_ym = #{dl_ym}
		   and tb_ch_mtrl_dl_mm.mtrl_no = #{mtrl_no}   
		   and tb_ch_mtrl_dl_mm.wkpl_id = #{wkpl_id}  
		   and tb_ch_mtrl_dl_mm.plant_cd = #{plant_cd}  
		   and tb_ch_mtrl_dl_mm.wrk_area_cd = #{wrk_area_cd}  
		   and tb_ch_mtrl_dl_mm.wrk_center_cd = #{wrk_center_cd}  
		   and tb_ch_mtrl_dl_mm.equip_cd = #{equip_cd}  
    </update>
    
    <select id="selectDlRohSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectDlRohSbstList */
		select ma.send_datetime 
		     , ma.send_seq 
		     , ma.cud_ci 
		     , ma.tran_type 
		     , ma.mnu_order 
		     , ma.mnu_order_item_seq 
		     , tcms.sbst_no
		     , wghg_date as dl_ya
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
								  from tb_co_cd cd
								  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
								 where rl.cd_grp_no = 'CO00000007'
								   and cd.usg_yn = 'Y'
				                   and cd.del_yn = 'N'
				                   and rl.usg_yn = 'Y'
				                   and rl.del_yn = 'N'
								   and rl.cd = ma.plant) as wkpl_id
		     , plant as plant_cd
		     , wrk_area as wrk_area_cd
		     , wrk_center as wrk_center_cd
		     , equp_code as equip_cd
		     , (wghg_wgt::numeric * tcms.sbst_rati) / 100  as dl_qty
		     , substring(wghg_date, 0, 5) as dl_yy
		     , substring(wghg_date, 5, 2) as dl_mm
		     , substring(wghg_date, 7, 2) as dl_dd
		     , substring(wghg_date, 0, 7) as dl_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		     <if test='bf_qty != null and bf_qty != ""'>
		     , (#{bf_qty}::numeric * tcms.sbst_rati) / 100 as bf_sbst_qty
		     </if>
		  from ti_ch_mtrl_prdt_dl_roh6_mes_recv ma
		  join tb_ch_mtrl_sbst tcms 
		    on ma.matr_code = tcms.mtrl_no 
		 where ma.send_datetime = #{send_datetime}
		   and ma.send_seq = #{send_seq}
	</select>
	
	<update id="updateCreateDlSbDd" parameterType="sqlMap">
        /* updateCreateDlSbDd */
        insert
            into
            tb_ch_sbst_dl_dd (
                 	dl_ya 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty 
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
            )
        values(
                 #{dl_ya}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} = '261' then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
                ,#{dl_yy}
                ,#{dl_mm}
                ,#{dl_dd}
                ,#{dl_ym}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
        ) on conflict (dl_ya, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              dl_qty = case when #{tran_type} = '261' then tb_ch_sbst_dl_dd.dl_qty + #{dl_qty}::numeric 
             				when #{tran_type} = '262' then tb_ch_sbst_dl_dd.dl_qty - #{dl_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_dl_dd.dl_ya  = #{dl_ya}
          and tb_ch_sbst_dl_dd.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_dl_dd.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_dl_dd.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_dl_dd.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_dl_dd.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_dl_dd.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_dl_dd.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateDlSbMm" parameterType="sqlMap">
        /* updateCreateDlSbMm */
        insert
            into
            tb_ch_sbst_dl_mm (
                 	dl_ym
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
            )
        values(
                 #{dl_ym}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} = '261' then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
                ,#{dl_yy}
                ,#{dl_mm}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
        ) on conflict (dl_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              dl_qty = case when #{tran_type} = '261' then tb_ch_sbst_dl_mm.dl_qty + #{dl_qty}::numeric 
             				when #{tran_type} = '262' then tb_ch_sbst_dl_mm.dl_qty - #{dl_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_dl_mm.dl_ym  = #{dl_ym}
          and tb_ch_sbst_dl_mm.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_dl_mm.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_dl_mm.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_dl_mm.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_dl_mm.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_dl_mm.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_dl_mm.equip_cd  = #{equip_cd} 
    </update>
    
    <select id="selectDlUpdateList" parameterType="sqlMap" resultType="sqlMap">
		/* selectDlUpdateList */
		select dl_qty
		      ,move_type_cd
		  from tb_ch_mtrl_dl ma
		 where dl_ya = #{dl_ya}
		   and mtrl_no = #{mtrl_no}
		   and wkpl_id = #{wkpl_id}
		   and plant_cd = #{plant_cd}
		   and wrk_area_cd = #{wrk_area_cd}
		   and wrk_center_cd = #{wrk_center_cd}
		   and equip_cd = #{equip_cd}
		   and make_ordr_no = #{mnu_order}
		   and item_no = #{mnu_order_item_seq}
		   and reg_cd in ('C', 'U')
		   <![CDATA[
		   and crt_dt <= #{crt_dt}
		   and send_sqno < #{send_seq}
		   ]]>
		 order by crt_dt desc, send_sqno desc
	</select>
	
	<update id="updateUpdateDlDd" parameterType="sqlMap">
        /* updateUpdateDlDd */
        update tb_ch_mtrl_dl_dd set dl_qty = 
        case when #{bf_type_cd} = '261' and #{tran_type} = '261' then dl_qty - #{bf_qty}::numeric + #{dl_qty}::numeric
             when #{bf_type_cd} = '261' and #{tran_type} = '262' then dl_qty - #{bf_qty}::numeric - #{dl_qty}::numeric 
             when #{bf_type_cd} = '262' and #{tran_type} = '261' then dl_qty + #{bf_qty}::numeric + #{dl_qty}::numeric
             when #{bf_type_cd} = '262' and #{tran_type} = '261' then dl_qty + #{bf_qty}::numeric - #{dl_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ya = #{dl_ya}
			   and mtrl_no = #{mtrl_no}
			   and wkpl_id = #{wkpl_id}
			   and plant_cd = #{plant_cd}
			   and wrk_area_cd = #{wrk_area_cd}
			   and wrk_center_cd = #{wrk_center_cd}
			   and equip_cd = #{equip_cd}
    </update>
    
    <update id="updateUpdateDlMm" parameterType="sqlMap">
        /* updateUpdateDlMm */
        update tb_ch_mtrl_dl_mm set dl_qty = 
        case when #{bf_type_cd} = '261' and #{tran_type} = '261' then dl_qty - #{bf_qty}::numeric + #{dl_qty}::numeric
             when #{bf_type_cd} = '261' and #{tran_type} = '262' then dl_qty - #{bf_qty}::numeric - #{dl_qty}::numeric 
             when #{bf_type_cd} = '262' and #{tran_type} = '261' then dl_qty + #{bf_qty}::numeric + #{dl_qty}::numeric
             when #{bf_type_cd} = '262' and #{tran_type} = '262' then dl_qty + #{bf_qty}::numeric - #{dl_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ym = #{dl_ym}
		   and mtrl_no = #{mtrl_no}   
		   and wkpl_id = #{wkpl_id}  
		   and plant_cd = #{plant_cd}   
		   and wrk_area_cd = #{wrk_area_cd}  
		   and wrk_center_cd = #{wrk_center_cd}  
		   and equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateUpdateDlSbDd" parameterType="sqlMap">
        /* updateUpdateDlSbDd */
        update tb_ch_sbst_dl_dd set
              dl_qty = case when #{bf_type_cd} = '261' and #{tran_type} = '261' then dl_qty - #{bf_sbst_qty}::numeric + #{dl_qty}::numeric
				            when #{bf_type_cd} = '261' and #{tran_type} = '262' then dl_qty - #{bf_sbst_qty}::numeric - #{dl_qty}::numeric 
				            when #{bf_type_cd} = '262' and #{tran_type} = '261' then dl_qty + #{bf_sbst_qty}::numeric + #{dl_qty}::numeric
				            when #{bf_type_cd} = '262' and #{tran_type} = '262' then dl_qty + #{bf_sbst_qty}::numeric - #{dl_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ya  = #{dl_ya}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateUpdateDlSbMm" parameterType="sqlMap">
        /* updateUpdateDlSbMm */
        update tb_ch_sbst_dl_mm set
              dl_qty = case when #{bf_type_cd} = '261' and #{tran_type} = '261' then dl_qty - #{bf_sbst_qty}::numeric + #{dl_qty}::numeric
				            when #{bf_type_cd} = '261' and #{tran_type} = '262' then dl_qty - #{bf_sbst_qty}::numeric - #{dl_qty}::numeric 
				            when #{bf_type_cd} = '262' and #{tran_type} = '261' then dl_qty + #{bf_sbst_qty}::numeric + #{dl_qty}::numeric
				            when #{bf_type_cd} = '262' and #{tran_type} = '262' then dl_qty + #{bf_sbst_qty}::numeric - #{dl_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ym  = #{dl_ym}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteDlDd" parameterType="sqlMap">
        /* updateDeleteDlDd */
        update tb_ch_mtrl_dl_dd set dl_qty = 
        case when #{bf_type_cd} = '261' then dl_qty - #{bf_qty}::numeric
             when #{bf_type_cd} = '262' then dl_qty + #{bf_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ya = #{dl_ya}
			   and mtrl_no = #{mtrl_no}
			   and wkpl_id = #{wkpl_id}
			   and plant_cd = #{plant_cd}
			   and wrk_area_cd = #{wrk_area_cd}
			   and wrk_center_cd = #{wrk_center_cd}
			   and equip_cd = #{equip_cd}
    </update>
    
    <update id="updateDeleteDlMm" parameterType="sqlMap">
        /* updateDeleteDlMm */
        update tb_ch_mtrl_dl_mm set dl_qty = 
        case when #{bf_type_cd} = '261' then dl_qty - #{bf_qty}::numeric
             when #{bf_type_cd} = '262' then dl_qty + #{bf_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ym = #{dl_ym}
		   and mtrl_no = #{mtrl_no}   
		   and wkpl_id = #{wkpl_id}  
		   and plant_cd = #{plant_cd}  
		   and wrk_area_cd = #{wrk_area_cd}  
		   and wrk_center_cd = #{wrk_center_cd}  
		   and equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateDeleteDlSbDd" parameterType="sqlMap">
        /* updateDeleteDlSbDd */
        update tb_ch_sbst_dl_dd set
              dl_qty = case when #{bf_type_cd} = '261' then dl_qty - #{bf_sbst_qty}::numeric
             			    when #{bf_type_cd} = '262' then dl_qty + #{bf_sbst_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ya  = #{dl_ya}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteDlSbMm" parameterType="sqlMap">
        /* updateDeleteDlSbMm */
        update tb_ch_sbst_dl_mm set
              dl_qty = case when #{bf_type_cd} = '261' then dl_qty - #{bf_sbst_qty}::numeric
             			    when #{bf_type_cd} = '262' then dl_qty + #{bf_sbst_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ym  = #{dl_ym}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateEtcDlDd" parameterType="sqlMap">
        /* updateCreateEtcDlDd */
        insert into tb_ch_mtrl_dl_dd(
					dl_ya 
				  , mtrl_no 
				  , wkpl_id 
				  , plant_cd 
				  , wrk_area_cd 
				  , wrk_center_cd 
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{dl_ya}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
			      , #{dl_yy}
			      , #{dl_mm}
			      , #{dl_dd}
			      , #{dl_ym}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (dl_ya, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set dl_qty = 
        case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then tb_ch_mtrl_dl_dd.dl_qty + #{dl_qty}::numeric 
             when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then tb_ch_mtrl_dl_dd.dl_qty - #{dl_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_dl_dd.dl_ya = #{dl_ya}
			   and tb_ch_mtrl_dl_dd.mtrl_no = #{mtrl_no}
			   and tb_ch_mtrl_dl_dd.wkpl_id = #{wkpl_id}
			   and tb_ch_mtrl_dl_dd.plant_cd = #{plant_cd}
			   and tb_ch_mtrl_dl_dd.wrk_area_cd = #{wrk_area_cd}
			   and tb_ch_mtrl_dl_dd.wrk_center_cd = #{wrk_center_cd}
			   and tb_ch_mtrl_dl_dd.equip_cd = #{equip_cd} 
    </update>
    
    <update id="updateCreateEtcDlMm" parameterType="sqlMap">
        /* updateCreateEtcDlMm */
        insert into tb_ch_mtrl_dl_mm(
					dl_ym
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
				) values ( 
				    #{dl_ym}
			      , #{mtrl_no}
			      , #{wkpl_id}
			      , #{plant_cd}
			      , #{wrk_area_cd}
			      , #{wrk_center_cd}
			      , #{equip_cd}
			      , case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
			      , #{dl_yy}
			      , #{dl_mm}
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')
			      , 'AC927145'
			      , to_char(NOW(),'YYYYMMDDHH24MISS')	
				 ) on conflict (dl_ym, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set dl_qty = 
        case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then tb_ch_mtrl_dl_mm.dl_qty + #{dl_qty}::numeric 
             when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then tb_ch_mtrl_dl_mm.dl_qty - #{dl_qty}::numeric 
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where tb_ch_mtrl_dl_mm.dl_ym = #{dl_ym}
		   and tb_ch_mtrl_dl_mm.mtrl_no = #{mtrl_no}   
		   and tb_ch_mtrl_dl_mm.wkpl_id = #{wkpl_id}  
		   and tb_ch_mtrl_dl_mm.plant_cd = #{plant_cd}  
		   and tb_ch_mtrl_dl_mm.wrk_area_cd = #{wrk_area_cd}  
		   and tb_ch_mtrl_dl_mm.wrk_center_cd = #{wrk_center_cd}  
		   and tb_ch_mtrl_dl_mm.equip_cd = #{equip_cd}  
    </update>
    
    <select id="selectDlEtcSbstList" parameterType="sqlMap" resultType="sqlMap">
		/* selectDlEtcSbstList */
		select ma.send_dt 
		     , ma.send_seq 
		     , ma.cud_ci 
		     , ma.tran_type  
		     , tcms.sbst_no 
		     , inout_date as dl_ya
		     , matr_code as mtrl_no
		     , (select cd.cd as wkpl_id
						  from tb_co_cd cd
						  join tb_co_cd_rel rl on cd.cd_grp_no = rl.up_cd_grp_no and cd.cd = rl.up_cd 
						 where rl.cd_grp_no = 'CO00000007'
						   and cd.usg_yn = 'Y'
		                   and cd.del_yn = 'N'
		                   and rl.usg_yn = 'Y'
		                   and rl.del_yn = 'N'
						   and rl.cd = plant) as wkpl_id
		     , plant as plant_cd
		     , 'ZZZZZ' as wrk_area_cd
		     , 'ZZZZZ' as wrk_center_cd
		     , 'ZZZZZ' as equip_cd
		     , (inout_wgt::numeric * tcms.sbst_rati) / 100  as dl_qty
		     , substring(inout_date, 0, 5) as dl_yy
		     , substring(inout_date, 5, 2) as dl_mm
		     , substring(inout_date, 7, 2) as dl_dd
		     , substring(inout_date, 0, 7) as dl_ym
		     , 'AC927145' as crt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as crt_dt
		     , 'AC927145' as upt_usr_id
		     , to_char(NOW(),'YYYYMMDDHH24MISS') as upt_dt
		  from ti_ch_mtrl_prdt_dl_etc_mes_recv ma
		  join tb_ch_mtrl_sbst tcms 
		    on ma.matr_code = tcms.mtrl_no
		 where ma.send_dt  = #{send_dt}
		   and ma.send_seq = #{send_seq}
	</select>
	
	<update id="updateCreateEtcDlSbDd" parameterType="sqlMap">
        /* updateCreateEtcDlSbDd */
        insert
            into
            tb_ch_sbst_dl_dd (
                 	dl_ya 
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty 
				  , dl_yy
				  , dl_mm
				  , dl_dd
				  , dl_ym
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
            )
        values(
                 #{dl_ya}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
                ,#{dl_yy}
                ,#{dl_mm}
                ,#{dl_dd}
                ,#{dl_ym}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
        ) on conflict (dl_ya, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              dl_qty = case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then tb_ch_sbst_dl_dd.dl_qty + #{dl_qty}::numeric 
             				when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then tb_ch_sbst_dl_dd.dl_qty - #{dl_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_dl_dd.dl_ya  = #{dl_ya}
          and tb_ch_sbst_dl_dd.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_dl_dd.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_dl_dd.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_dl_dd.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_dl_dd.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_dl_dd.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_dl_dd.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateCreateEtcDlSbMm" parameterType="sqlMap">
        /* updateCreateEtcDlSbMm */
        insert
            into
            tb_ch_sbst_dl_mm (
                 	dl_ym
				  , sbst_no
				  , mtrl_no
				  , wkpl_id
				  , plant_cd
				  , wrk_area_cd
				  , wrk_center_cd
				  , equip_cd
				  , dl_qty
				  , dl_yy
				  , dl_mm
				  , crt_usr_id
				  , crt_dt
				  , upt_usr_id
				  , upt_dt
            )
        values(
                 #{dl_ym}
                ,#{sbst_no}
                ,#{mtrl_no}
                ,#{wkpl_id}
                ,#{plant_cd}
                ,#{wrk_area_cd}
                ,#{wrk_center_cd}
                ,#{equip_cd}
                ,case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then #{dl_qty}::numeric 
	                     else -1 * #{dl_qty}::numeric
	                     end
                ,#{dl_yy}
                ,#{dl_mm}
                ,'AC927145'
		     	,to_char(NOW(),'YYYYMMDDHH24MISS')
			    ,'AC927145'
			    ,to_char(NOW(),'YYYYMMDDHH24MISS')
        ) on conflict (dl_ym, sbst_no, mtrl_no, wkpl_id, plant_cd, wrk_area_cd, wrk_center_cd, equip_cd) DO
        update set
              dl_qty = case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then tb_ch_sbst_dl_mm.dl_qty + #{dl_qty}::numeric 
             				when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then tb_ch_sbst_dl_mm.dl_qty - #{dl_qty}::numeric 
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where tb_ch_sbst_dl_mm.dl_ym  = #{dl_ym}
          and tb_ch_sbst_dl_mm.sbst_no  = #{sbst_no} 
          and tb_ch_sbst_dl_mm.mtrl_no  = #{mtrl_no} 
          and tb_ch_sbst_dl_mm.wkpl_id  = #{wkpl_id} 
          and tb_ch_sbst_dl_mm.plant_cd  = #{plant_cd} 
          and tb_ch_sbst_dl_mm.wrk_area_cd  = #{wrk_area_cd} 
          and tb_ch_sbst_dl_mm.wrk_center_cd  = #{wrk_center_cd} 
          and tb_ch_sbst_dl_mm.equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteEtcDlDd" parameterType="sqlMap">
        /* updateDeleteEtcDlDd */
        update tb_ch_mtrl_dl_dd set dl_qty = 
        case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then dl_qty - #{dl_qty}::numeric
             when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then dl_qty + #{dl_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ya = #{dl_ya}
			   and mtrl_no = #{mtrl_no}
			   and wkpl_id = #{wkpl_id}
			   and plant_cd = #{plant_cd}
			   and wrk_area_cd = #{wrk_area_cd}
			   and wrk_center_cd = #{wrk_center_cd}
			   and equip_cd = #{equip_cd}
    </update>
    
    <update id="updateDeleteEtcDlMm" parameterType="sqlMap">
        /* updateDeleteEtcDlMm */
        update tb_ch_mtrl_dl_mm set dl_qty = 
        case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then dl_qty - #{dl_qty}::numeric
             when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then dl_qty + #{dl_qty}::numeric
             end,
             upt_dt = to_char(NOW(),'YYYYMMDDHH24MISS')
		 where dl_ym = #{dl_ym}
		   and mtrl_no = #{mtrl_no}   
		   and wkpl_id = #{wkpl_id}  
		   and plant_cd = #{plant_cd}  
		   and wrk_area_cd = #{wrk_area_cd}  
		   and wrk_center_cd = #{wrk_center_cd}  
		   and equip_cd = #{equip_cd}  
    </update>
    
    <update id="updateDeleteEtcDlSbDd" parameterType="sqlMap">
        /* updateDeleteEtcDlSbDd */
        update tb_ch_sbst_dl_dd set
              dl_qty = case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then dl_qty - #{dl_qty}::numeric
             			    when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then dl_qty + #{dl_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ya  = #{dl_ya}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <update id="updateDeleteEtcDlSbMm" parameterType="sqlMap">
        /* updateDeleteEtcDlSbMm */
        update tb_ch_sbst_dl_mm set
              dl_qty = case when #{tran_type} in ('331', '333', '551', '553', '555', 'Z01', 'X05', 'Z05') then dl_qty - #{dl_qty}::numeric
             			    when #{tran_type} in ('332', '334', '552', '554', '556', 'Z02', 'Z06') then dl_qty + #{dl_qty}::numeric
             				end
            , upt_dt = to_char(now(),'YYYYMMDDHH24MISS')
        where dl_ym  = #{dl_ym}
          and sbst_no  = #{sbst_no} 
          and mtrl_no  = #{mtrl_no} 
          and wkpl_id  = #{wkpl_id} 
          and plant_cd  = #{plant_cd} 
          and wrk_area_cd  = #{wrk_area_cd} 
          and wrk_center_cd  = #{wrk_center_cd} 
          and equip_cd  = #{equip_cd} 
    </update>
    
    <select id="selectMsdsChkUsrList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMsdsChkUsrList */
		select usr_id 
		from tb_co_biz_pc
		where biz_pc_grp_cd = 'BG00003'
		  and usg_yn = 'Y'
		  and del_yn = 'N'
		  and cnct_1st_cd = #{rglt_chk_wkpl_id}
	</select>
	
	<select id="selectOprbBgnChkTgtList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbBgnChkTgtList */
		select oprb_chk_tgt_id
	          ,wkpl_id 
	          ,oprb_chk_supe_usr_id 
	          ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = soct.oprb_chk_supe_usr_id) as lang_cd 
	          ,oprb_chk_tgt_nm
	          ,oprb_chk_wkpl_loc_id 
	          ,oprb_chk_supe_spic_usr_id
	          ,oprb_chk_dtl_loc_nm 
	          ,oprb_chk_note_txt 
	      from tb_sh_oprb_chk_tgt soct 
	     where usg_yn = 'Y'
	       and not exists (select 1 
	                         from tb_sh_oprb_chk soc
	                        where soct.oprb_chk_tgt_id = soc.oprb_chk_tgt_id
	                          and to_char(soc.crt_dt, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD')) 
	</select>
	
	<select id="selectOprbBgnChkKey" parameterType="sqlMap" resultType="string">
		/* selectOprbBgnChkKey */
		select concat('SOC', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(oprb_chk_id , 10, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_oprb_chk soc
		 where 1=1
		   and substring(oprb_chk_id, 1, 9) = concat('SOC', to_char(now(), 'YYMMDD'))
	</select>
	
	<insert id="insertOprbBgnChkBasic" parameterType="sqlMap">
        /* insertOprbBgnChkBasic */
        insert into tb_sh_oprb_chk(
			oprb_chk_id 
		   ,oprb_chk_tgt_id 
		   ,wkpl_id 
		   ,oprb_chk_schd_dt 
		   ,oprb_chk_dt 
		   ,oprb_chk_hm 
		   ,oprb_chk_rspn_usr_id 
		   ,oprb_chk_spic_usr_id
		   ,oprb_chk_prst_cd 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{oprb_chk_id}
		   ,#{oprb_chk_tgt_id}
		   ,#{wkpl_id}
		   ,to_char(now(), 'YYYYMMDD')
		   ,''
		   ,''
		   ,#{oprb_chk_supe_usr_id}
		   ,#{oprb_chk_supe_spic_usr_id}
		   ,'10'
		   ,'SYSTEM'
		   ,now()
		   ,'SYSTEM'
		   ,now()
		)
    </insert>
    
    <insert id="insertOprbBgnChkEqp" parameterType="sqlMap">
        /* insertOprbBgnChkEqp */
        insert into tb_sh_oprb_chk_rslt(
			oprb_chk_id 
		   ,oprn_bf_chec_cl_cd 
		   ,oprn_bf_chec_dtl_cl_cd 
		   ,oprn_bf_chec_sn 
		   ,chec_lang_cd 
		   ,oprn_bf_chec_in_cl_cd 
		   ,oprb_chk_tgt_id 
		   ,wkpl_id 
		   ,oprn_bf_chec_txt 
		   ,chec_chk_rslt_vl 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) select distinct #{oprb_chk_id}
		        ,scc.chec_cl_cd 
		        ,scc.chec_dtl_cl_cd 
		        ,scc.chec_sn 
		        ,#{lang_cd}
		        ,scc.chec_in_cl_cd 
		        ,#{oprb_chk_tgt_id}
		        ,#{wkpl_id}
		        ,scc.chec_txt 
		        ,''
		        ,'SYSTEM'
		        ,now()
		        ,'SYSTEM'
		        ,now()
		    from tb_sh_oprb_chk_tgt_eqp socte 
		    join tb_sh_chk_chec scc 
		      on socte.oprb_chk_eqp_type_cd = scc.chec_cl_cd 
		   where scc.usg_yn = 'Y'
		     and socte.oprb_chk_tgt_id = #{oprb_chk_tgt_id}
		     and scc.chec_chk_cl_cd = 'CHK001' -- 작업 시작 전 점검
		     and scc.chec_lang_cd = #{lang_cd}
    </insert>
    
    <select id="selectCircChkTgtList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCircChkTgtList */
		select circ_chk_tgt_id
		      ,wkpl_id
		      ,circ_chk_supe_usr_id
		      ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = scct.circ_chk_supe_usr_id) as lang_cd
		      ,circ_chk_tgt_nm
		      ,circ_chk_cyc_cd
		      ,circ_chk_wkpl_loc_id
		      ,circ_chk_dtl_loc_nm
		      ,circ_chk_note_txt
		      ,chec_cl_cd
		      ,usg_yn
	      from tb_sh_circ_chk_tgt scct
	     where usg_yn = 'Y'
	       and not exists (select 1 
	                         from tb_sh_circ_chk scc 
	                        where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id
	                          and to_char(scc.crt_dt, 'YYYYMMDD') = to_char(now(), 'YYYYMMDD'))
	</select>
	
	<select id="selectCircChkKey" parameterType="sqlMap" resultType="string">
		/* selectCircChkKey */
		select concat('WCHK', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(circ_chk_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_circ_chk soc
		 where 1=1
		   and substring(circ_chk_id, 1, 10) = concat('WCHK', to_char(now(), 'YYMMDD'))
	</select>
	
	<select id="selectWeekInfo" parameterType="sqlMap" resultType="sqlMap">
		/* selectWeekInfo */
		select cast(extract(week from now()) as integer) % 2 as weekcheck
      		  ,cast(extract(isodow from now()) as integer) as week
	</select>
	
	<insert id="insertCircChkBasic" parameterType="sqlMap">
        /* insertCircChkBasic */
        insert into tb_sh_circ_chk(
			circ_chk_id 
		   ,wkpl_id
		   ,circ_chk_schd_dt
		   ,circ_chk_dt
		   ,circ_chk_hm
		   ,circ_chk_tgt_id
		   ,circ_chk_supe_usr_id
		   ,circ_chk_tgt_nm
		   ,circ_chk_cyc_cd
		   ,circ_chk_wkpl_loc_id
		   ,circ_chk_dtl_loc_nm
		   ,circ_chk_note_txt
		   ,circ_aprv_no
		   ,circ_chk_prst_cd
		   ,crt_usr_id
		   ,crt_dt
		   ,upt_usr_id
		   ,upt_dt
		) values (
			#{circ_chk_id}
		   ,#{wkpl_id}
		   ,to_char(now(), 'YYYYMMDD')
		   ,''
		   ,''
		   ,#{circ_chk_tgt_id}
		   ,#{circ_chk_supe_usr_id}
		   ,#{circ_chk_tgt_nm}
		   ,#{circ_chk_cyc_cd}
		   ,#{circ_chk_wkpl_loc_id}
		   ,#{circ_chk_dtl_loc_nm}
		   ,#{circ_chk_note_txt}
		   ,''
		   ,'10'
		   ,'SYSTEM'
		   ,now()
		   ,'SYSTEM'
		   ,now()
		)
    </insert>
    
    <insert id="insertCircChkAtnd" parameterType="sqlMap">
        /* insertCircChkAtnd */
        insert into tb_sh_circ_chk_atnd(
			circ_chk_id
		   ,circ_chk_atnd_sn
		   ,wkpl_id
		   ,circ_chk_tgt_id
		   ,circ_chk_atnd_cl_cd
		   ,circ_chk_atnc_usr_id
		   ,circ_chk_atnd_nm
		   ,circ_chk_atnd_pstn_nm
		   ,circ_chk_atnd_dept_nm
		   ,circ_chk_atnd_tphn
		   ,circ_chk_atnd_emad
		   ,crt_usr_id
		   ,crt_dt
		   ,upt_usr_id
		   ,upt_dt
		) select #{circ_chk_id}
		        ,sccta.circ_chk_atnd_sn 
		        ,sccta.wkpl_id 
		        ,sccta.circ_chk_tgt_id 
		        ,sccta.circ_chk_atnd_cl_cd 
		        ,sccta.circ_chk_atnc_usr_id 
		        ,sccta.circ_chk_atnd_nm 
		        ,sccta.circ_chk_atnd_pstn_nm 
		        ,sccta.circ_chk_atnd_dept_nm 
		        ,sccta.circ_chk_atnd_tphn 
		        ,sccta.circ_chk_atnd_emad 
		        ,'SYSTEM'
		        ,now()
		        ,'SYSTEM'
		        ,now()
			from tb_sh_circ_chk_tgt_atnd sccta
		   where sccta.circ_chk_tgt_id = #{circ_chk_tgt_id}
    </insert>
    
    <insert id="insertCircChkRslt" parameterType="sqlMap">
        /* insertCircChkRslt */
        insert into tb_sh_circ_chk_chec(
			circ_chk_id
		   ,chec_chk_cl_cd
		   ,circ_chk_chec_sn
		   ,chec_lang_cd
		   ,circ_chk_chec_in_cl_cd
		   ,circ_chk_tgt_id
		   ,wkpl_id
		   ,chec_chk_rslt_vl
		   ,crt_usr_id
		   ,crt_dt
		   ,upt_usr_id
		   ,upt_dt
		   ,chec_txt
		) select #{circ_chk_id}
		        ,scc.chec_dtl_cl_cd 
		        ,scc.chec_sn 
		        ,scc.chec_lang_cd 
		        ,scc.chec_in_cl_cd 
		        ,#{circ_chk_tgt_id}
		        ,#{wkpl_id}
		        ,''
		        ,'SYSTEM'
		        ,now()
		        ,'SYSTEM'
		        ,now()
		        ,scc.chec_txt 
		    from tb_sh_chk_chec scc
		   where scc.usg_yn = 'Y'
		     and scc.chec_lang_cd = #{lang_cd}
		     and scc.chec_chk_cl_cd = 'CHK002' -- 순회점검
		     and scc.chec_cl_cd = #{chec_cl_cd} -- 체크리스트 구분
    </insert>
    
    <!-- 합동점검 생성 대상 조회 -->
    <select id="selectJntChkTgtList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntChkTgtList */
		select to_char(sjcp.jnt_chk_schd_dttm,'YYYYMMDD') as jnt_chk_schd_dt
			  ,sjct.jnt_chk_tgt_id
		      ,sjct.wkpl_id
		      ,sjct.jnt_chk_supe_usr_id
		      ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = sjct.jnt_chk_supe_usr_id) as lang_cd
		      ,sjct.jnt_chk_tgt_nm
		      ,sjct.jnt_chk_cyc_cd 
		      ,sjct.jnt_chk_wkpl_loc_id
		      ,sjct.jnt_chk_dtl_loc_nm
		      ,sjct.jnt_chk_note_txt
		      ,sjct.usg_yn
		      ,sjct.chec_cl_cd
		  from tb_sh_jnt_chk_plan sjcp
		  left join tb_sh_jnt_chk_tgt sjct
		    on sjcp.jnt_chk_tgt_id = sjct.jnt_chk_tgt_id
		 where sjct.usg_yn = 'Y'
		   and not exists (select 1
		   					 from tb_sh_jnt_chk sjc 
	                        where sjc.jnt_chk_tgt_id = sjcp.jnt_chk_tgt_id
	                          and sjc.jnt_chk_schd_dt = to_char(sjcp.jnt_chk_schd_dttm,'YYYYMMDD'))
	</select>

    <!-- 합동점검 key 생성 -->
	<select id="selectJntChkKey" parameterType="sqlMap" resultType="string">
		/* selectJntChkKey */
		select concat('JCHK', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(sjc.jnt_chk_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_jnt_chk sjc
		 where substring(sjc.jnt_chk_id, 1, 10) = concat('JCHK', to_char(now(), 'YYMMDD'))
	</select>
	
    <!-- 합동점검 기본데이터 생성 -->
	<insert id="insertJntChkBasic" parameterType="sqlMap">
        /* insertJntChkBasic */
        insert into tb_sh_jnt_chk (
			wkpl_id
		   ,jnt_chk_id
		   ,jnt_chk_schd_dt
		   ,jnt_chk_dt
		   ,jnt_chk_hm
		   ,jnt_chk_tgt_id
		   ,jnt_chk_supe_usr_id
		   ,jnt_chk_tgt_nm
		   ,jnt_chk_cyc_cd
		   ,jnt_chk_wkpl_loc_id
		   ,jnt_chk_dtl_loc_nm
		   ,jnt_chk_note_txt
		   ,jnt_chk_prst_cd
		   ,jnt_chk_rslt_txt
		   ,jnt_aprv_no
		   ,crt_usr_id
		   ,crt_dt
		   ,upt_usr_id
		   ,upt_dt
		) values (
			#{wkpl_id}
		   ,#{jnt_chk_id}
		   ,#{jnt_chk_schd_dt}
		   ,''
		   ,''
		   ,#{jnt_chk_tgt_id}
		   ,#{jnt_chk_supe_usr_id}
		   ,#{jnt_chk_tgt_nm}
		   ,#{jnt_chk_cyc_cd}
		   ,#{jnt_chk_wkpl_loc_id}
		   ,#{jnt_chk_dtl_loc_nm}
		   ,#{jnt_chk_note_txt}
		   ,'10'
		   ,''
		   ,''
		   ,'SYSTEM'
		   ,now()
		   ,'SYSTEM'
		   ,now()
		)
    </insert>
    
    <!-- 합동점검 참석자 데이터 생성 -->
    <insert id="insertJntChkAtnd" parameterType="sqlMap">
        /* insertJntChkAtnd */
        insert into tb_sh_jnt_chk_atnd (
			jnt_chk_id
		   ,jnt_chk_atnd_sn
		   ,wkpl_id 
		   ,jnt_chk_tgt_id 
		   ,jnt_chk_atnd_cl_cd 
		   ,jnt_chk_atnc_usr_id 
		   ,jnt_chk_atnd_nm 
		   ,jnt_chk_atnd_pstn_nm
		   ,jnt_chk_atnd_dept_nm 
		   ,jnt_chk_atnd_tphn 
		   ,jnt_chk_atnd_emad 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) select #{jnt_chk_id}
		        ,sjcta.jnt_chk_atnd_sn 
		        ,sjcta.wkpl_id 
		        ,sjcta.jnt_chk_tgt_id 
		        ,sjcta.jnt_chk_atnd_cl_cd 
		        ,sjcta.jnt_chk_atnc_usr_id 
		        ,sjcta.jnt_chk_atnd_nm 
		        ,sjcta.jnt_chk_atnd_pstn_nm 
		        ,sjcta.jnt_chk_atnd_dept_nm 
		        ,sjcta.jnt_chk_atnd_tphn 
		        ,sjcta.jnt_chk_atnd_emad 
		        ,'SYSTEM'
		        ,now()
		        ,'SYSTEM'
		        ,now()
		    from tb_sh_jnt_chk_tgt_atnd sjcta
		   where sjcta.jnt_chk_tgt_id = #{jnt_chk_tgt_id}
    </insert>
    
    <select id="selectCrinOverDateList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCrinOverDateList */
		select distinct
		       sc.crin_actn_schd_usr_id 
			  <if test='chkList != null and chkList != ""'>
			  ,sc.crin_id 
			  ,sc.wkpl_id 
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,fn_get_cd('ST00000002',sc.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			  </if>
			  ,sc.crin_cl_cd 
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,fn_get_cd('SH00000053',sc.crin_cl_cd,'NM',#{lang_cd}) as crin_cl_cd_nm
			  </if>
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sc.crin_actn_schd_usr_id) as crin_actn_schd_usr_nm
			  </if>  
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sc.crin_chk_supe_usr_id) as crin_chk_supe_usr_nm
			  </if>  
			  ,sc.actn_hope_dt 
			  ,sc.crin_txt 
			  ,sc.lnk_chk_id 
			  ,sc.crin_chk_dt 
			  ,sc.crin_chk_wkpl_loc_id 
			  ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = sc.crin_chk_wkpl_loc_id) as crin_chk_wkpl_loc_nm
			  ,sc.crin_chk_dtl_loc_nm 
			  ,sc.crin_chk_supe_usr_id 
			  ,sc.crin_chk_note_txt 
			  ,sc.crin_chk_tgt_nm 
			  ,sc.crin_chk_hm 
			  ,sc.crin_risk_tp_cd 
			  ,sca.crin_prst_cd 
			  ,substring(sc.crin_chk_dt , 0, 5) || '-' || substring(sc.crin_chk_dt, 5, 2) || '-' || substring(sc.crin_chk_dt, 7, 2) || ' ' || 
			  substring(sc.crin_chk_hm , 0, 3) || ':' || substring(sc.crin_chk_hm, 3, 2) as crin_chk_dttm
			  </if>
			  ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = sc.crin_actn_schd_usr_id) as lang_cd
		  from tb_sh_crin sc 
		  left join tb_sh_crin_actn sca 
		    on sc.crin_id = sca.crin_id 
		 where actn_hope_dt <![CDATA[ < ]]> to_char(now(), 'YYYYMMDD')
		   and (crin_prst_cd != '30' or crin_prst_cd is null)
		   <if test='crin_actn_schd_usr_id != null and crin_actn_schd_usr_id != ""'>
				and sc.crin_actn_schd_usr_id = #{crin_actn_schd_usr_id}
		   </if>
	</select>
	
	<select id="selectCircOverDateList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCircOverDateList */
		select distinct
		       scc.circ_chk_supe_usr_id
		      <if test='chkList != null and chkList != ""'>
		      ,circ_chk_schd_dt
			  ,to_char(now(), 'YYYYMMDD') as real_chk_schd_dt
			  ,to_char(scc.crt_dt , 'YYYYMMDD') as crt_dt
			  ,scc.circ_chk_id 
			  ,scc.wkpl_id 
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,fn_get_cd('ST00000002',scc.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			  </if>
			  ,scc.circ_chk_schd_dt 
			  ,scc.circ_chk_dt 
			  ,scc.circ_chk_hm 
			  ,scc.circ_chk_tgt_id 
			  <if test='lang_cd != null and lang_cd != ""'>
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
			  </if>  
			  ,scc.circ_chk_tgt_nm 
			  ,scc.circ_chk_cyc_cd 
			  ,scc.circ_chk_wkpl_loc_id 
			  ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
			  ,scc.circ_chk_dtl_loc_nm 
			  ,scc.circ_chk_note_txt 
			  ,scc.circ_chk_prst_cd 
			  ,scc.circ_aprv_no 
			  </if>
			  ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = scc.circ_chk_supe_usr_id) as lang_cd
	          ,case when (select count(*) 
	                        from tb_sh_circ_chk_tgt scct
	                       where scct.circ_chk_tgt_id = scc.circ_chk_tgt_id
	                         and scct.chec_cl_cd = 'CE008') > 0 then 'Y' else 'N' end as gb
		  from tb_sh_circ_chk scc 
		 where (circ_chk_schd_dt <![CDATA[ < ]]> to_char(now(), 'YYYYMMDD') and scc.circ_chk_prst_cd = '10') -- 미점검 상태이며 예상 점검 일자가 오늘보다 작을 경우
		    <if test='circ_chk_supe_usr_id != null and circ_chk_supe_usr_id != ""'>
				and scc.circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
			</if>	
	</select>
	
	<select id="selectJntOverDateList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntOverDateList */
		select distinct
		       jnt_chk_supe_usr_id
		      <if test='chkList != null and chkList != ""'>
		      ,wkpl_id 
		      <if test='lang_cd != null and lang_cd != ""'>
			  ,fn_get_cd('ST00000002',sjc.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			  </if>
	          ,jnt_chk_id 
	          ,jnt_chk_schd_dt 
	          ,jnt_chk_dt
	          ,jnt_chk_hm 
	          ,jnt_chk_tgt_id  
	          <if test='lang_cd != null and lang_cd != ""'>
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sjc.jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
			  </if>
	          ,jnt_chk_tgt_nm 
	          ,jnt_chk_cyc_cd 
	          ,jnt_chk_wkpl_loc_id 
	          ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = sjc.jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
	          ,jnt_chk_dtl_loc_nm 
	          ,jnt_chk_note_txt 
	          ,jnt_chk_prst_cd 
	          ,jnt_chk_rslt_txt 
	          ,jnt_aprv_no 
	          </if>
	          ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = sjc.jnt_chk_supe_usr_id) as lang_cd
	      from tb_sh_jnt_chk sjc 
	     where (jnt_chk_schd_dt <![CDATA[ < ]]> to_char(now(), 'YYYYMMDD') and sjc.jnt_chk_prst_cd = '10') -- 미점검 상태이며 예상 점검 일자가 오늘보다 작을 경우
	        <if test='jnt_chk_supe_usr_id != null and jnt_chk_supe_usr_id != ""'>
				and sjc.jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
			</if>
	</select>
	
	<!-- 유해위험기계기구 배치 데이터 조회 -->
	<select id="selectHmflTgtList" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflTgtList */
		select a.hrm_id
		      ,a.tgt_dt
		      ,a.org_tgt_dt
		      ,to_char(current_timestamp, 'YYYYMMDD') as cur_dt
		  from (select a.hrm_id
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS') + '-3 months', 'YYYYMMDD') as tgt_dt
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS'), 'YYYYMMDD') as org_tgt_dt
				  from (select a.hrm_id
						      ,to_char(to_timestamp(max(a.hrm_chk_dt), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_chk_dt
						  from tb_sh_hrm_sft_chk a
						 group by a.hrm_id
					   ) a
					  ,(select to_char(to_timestamp((select max(c.hrm_chk_dt) as hrm_chk_dt
											           from tb_sh_hrm_sft_chk c
											          where c.hrm_id = b.hrm_id
						       ), 'YYYYMMDDHH24MISS') + make_interval(months => (select case when d.buf_1st_cntn is not null or d.buf_1st_cntn != '' then d.buf_1st_cntn::integer
						                                                                     else 0
						                                                                end as buf_1st_cntn from tb_co_cd d where d.cd_grp_no = 'SH00000005' and d.cd = b.hrm_chk_cyc_cd)), 'YYYY-MM-DD') as hrm_fnl_chk_dt
						      ,b.hrm_id
						  from tb_sh_hrm b
					   ) b
				 where a.hrm_id = b.hrm_id
			   ) a
		 where a.tgt_dt = to_char(current_timestamp, 'YYYYMMDD')
	</select>
	
	<!-- 유해위험기계기구 배치 수신자 조회 -->
	<select id="selectHmflTgtEmpList" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflTgtEmpList */
		select a.hrm_id
		      ,a.tgt_dt
		      ,a.org_tgt_dt
		      ,a.hrm_rspn_usr_id as tgt_usr_id
		      ,(select u.usr_email 
		          from tb_co_user u
		         where u.usr_id = a.hrm_rspn_usr_id
		       ) as usr_email
		      ,to_char(current_timestamp, 'YYYYMMDD') as cur_dt
		  from (select a.hrm_id
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS') + '-3 months', 'YYYYMMDD') as tgt_dt
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS'), 'YYYYMMDD') as org_tgt_dt
				      ,b.hrm_rspn_usr_id
				  from (select a.hrm_id
						      ,to_char(to_timestamp(max(a.hrm_chk_dt), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_chk_dt
						  from tb_sh_hrm_sft_chk a
						 group by a.hrm_id
					   ) a
					  ,(select to_char(to_timestamp((select max(c.hrm_chk_dt) as hrm_chk_dt
											           from tb_sh_hrm_sft_chk c
											          where c.hrm_id = b.hrm_id
						       ), 'YYYYMMDDHH24MISS') + make_interval(months => (select case when d.buf_1st_cntn is not null or d.buf_1st_cntn != '' then d.buf_1st_cntn::integer
						                                                                     else 0
						                                                                end as buf_1st_cntn from tb_co_cd d where d.cd_grp_no = 'SH00000005' and d.cd = b.hrm_chk_cyc_cd)), 'YYYY-MM-DD') as hrm_fnl_chk_dt
						      ,b.hrm_id
						      ,b.hrm_rspn_usr_id
						  from tb_sh_hrm b
					   ) b
				 where a.hrm_id = b.hrm_id
			   ) a
		 where a.tgt_dt = to_char(current_timestamp, 'YYYYMMDD')
		   and a.hrm_id = #{hrm_id}
		 union 
		select a.hrm_id
		      ,a.tgt_dt
		      ,a.org_tgt_dt
		      ,a.hrm_spic_usr_id as tgt_usr_id
		      ,(select u.usr_email 
		          from tb_co_user u
		         where u.usr_id = a.hrm_spic_usr_id
		       ) as usr_email
		      ,to_char(current_timestamp, 'YYYYMMDD') as cur_dt
		  from (select a.hrm_id
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS') + '-3 months', 'YYYYMMDD') as tgt_dt
				      ,to_char(to_timestamp(b.hrm_fnl_chk_dt, 'YYYY-MM-DD HH24:MI:SS.MS'), 'YYYYMMDD') as org_tgt_dt
				      ,b.hrm_spic_usr_id
				  from (select a.hrm_id
						      ,to_char(to_timestamp(max(a.hrm_chk_dt), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_chk_dt
						  from tb_sh_hrm_sft_chk a
						 group by a.hrm_id
					   ) a
					  ,(select to_char(to_timestamp((select max(c.hrm_chk_dt) as hrm_chk_dt
											           from tb_sh_hrm_sft_chk c
											          where c.hrm_id = b.hrm_id
						       ), 'YYYYMMDDHH24MISS') + make_interval(months => (select case when d.buf_1st_cntn is not null or d.buf_1st_cntn != '' then d.buf_1st_cntn::integer
						                                                                     else 0
						                                                                end as buf_1st_cntn from tb_co_cd d where d.cd_grp_no = 'SH00000005' and d.cd = b.hrm_chk_cyc_cd)), 'YYYY-MM-DD') as hrm_fnl_chk_dt
						      ,b.hrm_id
						      ,b.hrm_spic_usr_id
						  from tb_sh_hrm b
					   ) b
				 where a.hrm_id = b.hrm_id
			   ) a
		 where a.tgt_dt = to_char(current_timestamp, 'YYYYMMDD')
		   and a.hrm_id = #{hrm_id}
	</select>
	
	<!-- 유해위험기계기구 관리 상세 조회 -->
	<select id="selectHmflMcnDtlBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflMcnDtlBatch */
		select a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.hrm_id
		      ,a.hrm_type_cd
		      ,fn_get_cd('SH00000004', a.hrm_type_cd, 'NM', #{SESS_LANG}) as hrm_type_nm
		      ,a.hrm_nm
		      ,a.hrm_mgnt_no
		      ,to_char(to_timestamp(a.hrm_istl_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_istl_dt
		      ,a.hrm_mnfr_nm
		      ,a.hrm_asst_no
		      ,a.hrm_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = a.hrm_wkpl_loc_id
		       ) as hrm_wkpl_loc_nm
		      ,a.hrm_dtl_loc_nm
		      ,a.hrm_chk_cyc_cd
		      ,fn_get_cd('SH00000005', a.hrm_chk_cyc_cd, 'NM', #{SESS_LANG}) as hrm_chk_cyc_nm
		      ,a.hrm_rspn_usr_id
		      ,a.hrm_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_rspn_usr_id
			   ) as hrm_rspn_usr_nm
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_spic_usr_id
			   ) as hrm_spic_usr_nm
		      ,a.hrm_spec_txt
		      ,a.hrm_usg_yn
		      ,a.hrm_atfl_no
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		  from tb_sh_hrm a
		 where a.hrm_id = #{hrm_id}
	</select>
	
	<!-- 공사작업메일 대상 데이터 조회 -->
	<select id="selectConOprnPrmsDataBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsDataBatch */
		select a.con_id
		      ,a.wkpl_id
		      ,a.con_rq_usr_id
		      ,(select u.usr_email 
		          from tb_co_user u
		         where u.usr_id = a.con_rq_usr_id
		       ) as usr_email
		      ,a.con_nm
		      ,b.con_dt
		      ,b.con_prms_id
		      ,b.con_req_prst_cd
		  from tb_sh_con_oprn_prms_plan a
		      ,tb_sh_con_oprn_prms_req b
		 where a.con_id = b.con_id 
		   and b.con_req_prst_cd != 'S04'
		   and (b.del_yn = 'N' or b.del_yn is null or b.del_yn = '')
		   and b.con_dt = to_char(current_timestamp, 'YYYYMMDD')
	</select>
	
	<!-- 공사작업허가 기본정보 조회 -->
	<select id="selectConOprnPrmsDtlBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsDtlBatch  */
		select a.con_id
		      ,a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.con_rq_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.con_rq_usr_id
			   ) as con_rq_usr_nm
		      ,to_char(to_timestamp(a.con_bgn_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_bgn_dt
		      ,to_char(to_timestamp(a.con_end_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_end_dt
		      ,a.wekd_con_yn
		      ,a.wknd_con_yn
		      ,a.nght_con_yn
		      ,a.con_rspn_org_cd
		      ,case when #{SESS_LANG} = 'KO' then a.kor_con_rspn_org_nm
		            else a.engl_con_rspn_org_nm
		       end as con_rspn_org_nm
		      ,a.con_nm
		      ,a.ugnc_con_yn
		      ,a.otsr_con_bsen_id
		      ,(select c.otsr_con_bsen_nm
		          from tb_sh_otsr_con_bsen c
		         where c.otsr_con_bsen_id = a.otsr_con_bsen_id
		       ) as otsr_con_bsen_nm
		      ,a.otsr_con_bsen_pric_nm
		      ,a.otsr_con_bsen_pric_tphn
		      ,a.con_txt
		      ,a.oprn_plan_atfl_no
		  from tb_sh_con_oprn_prms_plan a
		 where a.con_id = #{con_id}
	</select>
	
	<!-- 공사작업허가 허가정보 조회 -->
	<select id="selectConOprnPrmsReqDtlBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsReqDtlBatch  */
		select b.con_id
		      ,b.con_prms_id
		      ,to_char(to_timestamp(b.con_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as con_dt
		      ,substring(b.con_bgn_hm,0,3) || ':' || substring(b.con_bgn_hm,3,2) as con_bgn_hm
		      ,substring(b.con_end_hm,0,3) || ':' || substring(b.con_end_hm,3,2) as con_end_hm
		      ,b.wekd_con_yn
		      ,b.wknd_con_yn
		      ,b.nght_con_yn
		      ,b.psm_tgt_yn
		      ,b.con_oprn_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm 
		          from tb_sh_wkpl_loc l
		              ,tb_sh_con_oprn_prms_plan p
		         where p.con_id = b.con_id 
		           and l.wkpl_id = p.wkpl_id
		           and l.wkpl_loc_id = b.con_oprn_wkpl_loc_id
		       ) as con_oprn_wkpl_loc_nm
		      ,b.con_oprn_dtl_loc_nm
		      ,b.con_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_supe_usr_id
			   ) as con_supe_usr_nm
		      ,b.con_sft_rspn_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_sft_rspn_usr_id
			   ) as con_sft_rspn_usr_nm
		      ,b.con_oprn_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = b.con_oprn_supe_usr_id
			   ) as con_oprn_supe_usr_nm
		      ,b.con_oprn_txt
		      ,b.oth_prct_txt
		      ,b.con_req_atfl_no
		      ,b.con_req_prst_cd
		      ,b.con_req_aprv_no   
		  from tb_sh_con_oprn_prms_req b
		 where b.con_prms_id = #{con_prms_id}
	</select>
	
	<!-- 공사작업허가 작업종류 조회 -->
	<select id="selectConOprnPrmsOprnBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprnBatch  */
		select max(a.h_yn) as h_yn
		      ,max(a.g_yn) as g_yn
		      ,max(a.m_yn) as m_yn
		      ,max(a.j_yn) as j_yn
		      ,max(a.u_yn) as u_yn
		      ,max(a.v_yn) as v_yn
		      ,max(a.n_yn) as n_yn
		      ,max(a.con_prms_id) as con_prms_id
		  from (select case when a.con_oprn_type_cd = 'WCD01' then 'Y' else 'N' end as h_yn
				      ,case when a.con_oprn_type_cd = 'WCD02' then 'Y' else 'N' end as g_yn
				      ,case when a.con_oprn_type_cd = 'WCD03' then 'Y' else 'N' end as m_yn
				      ,case when a.con_oprn_type_cd = 'WCD04' then 'Y' else 'N' end as j_yn
				      ,case when a.con_oprn_type_cd = 'WCD05' then 'Y' else 'N' end as u_yn
				      ,case when a.con_oprn_type_cd = 'WCD06' then 'Y' else 'N' end as v_yn
				      ,case when a.con_oprn_type_cd = 'WCD07' then 'Y' else 'N' end as n_yn
				      ,a.con_prms_id
				  from tb_sh_con_oprn_prms_oprn a
				 where a.con_prms_id = #{con_prms_id}
			   ) a
	</select>
	
	<select id="selectUserInfo" parameterType="sqlMap" resultType="sqlMap">
		/* selectUserInfo */
		select 
			 tcu.usr_id
			,tcu.usr_ko_nm 
			,tcu.lang_cd 
			,tcu.usg_yn
			,tcu.del_yn
		from tb_co_user tcu 
		where 1=1 
			and tcu.del_yn  = 'N'
			and tcu.usr_id = #{usr_id}
	</select>
	
	<select id="selectCircMailList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCircMailList */
		select distinct
		       scc.circ_chk_supe_usr_id
		      ,circ_chk_schd_dt
			  ,to_char(now(), 'YYYYMMDD') as real_chk_schd_dt
			  ,to_char(scc.crt_dt , 'YYYYMMDD') as crt_dt
			  ,scc.circ_chk_id 
			  ,scc.wkpl_id 
			  ,fn_get_cd('ST00000002',scc.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
			  ,scc.circ_chk_schd_dt 
			  ,scc.circ_chk_dt 
			  ,scc.circ_chk_hm 
			  ,scc.circ_chk_tgt_id 
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
			  ,scc.circ_chk_tgt_nm 
			  ,scc.circ_chk_cyc_cd 
			  ,scc.circ_chk_wkpl_loc_id 
			  ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
			  ,scc.circ_chk_dtl_loc_nm 
			  ,scc.circ_chk_note_txt 
			  ,scc.circ_chk_prst_cd 
			  ,scc.circ_aprv_no 
			  ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = scc.circ_chk_supe_usr_id) as lang_cd
	          ,case when (select count(*) 
	                        from tb_sh_circ_chk_tgt scct
	                       where scct.circ_chk_tgt_id = scc.circ_chk_tgt_id
	                         and scct.chec_cl_cd = 'CE008') > 0 then 'Y' else 'N' end as gb
		  from tb_sh_circ_chk scc 
		 where 1=1
		   and scc.circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
		   and scc.circ_chk_id in
		  <foreach item="data" collection="keyList"
      		open="(" separator="," close=")">
		   #{data}::text
		  </foreach>
	</select>
	
	<select id="selectJntMailList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntMailList */
		select distinct
		       jnt_chk_supe_usr_id
		      ,wkpl_id 
			  ,fn_get_cd('ST00000002',sjc.wkpl_id,'NM',#{lang_cd}) as wkpl_nm
	          ,jnt_chk_id 
	          ,jnt_chk_schd_dt 
	          ,jnt_chk_dt
	          ,jnt_chk_hm 
	          ,jnt_chk_tgt_id  
			  ,(select case when #{lang_cd} = 'KO' then tcu.usr_ko_nm 
						    when #{lang_cd} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sjc.jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
	          ,jnt_chk_tgt_nm 
	          ,jnt_chk_cyc_cd 
	          ,jnt_chk_wkpl_loc_id 
	          ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = sjc.jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
	          ,jnt_chk_dtl_loc_nm 
	          ,jnt_chk_note_txt 
	          ,jnt_chk_prst_cd 
	          ,jnt_chk_rslt_txt 
	          ,jnt_aprv_no 
	          ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = sjc.jnt_chk_supe_usr_id) as lang_cd
	      from tb_sh_jnt_chk sjc 
	     where 1=1
		   and sjc.jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
		   and sjc.jnt_chk_id in
		  <foreach item="data" collection="keyList"
      		open="(" separator="," close=")">
		   #{data}::text
		  </foreach>
	</select>
	
	<!-- 공사작업허가 저장작업인원 조회 -->
	<select id="selectConOprnPrmsOprrSaveBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectConOprnPrmsOprrSaveBatch  */
		select a.oprr_id
		      ,(select r.oprr_nm
		          from tb_sh_otsr_con_oprr r
		         where r.oprr_id = a.oprr_id
		       ) as oprr_nm
		      ,a.con_prms_id
		      ,(select b.oprn_cl_cd
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_cd
		      ,(select fn_get_cd('SH00000010', b.oprn_cl_cd, 'NM', #{SESS_LANG}) as oprn_cl_nm
		          from tb_sh_otsr_con_oprr b
		         where b.oprr_id = a.oprr_id 
		       ) as oprn_cl_nm
		  from tb_sh_con_oprn_prms_oprr a
		 where a.con_prms_id = #{con_prms_id}
		 order by oprr_nm
	</select>
	
	<!-- 접속이력 조회 -->
	<select id="selectExeHistBatch" parameterType="sqlMap" resultType="sqlMap">
		/* selectExeHistBatch  */
		select a.ip_addr           
		      ,case when a.server_ip_addr is null then '' else a.server_ip_addr end as server_ip_addr
		      ,a.usr_id            
		      ,a.exe_dt            
		      ,b.api_expl          
		      ,b.api_url           
		      ,'' as return_url    
		      ,case when mthd_type_cd = 'GET' then '조회'
		            when mthd_type_cd = 'POST' then '저장'
		            when mthd_type_cd = 'PUT' then '수정'
		            when mthd_type_cd = 'DELETE' then '삭제'
		       end as mthd_type_nm
		      ,case when a.input_param is null then '' else a.input_param end as input_param
		      ,a.result_cnt::varchar as result_cnt
		      ,b.privacy_txt as privacy_item
		      ,a.result_item
		  from tb_co_api_exe_result_log a
		      ,tb_co_api b
		 where a.api_no = b.api_no
		   and b.privacy_yn = 'Y'
		   and substring(a.exe_dt,1,8) = to_char(now()-'1 day'::interval, 'YYYYMMDD')
		 order by a.exe_dt
	</select>
	
	<delete id="deleteHmexRsltDataT" parameterType="sqlMap">
        /* deleteHmexRsltDataT */
        delete from tb_sh_hmex_rslt a
		 where exists (select b.*
		                 from (select b.hmex_year
								     ,b.hmex_tgt_usr_id
								     ,b.hmex_sn
								     ,b.wkpl_id
								     ,(cast(to_char(now(), 'YYYY') as integer) - cast(b.hmex_year as integer)) as year_val
								 from tb_sh_hmex_rslt b
								where exists (select 1
								  				from tb_sh_wkpl w
								   			   where w.wkpl_id = b.wkpl_id 
								   				 and w.wkpl_main_bsns_cd in ('SG02', 'SG06', 'SG07')
								             )
							  ) b
						where b.year_val >= 30
						  and b.hmex_year = a.hmex_year 
						  and b.hmex_tgt_usr_id = a.hmex_tgt_usr_id
						  and b.hmex_sn = a.hmex_sn
						  and b.wkpl_id = a.wkpl_id
					  )
    </delete>
    
    <delete id="deleteHmexTrgpDataT" parameterType="sqlMap">
        /* deleteHmexTrgpDataT */
        delete from tb_sh_hmex_trgp a
		 where exists (select b.*
		                 from (select b.hmex_year
								     ,b.hmex_tgt_usr_id
								     ,b.hmex_sn
								     ,b.wkpl_id
								     ,(cast(to_char(now(), 'YYYY') as integer) - cast(b.hmex_year as integer)) as year_val
								 from tb_sh_hmex_trgp b
								where exists (select 1
								  				from tb_sh_wkpl w
								   			   where w.wkpl_id = b.wkpl_id 
								   				 and w.wkpl_main_bsns_cd in ('SG02', 'SG06', 'SG07')
								             )
							  ) b
						where b.year_val >= 30
						  and b.hmex_year = a.hmex_year 
						  and b.hmex_tgt_usr_id = a.hmex_tgt_usr_id
						  and b.hmex_sn = a.hmex_sn
						  and b.wkpl_id = a.wkpl_id
					  )
    </delete>
    
    <delete id="deleteHmexRsltDataF" parameterType="sqlMap">
        /* deleteHmexRsltDataF */
        delete from tb_sh_hmex_rslt a
		 where exists (select b.*
		                 from (select b.hmex_year
								     ,b.hmex_tgt_usr_id
								     ,b.hmex_sn
								     ,b.wkpl_id
								     ,(cast(to_char(now(), 'YYYY') as integer) - cast(b.hmex_year as integer)) as year_val
								 from tb_sh_hmex_rslt b
								where exists (select 1
								  				from tb_sh_wkpl w
								   			   where w.wkpl_id = b.wkpl_id 
								   				 and w.wkpl_main_bsns_cd not in ('SG02', 'SG06', 'SG07')
								             )
							  ) b
						where b.year_val >= 5
						  and b.hmex_year = a.hmex_year 
						  and b.hmex_tgt_usr_id = a.hmex_tgt_usr_id
						  and b.hmex_sn = a.hmex_sn
						  and b.wkpl_id = a.wkpl_id
					  )
    </delete>
    
    <delete id="deleteHmexTrgpDataF" parameterType="sqlMap">
        /* deleteHmexTrgpDataF */
        delete from tb_sh_hmex_trgp a
		 where exists (select b.*
		                 from (select b.hmex_year
								     ,b.hmex_tgt_usr_id
								     ,b.hmex_sn
								     ,b.wkpl_id
								     ,(cast(to_char(now(), 'YYYY') as integer) - cast(b.hmex_year as integer)) as year_val
								 from tb_sh_hmex_trgp b
								where exists (select 1
								  				from tb_sh_wkpl w
								   			   where w.wkpl_id = b.wkpl_id 
								   				 and w.wkpl_main_bsns_cd not in ('SG02', 'SG06', 'SG07')
								             )
							  ) b
						where b.year_val >= 5
						  and b.hmex_year = a.hmex_year 
						  and b.hmex_tgt_usr_id = a.hmex_tgt_usr_id
						  and b.hmex_sn = a.hmex_sn
						  and b.wkpl_id = a.wkpl_id
					  )
    </delete>
	
	<!-- 사고 보고 및 조사 임시저장 조회 -->
	<select id="selectAcdtTempSave" parameterType="sqlMap" resultType="sqlMap">
		/* selectAcdtTempSave */
		select
			 acdt_id /* 사고번호 */
			,crt_dt	/* 최초생성시각 */ 
			,crt_usr_id	/* 최초생성ID */
			,upt_usr_id	/* 최종변경ID */
			,upt_dt	/* 최종변경시각 */
			,del_yn	/* 삭제여부 */
			,fn_get_user(upt_usr_id, 'NM') as crt_usr_id_nm	/* 사원 관련 정보 이름 조회 */
			,fn_get_user(upt_usr_id, 'DD') as fscr_dpth_id	/* 사원 부서장 사번 조회 */
			,temp_save_yn	/* 임시저장여부 */
			,temp_save_dttm	/* 임시저장일시 */
			,temp_save_dttm + '1 week' 
		from
			tb_sh_acdt		
		where 
			acdt_prst_cd = '0'
			and temp_save_yn = 'Y' 
			and del_yn = 'N' 
			and now() <![CDATA[ > ]]> temp_save_dttm + '1 week'			
		order by crt_dt desc
	</select>
	
	<!-- 사고 보고 및 조사 임시저장 수정처리 -->
	<update id="updateAcdtTempSave" parameterType="sqlMap">
        /* updateAcdtTempSave */
        update tb_sh_acdt 
		   set del_yn = 'Y'	/* 삭제여부 */
		   	  ,upt_usr_id = 'BATCH_SYSTEM'
		      ,upt_dt	= statement_timestamp()	/* 최종변경시각 */
		 where acdt_id = #{acdt_id}
    </update>
	
	<!-- 사고 보고 및 조사 조사보고완료 요청데이터 조회 -->
	<select id="selectAcdtInvestReportComple" parameterType="sqlMap" resultType="sqlMap">
		/* selectAcdtInvestReportComple */
		select
			 acdt_id /* 사고번호 */
			,crt_dt	/* 최초생성시각 */ 
			,crt_usr_id	/* 최초생성ID */
			,upt_usr_id	/* 최종변경ID */
			,upt_dt	/* 최종변경시각 */
			,del_yn	/* 삭제여부 */
			,fn_get_user(upt_usr_id, 'NM') as crt_usr_id_nm	/* 사원 관련 정보 이름 조회 */
			,fn_get_user(upt_usr_id, 'DD') as fscr_dpth_id	/* 사원 부서장 사번 조회 */
			,temp_save_yn	/* 임시저장여부 */
			,temp_save_dttm	/* 임시저장일시 */
			,acdt_occr_tsp	/* 사고발생시각 */
			,cast(acdt_occr_tsp as date) as acdt_occr_tsp_dt /* 사고발생시각일자 */
			,to_date(to_char(acdt_occr_tsp,'yyyyMMdd'),'yyyyMMdd') + 14 as acdt_occr_tsp_14_plus /* 사고발생일자 + 14일 */
			,to_date(to_char(acdt_occr_tsp,'yyyyMMdd'),'yyyyMMdd') + 17 as acdt_occr_tsp_17_plus /* 사고발생일자 + 17일 */
			,extract(day from now() - to_date(to_char(acdt_occr_tsp,'yyyyMMdd'),'yyyyMMdd')) as dayinterval	/* 사고발생일자 차이 */
		from
			tb_sh_acdt
		where 
			acdt_prst_cd = '1'
			and temp_save_yn = 'N' 
			and del_yn = 'N' 
			and now() > to_date(to_char(acdt_occr_tsp,'yyyymmdd'),'yyyyMMdd') + 14
			and to_date(to_char(acdt_occr_tsp,'yyyymmdd'),'yyyyMMdd') > '20221101'
		order by crt_dt desc
	</select>
	
	<!-- 사고 보고 및 조사 조치지연 여부 조회 -->
	<select id="selectAcdtDelayList" parameterType="sqlMap" resultType="sqlMap">
		/* selectAcdtDelayList */
		select
			DISTINCT(sa.acdt_id),
			saap.acdt_actn_tmlm_dt
		from
			tb_sh_acdt_actn_plan saap,
			tb_sh_acdt sa
		where 
			saap.acdt_id = sa.acdt_id
			and acdt_actn_tmlm_dt <![CDATA[<]]> to_char(now(), 'YYYYMMDD')
			and sa.acdt_prst_cd = '5'
	</select>
	
	<!-- 사고 보고 및 조사 조치지연 상태 업데이트 -->
	<update id="updateAcdtDelayList" parameterType="sqlMap">
        /* updateAcdtDelayList */
	    update tb_sh_acdt 
		   set acdt_prst_cd = '6'
		   	  ,upt_usr_id = 'BATCH_SYSTEM'
		      ,upt_dt	= statement_timestamp()	/* 최종변경시각 */
		 where acdt_id = #{acdt_id}
    </update>
    
	<update id="updateWkplTrn" parameterType="sqlMap">
        /* updateWkplTrn */
	    update tb_sh_wkpl_elc
		   set trn_fcst_cert_reg_yn ='N'
		   	  ,upt_usr_id = 'BATCH_SYSTEM'
		      ,upt_dt	= statement_timestamp()	/* 최종변경시각 */
		 where trn_expr_dt <![CDATA[<]]> to_char(now(), 'YYYYMMDD')
		   and mand_tlgl_trn_yn = 'Y'
    </update>
	
</mapper>