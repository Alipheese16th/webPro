<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.sh.hmflmcn.mapper.HmflMcnMapper">

	<!-- 유해위험기계기구 관리 조회 -->
	<select id="selectHmflMcnList" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflMcnList  */
		select a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(a.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,a.hrm_id
		      ,a.hrm_type_cd
		      ,fn_get_cd('SH00000004', a.hrm_type_cd, 'NM', #{SESS_LANG}) as hrm_type_nm
		      ,a.hrm_nm
		      ,a.hrm_mgnt_no
		      ,to_char(to_timestamp(a.hrm_istl_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_istl_dt
		      ,a.hrm_mnfr_nm
		      ,a.hrm_asst_no
		      ,a.hrm_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc l
		         where l.wkpl_id = a.wkpl_id
		           and l.wkpl_loc_id = a.hrm_wkpl_loc_id
		       ) as hrm_wkpl_loc_nm
		      ,a.hrm_dtl_loc_nm
		      ,a.hrm_chk_cyc_cd
		      ,a.hrm_rspn_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_rspn_usr_id
			   ) as hrm_rspn_usr_nm
		      ,a.hrm_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_spic_usr_id
			   ) as hrm_spic_usr_nm
		      ,a.hrm_spec_txt
		      ,a.hrm_usg_yn
		      ,a.hrm_atfl_no
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
		      ,(select to_char(to_timestamp(max(c.hrm_chk_dt), 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_chk_dt
		          from tb_sh_hrm_sft_chk c
		         where c.hrm_id = a.hrm_id
		       ) as hrm_chk_dt
		      ,to_char(to_timestamp((select max(c.hrm_chk_dt) as hrm_chk_dt
							           from tb_sh_hrm_sft_chk c
							          where c.hrm_id = a.hrm_id
		       ), 'YYYYMMDDHH24MISS') + make_interval(months => (select case when d.buf_1st_cntn is not null or d.buf_1st_cntn != '' then d.buf_1st_cntn::integer
		                                                                     else 0
		                                                                end as buf_1st_cntn from tb_co_cd d where d.cd_grp_no = 'SH00000005' and d.cd = a.hrm_chk_cyc_cd)), 'YYYY-MM-DD') as hrm_fnl_chk_dt
		  from tb_sh_hrm a
		 <where>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = a.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='wkpl_id != null and wkpl_id != ""'>
		   and a.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='hrm_type_cd != null and hrm_type_cd != ""'>
		   and a.hrm_type_cd = #{hrm_type_cd}
		 </if>
		 <if test='hrm_wkpl_loc_id != null and hrm_wkpl_loc_id != ""'>
		   and a.hrm_wkpl_loc_id = #{hrm_wkpl_loc_id}
		 </if>
		 <if test='hrm_nm != null and hrm_nm != ""'>
		   and a.hrm_nm like concat('%', rtrim(ltrim(#{hrm_nm})), '%')
		 </if>
		 <if test='usg_yn != null and usg_yn != ""'>
		   and a.hrm_usg_yn = #{usg_yn}
		 </if>
		 <if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
		   and (exists (select 1 
		   				  from tb_sh_hrm_sft_chk b
		   				 where b.hrm_id = a.hrm_id
		   				   and (b.hrm_chk_dt between replace(#{sDate},'-','') and replace(#{eDate},'-','') or b.hrm_chk_dt is null or b.hrm_chk_dt = ''))
		   		or
		   		not exists (select 1
		   		              from tb_sh_hrm_sft_chk b
		   		             where b.hrm_id = a.hrm_id
		   		           )
		       )
		 </if>
		 </where>
	</select>
	
	<!-- 유해위험기계기구 관리 상세 조회 -->
	<select id="selectHmflMcnDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflMcnDtl */
		select a.wkpl_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.hrm_id
		      ,a.hrm_type_cd
		      ,fn_get_cd('SH00000004', a.hrm_type_cd, 'NM', #{SESS_LANG}) as hrm_type_nm
		      ,a.hrm_nm
		      ,a.hrm_mgnt_no
		      ,to_char(to_timestamp(a.hrm_istl_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_istl_dt
		      ,a.hrm_mnfr_nm
		      ,a.hrm_asst_no
		      ,a.hrm_wkpl_loc_id
		      ,(select l.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc l
		         where l.wkpl_loc_id = a.hrm_wkpl_loc_id
		       ) as hrm_wkpl_loc_nm
		      ,a.hrm_dtl_loc_nm
		      ,a.hrm_chk_cyc_cd
		      ,fn_get_cd('SH00000005', a.hrm_chk_cyc_cd, 'NM', #{SESS_LANG}) as hrm_chk_cyc_nm
		      ,a.hrm_rspn_usr_id
		      ,a.hrm_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_rspn_usr_id
			   ) as hrm_rspn_usr_nm
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.hrm_spic_usr_id
			   ) as hrm_spic_usr_nm
		      ,a.hrm_spec_txt
		      ,a.hrm_usg_yn
		      ,a.hrm_atfl_no
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		  from tb_sh_hrm a
		 where a.hrm_id = #{hrm_id}
	</select>
	
	<!-- 안전검검 목록 조회 -->
	<select id="selectHmflMcnChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflMcnChkList */
		select 'Y' as chk_gb
		      ,a.hrm_id
		      ,to_char(to_timestamp(a.hrm_chk_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_chk_dt
		      ,a.hrm_chk_txt
		      ,a.hrm_chk_rslt_cd
		      ,fn_get_cd('SH00000006', a.hrm_chk_rslt_cd, 'NM', #{SESS_LANG}) as hrm_chk_rslt_nm
		      ,a.hrm_chk_atfl_no
		      ,(select count(1) as cnt
				  from tb_co_atfl e
				 where e.atfl_no = a.hrm_chk_atfl_no
			   ) as hrm_chk_atfl_cnt
		  from tb_sh_hrm_sft_chk a
		 where a.hrm_id = #{hrm_id}
	</select>
	
	<!-- 안전검검 중복 조회 -->
	<select id="selectHmflMcnChkDupChk" parameterType="sqlMap" resultType="string">
		/* selectHmflMcnChkDupChk */
		select case when count(1) > 0 then 'N' else 'Y' end as pass_yn
		  from tb_sh_hrm_sft_chk a
		 where a.hrm_id = #{hrm_id}
		   and a.hrm_chk_dt = #{hrm_chk_dt}
	</select>
	
	<!-- 사업장 콤보 조회 -->
	<select id="selectHmflMcnWkplCombo" parameterType="sqlMap" resultType="sqlMap">
		/* selectHmflMcnWkplCombo */
		select a.wkpl_id as cd
		      ,a.wkpl_nm as cd_nm
		  from tb_sh_wkpl a
		 where a.del_yn = 'N'
	</select>
	
	<!-- 키 채번 -->
	<select id="selectHmflMcnkey" parameterType="sqlMap" resultType="string">
		/* selectHmflMcnkey */
		select 'HRM_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(hrm_id,14) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_hrm
	</select>
	
	<!-- 유해위험기계기구 등록 -->
	<insert id="insertHmflMcn" parameterType="sqlMap">
        /* insertHmflMcn */
        with upsert as (
		update tb_sh_hrm
		   set hrm_type_cd    	= #{hrm_type_cd}
		      ,hrm_nm    			= #{hrm_nm}
		      ,hrm_mgnt_no    	= #{hrm_mgnt_no}
		      ,hrm_istl_dt          = #{hrm_istl_dt}
		      ,hrm_mnfr_nm			= #{hrm_mnfr_nm}
		      ,hrm_asst_no		= #{hrm_asst_no}
		      ,hrm_wkpl_loc_id	= #{hrm_wkpl_loc_id}
		      ,hrm_dtl_loc_nm		= #{hrm_dtl_loc_nm}
		      ,hrm_chk_cyc_cd	= #{hrm_chk_cyc_cd}
		      ,hrm_rspn_usr_id		= #{hrm_rspn_usr_id}
		      ,hrm_spic_usr_id		= #{hrm_spic_usr_id}
		      ,hrm_spec_txt			= #{hrm_spec_txt}
		      ,hrm_usg_yn			= #{hrm_usg_yn}
		      ,hrm_atfl_no 	= case when #{hrm_atfl_no}::text  = '' then null 
							   			   else #{hrm_atfl_no}::INTEGER 
					    	 		   end
		      ,upt_usr_id       		= #{username}
		      ,upt_dt            	= current_timestamp
		 where hrm_id = #{hrm_id} RETURNING *
		)
        insert into tb_sh_hrm (
        	   wkpl_id
			  ,hrm_id
			  ,hrm_type_cd
			  ,hrm_nm
			  ,hrm_mgnt_no
			  ,hrm_istl_dt
			  ,hrm_mnfr_nm
			  ,hrm_asst_no
			  ,hrm_wkpl_loc_id
			  ,hrm_dtl_loc_nm
			  ,hrm_chk_cyc_cd
			  ,hrm_rspn_usr_id
			  ,hrm_spic_usr_id
			  ,hrm_spec_txt
			  ,hrm_usg_yn
			  ,hrm_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{wkpl_id}
		      ,#{hrm_id}
	 		  ,#{hrm_type_cd}
	 		  ,#{hrm_nm}
			  ,#{hrm_mgnt_no}
			  ,#{hrm_istl_dt}
			  ,#{hrm_mnfr_nm}
			  ,#{hrm_asst_no}
			  ,#{hrm_wkpl_loc_id}
			  ,#{hrm_dtl_loc_nm}
			  ,#{hrm_chk_cyc_cd}
			  ,#{hrm_rspn_usr_id}
			  ,#{hrm_spic_usr_id}
			  ,#{hrm_spec_txt}
			  ,#{hrm_usg_yn}
			  ,case when #{hrm_atfl_no}::text  = '' then null 
	   			    else #{hrm_atfl_no}::INTEGER 
   	 		    end
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 안전점검 저장 -->
    <insert id="insertHmflMcnDtlChkInfo" parameterType="sqlMap">
        /* insertHmflMcnDtlChkInfo */
        with upsert as (
		update tb_sh_hrm_sft_chk
		   set hrm_chk_txt    				= #{hrm_chk_txt}
		      ,hrm_chk_rslt_cd    		= #{hrm_chk_rslt_cd}
		      ,hrm_chk_atfl_no 		= case when #{hrm_chk_atfl_no}::text  = '' then null 
									   			   else #{hrm_chk_atfl_no}::INTEGER 
							    	 		   end
		      ,upt_usr_id       				= #{username}
		      ,upt_dt            			= current_timestamp
		 where hrm_id = #{hrm_id}
		   and hrm_chk_dt = #{hrm_chk_dt} RETURNING *
		)
		insert into tb_sh_hrm_sft_chk (
			   hrm_id
			  ,hrm_chk_dt
			  ,hrm_chk_txt
			  ,hrm_chk_rslt_cd
			  ,hrm_chk_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{hrm_id}
		      ,#{hrm_chk_dt}
		      ,#{hrm_chk_txt}
		      ,#{hrm_chk_rslt_cd}
		      ,case when #{hrm_chk_atfl_no}::text  = '' then null 
	   			    else #{hrm_chk_atfl_no}::INTEGER 
   	 		    end
		      ,#{username}
		      ,current_timestamp
		      ,#{username}
		      ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 안전점검 목록 저장 -->
    <insert id="insertHmflMcnDtlChkListInfo" parameterType="sqlMap">
        /* insertHmflMcnDtlChkListInfo */
        insert into tb_sh_hrm_sft_chk (
        	   hrm_id
			  ,hrm_chk_dt
			  ,hrm_chk_rslt_cd
			  ,hrm_chk_txt
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		) values (
	 		  #{hrm_id}
	 		 ,#{hrm_chk_dt}
	 		 ,'R01'
	 		 ,(select hrm_nm || ' 점검완료' as hrm_nm
	 		     from tb_sh_hrm
	 		    where hrm_id = #{hrm_id}
	 		  )
			 ,#{username}
		     ,current_timestamp
		     ,#{username}
		     ,current_timestamp
		)
    </insert>
        
    <!-- 안전점검 삭제 -->
    <delete id="deleteHmflMcnDtlChkInfo" parameterType="sqlMap">
        /* deleteHmflMcnDtlChkInfo */
        delete 
          from tb_sh_hrm_sft_chk
		 where hrm_id = #{hrm_id}
		   and hrm_chk_dt = #{hrm_chk_dt}
    </delete>
    
    <!-- 안전점검 결과 관리 조회 -->
	<select id="selectSftInspRsltList" parameterType="sqlMap" resultType="sqlMap">
		/* selectSftInspRsltList  */
		select a.hrm_sfip_no 
		      ,a.wkpl_id 
		      ,(select fn_get_cd('CO00000009', b.cmpy_cd, 'NM', #{SESS_LANG}) as cmpy_nm
		          from tb_sh_wkpl b
		         where b.wkpl_id = a.wkpl_id 
		       ) as cmpy_nm
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.hrm_sfip_orga_nm
		      ,a.hrm_sfip_nm
		      ,a.hrm_sfip_rslt
		      ,to_char(to_timestamp(a.hrm_sfip_bgn_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ~ ' || to_char(to_timestamp(a.hrm_sfip_end_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_sfip_dt
		      ,a.hrm_sfip_txt
		      ,to_char(a.upt_dt, 'YYYY-MM-DD') as upt_dt
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
			  ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
		  from tb_sh_hrm_sfip_rslt a
		 <where>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = a.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='wkpl_id != null and wkpl_id != ""'>
		   and a.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
		 <![CDATA[
		   and ((a.hrm_sfip_bgn_dt >= replace(#{sDate},'-','') and a.hrm_sfip_bgn_dt <= replace(#{eDate},'-','')) or (a.hrm_sfip_end_dt >= replace(#{sDate},'-','') and a.hrm_sfip_end_dt <= replace(#{eDate},'-','')))
		 ]]>
		 </if>
		 </where>
	</select>
	
	<!-- 안전검사 결과 상세 조회 -->
	<select id="selectSftInspRsltDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectSftInspRsltDtl */
		select a.wkpl_id
		      ,a.hrm_sfip_no
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.hrm_sfip_orga_nm
		      ,a.hrm_sfip_nm
		      ,to_char(to_timestamp(a.hrm_sfip_bgn_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_sfip_bgn_dt
		      ,to_char(to_timestamp(a.hrm_sfip_end_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as hrm_sfip_end_dt
		      ,'' as hrm_sfip_bgn_dt_range
		      ,a.hrm_sfip_txt
		      ,a.hrm_sfip_atfl_no
		      ,a.hrm_sfip_rslt
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		  from tb_sh_hrm_sfip_rslt a
		 where a.hrm_sfip_no = #{hrm_sfip_no}
	</select>
	
	<!-- 안전검사 결과 등록 -->
	<insert id="insertSftInspRsltDtl" parameterType="sqlMap">
        /* insertSftInspRsltDtl */
        with upsert as (
		update tb_sh_hrm_sfip_rslt
		   set hrm_sfip_orga_nm    	 = #{hrm_sfip_orga_nm}
		      ,hrm_sfip_nm    		 = #{hrm_sfip_nm}
		      ,hrm_sfip_bgn_dt     	 = #{hrm_sfip_bgn_dt}
		      ,hrm_sfip_end_dt       = #{hrm_sfip_end_dt}
		      ,hrm_sfip_txt			 = #{hrm_sfip_txt}
		      ,hrm_sfip_rslt         = #{hrm_sfip_rslt}
		      ,hrm_sfip_atfl_no = case when #{hrm_sfip_atfl_no}::text  = '' then null 
							   			    else #{hrm_sfip_atfl_no}::INTEGER 
					    	 		    end
		      ,upt_usr_id       		 = #{username}
		      ,upt_dt            	 = current_timestamp
		 where hrm_sfip_no = #{hrm_sfip_no} RETURNING *
		)
        insert into tb_sh_hrm_sfip_rslt (
        	   wkpl_id
			  ,hrm_sfip_no
			  ,hrm_sfip_orga_nm
			  ,hrm_sfip_nm
			  ,hrm_sfip_bgn_dt
			  ,hrm_sfip_end_dt
			  ,hrm_sfip_txt
			  ,hrm_sfip_rslt
			  ,hrm_sfip_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{wkpl_id}
		      ,#{hrm_sfip_no}
	 		  ,#{hrm_sfip_orga_nm}
	 		  ,#{hrm_sfip_nm}
			  ,#{hrm_sfip_bgn_dt}
			  ,#{hrm_sfip_end_dt}
			  ,#{hrm_sfip_txt}
			  ,#{hrm_sfip_rslt}
			  ,case when #{hrm_sfip_atfl_no}::text  = '' then null 
	   			    else #{hrm_sfip_atfl_no}::INTEGER 
   	 		    end
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 안전검사 키 채번 -->
	<select id="selectSftInspRsltkey" parameterType="sqlMap" resultType="string">
		/* selectSftInspRsltkey */
		select 'SFIP_' || to_char(now(), 'YYYYMMDD') || '_' || LPAD((coalesce(max(substring(hrm_sfip_no,15) ::integer),0) + 1)::text, 4, '0') as key
		  from tb_sh_hrm_sfip_rslt
	</select>
	       
</mapper>