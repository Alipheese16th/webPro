<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.ch.mro.mapper.mroPchsMapper">

	<select id="selectMroList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroList */
		select
			tcmp.mro_pchs_no
			,tcmp.wkpl_id 
			,fn_get_cd('CO00000006',tcmp.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm
			,tcmp.mro_pchs_no
			,(select tcmpm.mtrl_no from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N'  limit 1 )
			,(select count(tcmpm.mtrl_no) from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N')
			,case  when (select count(tcmpm.mtrl_no) from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N') <![CDATA[>]]> 1 then fn_get_cd('CH00000006',(select tcmpm.macl_cd from tb_ch_mro_pchs_mtrl  tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N' limit 1  ),'NM',#{SESS_LANG}) 
																																			|| ' 외 '
																																			||(select count(tcmpm.mtrl_no)-1 from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N') 
																																			|| '건'
				   else fn_get_cd('CH00000006',(select tcmpm.macl_cd from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N'  limit 1 ),'NM',#{SESS_LANG}) 
			end  as macl_cd_nm
		,case  when (select count(tcmpm.mtrl_no) from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N') <![CDATA[>]]> 1 then 
																																		case when #{SESS_LANG} = 'KO' then (select mtrl_ko_nm from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N' limit 1  )
																																									|| ' 외 '
																																									||(select count(tcmpm.mtrl_no)-1 from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N') 
																																									|| '건' 
																																			else  (select mtrl_ko_nm from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N' limit 1 )
								  																													|| ' 외 '
																																					||(select count(tcmpm.mtrl_no)-1 from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N') 
																																					|| '건' 
																																		end
				else 
					case when #{SESS_LANG} = 'KO' then (select mtrl_ko_nm from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N' limit 1  )
					      else  (select mtrl_ko_nm from tb_ch_mro_pchs_mtrl tcmpm where tcmp.mro_pchs_no  = tcmpm.mro_pchs_no and tcmpm.del_yn = 'N'  limit 1 )
					end
			end  as mtrl_nm	
			,fn_get_time(tcmp.upt_dt, #{SESS_TIME_ZONE},'DA', '-') as upt_dt
		    ,fn_get_time(tcmp.upt_dt, #{SESS_TIME_ZONE},'TS', ':') as upt_tm
			,case when tcmp.aprv_crt_dt ='' or tcmp.aprv_crt_dt is null then ''
				  else fn_get_time(tcmp.aprv_crt_dt, #{SESS_TIME_ZONE},'DA', '-')
			 end as aprv_crt_dt
			,case when #{SESS_LANG} = 'KO' then (select tce.usr_ko_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
				  when #{SESS_LANG} = 'EN' then (select tce.usr_en_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
				  else (select tce.usr_zh_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
			end as upt_usr_nm
			,case when #{SESS_LANG} = 'KO' then (select tcd.dept_ko_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) 
				  						   else (select tcd.dept_en_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) 
			 end as upt_dept_nm
			,tcmp.pchs_prog_stt_cd 
			,fn_get_cd('CH00000015',tcmp.pchs_prog_stt_cd,'NM',#{SESS_LANG}) as pchs_prog_stt_cd_nm
			,tcmp.multi_yn
			,tcmp.pchs_dept_cd
			,tcmp.pchs_usr_id
		from 	tb_ch_mro_pchs tcmp
		where 1=1
			and tcmp.del_yn = 'N'
		<if test='wkpl_id != null and wkpl_id != ""' >
			and tcmp.wkpl_id  = #{wkpl_id}
		</if>
		<if test='pchs_prog_stt_cd != null and pchs_prog_stt_cd != ""'>
			and tcmp.pchs_prog_stt_cd  = #{pchs_prog_stt_cd}
		</if>
		<if test='srch_mro_pchs_no != null and srch_mro_pchs_no != ""'>
			and tcmp.mro_pchs_no like concat('%', trim(#{srch_mro_pchs_no}), '%')
		</if>
		<if test='multi_yn != null and multi_yn != ""'>
			and tcmp.multi_yn = #{multi_yn}
		</if>
		<if test='dept_nm != null and dept_nm != ""' >
			and (  
				   (select tcd.dept_ko_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) like concat('%', trim(#{dept_nm}), '%')
				or (select tcd.dept_en_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) like concat('%', trim(#{dept_nm}), '%')
				)
		    
		</if>
		<if test='usr_nm != null and usr_nm != ""' >
			and ((select tce.usr_ko_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%')
				or (select tce.usr_en_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%')
				or (select tce.usr_zh_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%'))
		</if>
		<if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
        <![CDATA[
			and (to_timestamp(tcmp.upt_dt,  'YYYYMMDDHH24MIss') >= #{sDate}::timestamp and to_timestamp(tcmp.upt_dt,  'YYYYMMDDHH24MIss') <= concat(#{eDate}, ' 23:59:59')::timestamp)
		]]>
        </if>	
			and EXISTS (
		    SELECT * FROM tb_ch_mro_pchs_mtrl WHERE tb_ch_mro_pchs_mtrl.mro_pchs_no = tcmp.mro_pchs_no 
		    						<if test='macl_cd != null and macl_cd != ""'>
		    						and  tb_ch_mro_pchs_mtrl.macl_cd  = #{macl_cd}
		    						</if>
		    						<if test='mtrl_nm != null and mtrl_nm != ""'>
		    						and tb_ch_mro_pchs_mtrl.mtrl_ko_nm like concat('%', trim(#{mtrl_nm}), '%')
		    						</if>
		    						and tb_ch_mro_pchs_mtrl.del_yn = 'N'
		    )
		    order by tcmp.upt_dt desc
	</select>
	
	<select id="selectMroPkgList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPkgList */
		select
			tcmp.mro_pchs_no
			,tcmp.wkpl_id 
			,fn_get_cd('CO00000006',tcmp.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm
			,tcmp.mro_pchs_no
			,fn_get_cd('CH00000006',tcmpm.macl_cd,'NM',#{SESS_LANG})  as macl_cd_nm
			,case when (tcmpm.mtrl_no = 'Z') then '-' else tcmpm.mtrl_no end mtrl_no
			,tcmpm.mtrl_ko_nm as mtrl_nm
			,tcmpm.pchs_unit_cd
			,case when tcmpm.pchs_unit_cd = '6' then tcmpm.pchs_unit_nm
			            						else fn_get_cd('CH00000026',tcmpm.pchs_unit_cd,'NM','KO') 
			 end as pchs_unit_nm
			,coalesce(tcm.pchs_req_unit_cd,tcmpm.pchs_unit_cd) as pchs_req_unit_cd
			,case when tcm.pchs_req_unit_cd = '6' then tcm.pchs_req_unit_nm
                                                else fn_get_cd('CH00000026',coalesce(tcm.pchs_req_unit_cd,tcmpm.pchs_unit_cd),'NM','KO')
             end as pchs_req_unit_nm
			,RTRIM(RTRIM(tcmpm.pchs_unit_weght::text,'0'),'.') as pchs_unit_weght
			,RTRIM(RTRIM(coalesce(tcm.pchs_req_unit_weght::text,tcmpm.pchs_unit_weght::text),'0'),'.') as pchs_req_unit_weght
			,tcmpm.pchs_qty::integer
			,tcmpm.vndr_nm
			,tcmpm.impt_yn
			,tcmp.pchs_prog_stt_cd 
			,fn_get_cd('CH00000015',tcmp.pchs_prog_stt_cd,'NM',#{SESS_LANG}) as pchs_prog_stt_cd_nm
			,tcmp.multi_yn
			,tcmp.pchs_dept_cd
			,tcmp.pchs_usr_id
		from tb_ch_mro_pchs tcmp
   left join tb_ch_mro_pchs_mtrl tcmpm 
		  on tcmp.mro_pchs_no = tcmpm.mro_pchs_no
   left join tb_co_mtrl tcm
          on tcmpm.mtrl_no = tcm.mtrl_no and tcm.del_yn = 'N'
	   where 1 = 1
		 and tcmpm.del_yn ='N'
		<if test='wkpl_id != null and wkpl_id != ""' >
			and tcmp.wkpl_id  = #{wkpl_id}
		</if>
		<if test='pchs_prog_stt_cd != null and pchs_prog_stt_cd != ""'>
			and tcmp.pchs_prog_stt_cd  = #{pchs_prog_stt_cd}
		</if>
		<if test='srch_mro_pchs_no != null and srch_mro_pchs_no != ""'>
			and tcmp.mro_pchs_no like concat('%', trim(#{srch_mro_pchs_no}), '%')
		</if>
		<if test='multi_yn != null and multi_yn != ""'>
			and tcmp.multi_yn = #{multi_yn}
		</if>
		<if test='dept_nm != null and dept_nm != ""' >
			and (  
				   (select tcd.dept_ko_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) like concat('%', trim(#{dept_nm}), '%')
				or (select tcd.dept_en_nm from tb_co_dept tcd where tcd.dept_cd = tcmp.pchs_dept_cd) like concat('%', trim(#{dept_nm}), '%')
				)
		</if>
		<if test='usr_nm != null and usr_nm != ""' >
			and ((select tce.usr_ko_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%')
				or (select tce.usr_en_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%')
				or (select tce.usr_zh_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) like concat('%', trim(#{usr_nm}), '%'))
		</if>
		<if test='sDate != null and sDate != "" and eDate != null and eDate != ""'>
        <![CDATA[
			and (to_timestamp(tcmp.upt_dt,  'YYYYMMDDHH24MIss') >= #{sDate}::timestamp and to_timestamp(tcmp.upt_dt,  'YYYYMMDDHH24MIss') <= concat(#{eDate}, ' 23:59:59')::timestamp)
		]]>
        </if>
		    order by tcmp.mro_pchs_no desc
	</select>
	
	<select id="selectChkDeptYnMro" parameterType="sqlMap" resultType="string">
		/* selectChkDeptYnMro */
		select case when tcu.dept_cd != #{dept_cd} or tcmp.pchs_prog_stt_cd not in ('20', '30') then 'READ'
				    else 'UPDATE' end as result
		from tb_ch_mro_pchs tcmp
		join tb_co_user tcu 
		on tcmp.pchs_usr_id = tcu.usr_id 
		where tcmp.mro_pchs_no = #{mro_pchs_no}
	</select>
	
		
	<select id="selectMroPchskey" parameterType="sqlMap" resultType="string">
		/* selectMroPchskey */
		select to_char(now(), 'YYMMDD')|| LPAD((nextval('tb_ch_mro_pchs_seq'::regclass))::text, 6, '0') 
	</select>
	
	
	<insert id="insertMroPchs" parameterType="sqlMap">
       insert into tb_ch_mro_pchs(
			mro_pchs_no
			,wkpl_id
			,pchs_usr_id
			,pchs_dept_cd
			,pchs_cntn
			,pchs_prog_stt_cd
			,aprv_no
			,aprv_crt_dt
			,aprv_cmpt_dt
			,multi_yn
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{wkpl_id}
				,#{SESS_USR_ID}
				,#{dept_cd}
				,trim(#{pchs_cntn})
				,#{pchs_prog_stt_cd}
				,#{aprv_no}
				,#{aprv_crt_dt}
				,#{aprv_cmpt_dt}
				,#{multi_yn}
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) on conflict (mro_pchs_no)
		do update set 
				wkpl_id = #{wkpl_id}
				,pchs_usr_id = #{SESS_USR_ID}
				,pchs_cntn = trim(#{pchs_cntn})
				,pchs_prog_stt_cd = #{pchs_prog_stt_cd}
				,aprv_no = #{aprv_no}
				,aprv_crt_dt = #{aprv_crt_dt}
				,aprv_cmpt_dt = #{aprv_cmpt_dt}
				,del_yn = 'N'
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where tb_ch_mro_pchs.mro_pchs_no = #{mro_pchs_no}
    </insert>
    
    <insert id="insertMroPchsMtrl" parameterType="sqlMap">
       insert into tb_ch_mro_pchs_mtrl(
			mro_pchs_no
			,mtrl_no
			,macl_cd
			,mtrl_ko_nm
			,pchs_unit_cd
			,pchs_unit_nm
			,pchs_unit_weght
			,pchs_unit_nweght_qty
			,pchs_qty
			,impt_yn
			,msds_ver
			,enact_da
			,rev_da
			,nweght_uncnfm_yn
			,pchs_url
			,phase_cd
			,mtrl_puse_cd
			,mtrl_puse_cntn
			,mtrl_fspt_infr_estn_yn
			,mtrl_fspt_vl
			,ko_atfl_no
			,en_atfl_no
			,vndr_no
			,vndr_kyin_yn
			,vndr_nm
			,vndr_type_cd
			,nat_cd
			,vndr_addr
			,vndr_phon_no
			,vndr_rprs_nm
			,vndr_coreg_no
			,vndr_email
			,vndr_url
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{mtrl_no}
				,#{macl_cd}
				,trim(#{mtrl_ko_nm})
				,trim(#{pchs_unit_cd})
				,trim(#{pchs_unit_nm})
				,#{pchs_unit_weght}::numeric
				,case when #{pchs_unit_nweght_qty}::text  = '' then null 
	   				  else trim(#{pchs_unit_nweght_qty}::text)::integer
   	 			 end 	 			
				,trim(#{pchs_qty}::text)::integer
				,#{impt_yn}
				,trim(#{msds_ver})
				,replace(#{enact_da},'-','')
				,replace(#{rev_da},'-','')
				,#{nweght_uncnfm_yn}
				,trim(#{pchs_url})
				,#{phase_cd}
				,#{mtrl_puse_cd}
				,trim(#{mtrl_puse_cntn})
				,#{mtrl_fspt_infr_estn_yn}
			    ,case when #{mtrl_fspt_vl}::text = '' then NULL
			          when #{mtrl_fspt_vl} = NULL then NULL
			          else #{mtrl_fspt_vl}::numeric
			      end
				,case when #{ko_atfl_no} = '' then null 
					   else #{ko_atfl_no}::INTEGER 
			     end
			    ,case when #{en_atfl_no} = '' then null 
					   else #{en_atfl_no}::INTEGER 
			     end
			     ,case when #{vndr_no} = '' then 'Z'
					   else #{vndr_no}
			     end
				,#{vndr_kyin_yn}
				,trim(#{vndr_nm})
				,#{vndr_type_cd}
				,#{nat_cd}
				,trim(#{vndr_addr})
				,trim(#{vndr_phon_no})
				,trim(#{vndr_rprs_nm})
				,trim(#{vndr_coreg_no})
				,trim(#{vndr_email})
				,trim(replace(replace(#{vndr_url}, 'http://', ''), 'https://', ''))
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) 
    </insert>
    
     <update id="updateMroPchsMtrl" parameterType="sqlMap">
       update tb_ch_mro_pchs_mtrl 
       		set macl_cd = #{macl_cd}
				,mtrl_ko_nm = trim(#{mtrl_ko_nm})
				,pchs_unit_cd = trim(#{pchs_unit_cd})
				,pchs_unit_nm = trim(#{pchs_unit_nm})
				,pchs_unit_weght = #{pchs_unit_weght}::numeric
				,pchs_unit_nweght_qty = case when #{pchs_unit_nweght_qty}::text  = '' then null 
							   				else trim(#{pchs_unit_nweght_qty}::text)::integer
					    	 			end
				,pchs_qty = trim(#{pchs_qty}::text)::integer
				,impt_yn = #{impt_yn}
				,msds_ver = trim(#{msds_ver})
				,enact_da = replace(#{enact_da},'-','')
				,rev_da = replace(#{rev_da},'-','')
				,nweght_uncnfm_yn = #{nweght_uncnfm_yn}
				,pchs_url =  trim(#{pchs_url})
				,phase_cd = #{phase_cd}
				,mtrl_puse_cd = #{mtrl_puse_cd}
				,mtrl_puse_cntn =  trim(#{mtrl_puse_cntn})
			    ,mtrl_fspt_infr_estn_yn = #{mtrl_fspt_infr_estn_yn}
			    ,mtrl_fspt_vl = case when #{mtrl_fspt_vl}::text = '' then NULL
		                             when #{mtrl_fspt_vl} = NULL then NULL
		                             else #{mtrl_fspt_vl}::numeric
		                         end
				,ko_atfl_no = case when #{ko_atfl_no}::text  = '' then null 
					   				else #{ko_atfl_no}::INTEGER 
			    	 			end
				,en_atfl_no = case when #{en_atfl_no}::text  = '' then null 
					   				else #{en_atfl_no}::INTEGER 
			    	 			end
				,vndr_no = 		case when #{vndr_no} = '' then 'Z'
					  				 else #{vndr_no}
			     				end
				,vndr_kyin_yn = #{vndr_kyin_yn}
				,vndr_nm = trim(#{vndr_nm})
				,nat_cd = #{nat_cd}
				,vndr_addr = trim(#{vndr_addr})
				,vndr_phon_no = trim(#{vndr_phon_no})
				,vndr_rprs_nm = trim(#{vndr_rprs_nm})
				,vndr_coreg_no = trim(#{vndr_coreg_no})
				,vndr_email = trim(#{vndr_email})
				,vndr_url = trim(replace(replace(#{vndr_url}, 'http://', ''), 'https://', ''))
				,del_yn = 'N'
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where  tb_ch_mro_pchs_mtrl.mro_pchs_no = #{mro_pchs_no}::text 
			and tb_ch_mro_pchs_mtrl.mtrl_no = #{mtrl_no}
     </update>
    
    <insert id="insertMroPchsMtrlSbst" parameterType="sqlMap">
       insert into tb_ch_mro_pchs_mtrl_sbst(
			mro_pchs_no
			,mtrl_no
			,sbst_no
			,sbst_seq
			,sbst_rati
			,sbst_note
			,sbst_type_cd
			,sbst_ko_nm
			,sbst_en_nm
			,cas_no
			,usg_yn
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{mtrl_no}
				,#{sbst_no}
				,case when #{sbst_seq} = '' then (select coalesce(max(tcmpms.sbst_seq)+1, 1) from tb_ch_mro_pchs_mtrl_sbst tcmpms  where tcmpms.mro_pchs_no  = #{mro_pchs_no} and tcmpms.mtrl_no  = #{mtrl_no}) 
					  else #{sbst_seq}::INTEGER
				end
				,#{sbst_rati}::numeric
				,trim(#{sbst_note})
				,#{sbst_type_cd}
				,trim(#{sbst_ko_nm})
				,trim(#{sbst_en_nm})
				,trim(#{cas_no})
				,'Y'
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) on conflict (mro_pchs_no,mtrl_no,sbst_no,sbst_seq)
		do update set 
				sbst_rati = #{sbst_rati}::numeric
				,sbst_note = trim(#{sbst_note})
				,sbst_type_cd = #{sbst_type_cd}
				,sbst_ko_nm = trim(#{sbst_ko_nm})
				,sbst_en_nm = trim(#{sbst_en_nm})
				,cas_no = trim(#{cas_no})
				,usg_yn = #{usg_yn}
				,del_yn = #{del_yn}
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where tb_ch_mro_pchs_mtrl_sbst.mro_pchs_no = #{mro_pchs_no}::text 
		and	  tb_ch_mro_pchs_mtrl_sbst.mtrl_no = #{mtrl_no}
		and   tb_ch_mro_pchs_mtrl_sbst.sbst_no = #{sbst_no}
		and	  tb_ch_mro_pchs_mtrl_sbst.sbst_seq	 = case when #{sbst_seq} = '' then 99999999 else #{sbst_seq}::INTEGER   end
    </insert>
    
    <insert id="insertMroPchsGwsgn" parameterType="sqlMap">
       insert into tb_ch_mro_pchs_gwsgn(
			mro_pchs_no
			,mtrl_no
			,sgw_cd
			,hars_cntn
			,prv_cntn
			,act_cntn
			,str_cntn
			,scr_cntn
			,vndr_no
			,vndr_kyin_yn
			,vndr_same_yn
			,vndr_nm
			,vndr_type_cd
			,nat_cd
			,vndr_addr
			,vndr_phon_no
			,vndr_rprs_nm
			,vndr_coreg_no
			,vndr_email
			,vndr_url
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{mtrl_no}
				,#{sgw_cd}
				,trim(#{hars_cntn})
				,trim(#{prv_cntn})
				,trim(#{act_cntn})
				,trim(#{str_cntn})
				,trim(#{scr_cntn})
				,case when #{vndr_no} = '' then 'Z'
					  else #{vndr_no}
			     end
				,#{vndr_kyin_yn}
				,#{vndr_same_yn}
				,trim(#{vndr_nm})
				,#{vndr_type_cd}
				,#{nat_cd}
				,trim(#{vndr_addr})
				,trim(#{vndr_phon_no})
				,trim(#{vndr_rprs_nm})
				,trim(#{vndr_coreg_no})
				,trim(#{vndr_email})
				,trim(replace(replace(#{vndr_url}, 'http://', ''), 'https://', ''))
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) on conflict (mro_pchs_no,mtrl_no)
		do update set 
				sgw_cd = #{sgw_cd}
				,hars_cntn = trim(#{hars_cntn})
				,prv_cntn = trim(#{prv_cntn})
				,act_cntn = trim(#{act_cntn})
				,str_cntn = trim(#{str_cntn})
				,scr_cntn = trim(#{scr_cntn})
				,vndr_no = case when #{vndr_no} = '' then 'Z'
					  				 else #{vndr_no}
			     				end
				,vndr_kyin_yn = #{vndr_kyin_yn}
				,vndr_same_yn = #{vndr_same_yn}
				,vndr_nm = trim(#{vndr_nm})
				,vndr_type_cd = #{vndr_type_cd}
				,nat_cd = #{nat_cd}
				,vndr_addr = trim(#{vndr_addr})
				,vndr_phon_no = trim(#{vndr_phon_no})
				,vndr_rprs_nm = trim(#{vndr_rprs_nm})
				,vndr_coreg_no = trim(#{vndr_coreg_no})
				,vndr_email = trim(#{vndr_email})
				,vndr_url = trim(replace(replace(#{vndr_url}, 'http://', ''), 'https://', ''))
				,del_yn = 'N'
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where tb_ch_mro_pchs_gwsgn.mro_pchs_no = #{mro_pchs_no}::text 
		and   tb_ch_mro_pchs_gwsgn.mtrl_no = #{mtrl_no}
    </insert>
    
     <update id="deleteMroPic" parameterType="sqlMap">
       update tb_ch_mro_pchs_gwsgn_picg 
		   set del_yn = 'Y'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}
     </update>
	
    
	<insert id="insertMroPic" parameterType="sqlMap">
       insert into tb_ch_mro_pchs_gwsgn_picg(
			mro_pchs_no
			,mtrl_no
			,picg_cd
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{mtrl_no}
				,#{picg_cd}
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) on conflict (mro_pchs_no, mtrl_no, picg_cd)
		do update set del_yn = 'N'
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where tb_ch_mro_pchs_gwsgn_picg.mro_pchs_no = #{mro_pchs_no}::text 
		  and tb_ch_mro_pchs_gwsgn_picg.mtrl_no = #{mtrl_no}
		  and tb_ch_mro_pchs_gwsgn_picg.picg_cd = #{picg_cd}
    </insert>
    
    
    <select id="selectMroPchsDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsDtl */
		select 
			tcmp.mro_pchs_no
			,tcmp.wkpl_id
			,fn_get_cd('CO00000006',tcmp.wkpl_id,'NM',#{SESS_LANG})  as wkpl_id_nm
			,tcmp.pchs_usr_id
			,tcmp.pchs_dept_cd
			,tcmp.pchs_cntn
			,tcmp.pchs_prog_stt_cd
			,tcmp.aprv_no
			,tcmp.aprv_crt_dt
			,tcmp.aprv_cmpt_dt
			,tcmp.multi_yn
			,tcmp.del_yn
			,to_char(to_timestamp(tcmp.upt_dt,  'YYYYMMDDHH24MIss'), 'YYYY-MM-DD') as upt_dt
			,case when #{SESS_LANG} = 'KO' then (select tce.usr_ko_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
				  when #{SESS_LANG} = 'EN' then (select tce.usr_en_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
				  else  (select tce.usr_zh_nm from tb_co_user tce where tce.usr_id = tcmp.upt_usr_id) 
			end as upt_usr_nm
			,case when #{SESS_LANG} = 'KO' then (select tcd.dept_ko_nm from tb_co_user tce, tb_co_dept tcd where tce.usr_id = tcmp.upt_usr_id and (tce.dept_cd = tcd.dept_cd or tce.dptc_dept_cd = tcd.dept_cd)) 
				  						   else (select tcd.dept_en_nm from tb_co_user tce, tb_co_dept tcd where tce.usr_id = tcmp.upt_usr_id and (tce.dept_cd = tcd.dept_cd or tce.dptc_dept_cd = tcd.dept_cd)) 
			end as upt_dept_nm
		from tb_ch_mro_pchs tcmp
		where tcmp.mro_pchs_no  = #{mro_pchs_no}
	</select>
	
	<select id="selectMroPchsMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsMtrlList */
		select
			 tcmpm.mtrl_ko_nm
		from tb_ch_mro_pchs_mtrl tcmpm
		where tcmpm.mtrl_ko_nm = #{mtrl_ko_nm}
	</select>
	
	<select id="selectMroPchsMtrlDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsMtrlDtl */
		select 
			tcmpm.mro_pchs_no
			,#{mtrl_no} as mtrl_no
			,tcmpm.macl_cd
			,fn_get_cd('CH00000006',tcmpm.macl_cd,'NM',#{SESS_LANG})  as macl_cd_nm
			,tcmpm.mtrl_ko_nm
			,tcmpm.pchs_unit_cd
			,case when tcmpm.pchs_unit_cd = '6' then tcmpm.pchs_unit_nm
			            						else fn_get_cd('CH00000026',tcmpm.pchs_unit_cd,'NM','KO') 
			 end as pchs_unit_nm
			,RTRIM(RTRIM(tcmpm.pchs_unit_weght::text,'0'),'.') as pchs_unit_weght
			,tcmpm.pchs_unit_nweght_qty
			,tcmpm.pchs_qty::integer
			,tcmpm.impt_yn
			,tcmpm.msds_ver
			,substring(tcmpm.enact_da, 0, 5) || '-' || substring(tcmpm.enact_da, 5, 2) || '-' || substring(tcmpm.enact_da, 7, 2) as enact_da
			,substring(tcmpm.rev_da, 0, 5) || '-' || substring(tcmpm.rev_da, 5, 2) || '-' || substring(tcmpm.rev_da, 7, 2) as rev_da
			,tcmpm.nweght_uncnfm_yn
			,tcmpm.pchs_url
			,tcmpm.phase_cd
			,fn_get_cd('CH00000017',tcmpm.phase_cd,'NM',#{SESS_LANG})  as phase_cd_nm
			,tcmpm.mtrl_puse_cd
			,fn_get_cd('CO00000018',tcmpm.mtrl_puse_cd,'NM',#{SESS_LANG})  as mtrl_puse_cd_nm
			,coalesce(tcmpm.mtrl_puse_cntn,'') as mtrl_puse_cntn
			,coalesce(tcmpm.mtrl_fspt_infr_estn_yn, 'Y') as mtrl_fspt_infr_estn_yn
			,tcmpm.mtrl_fspt_vl
			,coalesce(tcmpm.ko_atfl_no::text,'') as ko_atfl_no
			,coalesce(tcmpm.en_atfl_no::text,'') as en_atfl_no
			,coalesce((select f.atfl_nm as name
		        	     from tb_co_atfl f
				        where f.atfl_no = tcmpm.ko_atfl_no limit 1
			),'') as ko_atfl_nm
			,coalesce((select f.atfl_nm as name
		       		     from tb_co_atfl f
				 		where f.atfl_no = tcmpm.en_atfl_no limit 1
			),'') as en_atfl_nm
			,case when tcmpm.vndr_no = 'Z' then '' 
				  else tcmpm.vndr_no
			 end
			,tcmpm.vndr_kyin_yn
			,tcmpm.vndr_nm
			,tcmpm.vndr_type_cd
			,tcmpm.nat_cd
			,fn_get_cd('CO00000003',tcmpm.nat_cd,'NM',#{SESS_LANG})  as nat_cd_nm
			,tcmpm.vndr_addr
			,tcmpm.vndr_phon_no
			,tcmpm.vndr_rprs_nm
			,tcmpm.vndr_coreg_no
			,tcmpm.vndr_email
			,tcmpm.vndr_url
			,tcmpm.upt_usr_id
			,tcmpm.upt_dt
		from tb_ch_mro_pchs_mtrl tcmpm 
		where tcmpm.mro_pchs_no  = #{mro_pchs_no}
	</select>
	
	<select id="selectMroPchsMtrlSbstDtlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsMtrlSbstDtlList */
		select 
			tcmpms.mro_pchs_no
			,#{mtrl_no} as mtrl_no
			,tcmpms.sbst_no
			,tcmpms.sbst_seq
			,RTRIM(RTRIM(tcmpms.sbst_rati::text,'0'),'.') as sbst_rati
			,tcmpms.sbst_note
			,tcmpms.sbst_type_cd
			,fn_get_cd('CH00000004',tcmpms.sbst_type_cd,'NM',#{SESS_LANG})  as sbst_type_nm
			,tcmpms.sbst_ko_nm
			,tcmpms.sbst_en_nm
			,tcmpms.cas_no
			,tcmpms.usg_yn
			,tcmpms.del_yn
			,tcmpms.crt_usr_id
			,tcmpms.crt_dt
			,tcmpms.upt_usr_id
			,tcmpms.upt_dt
		from tb_ch_mro_pchs_mtrl_sbst tcmpms 
		where tcmpms.mro_pchs_no  = #{mro_pchs_no}
		and tcmpms.usg_yn  = 'Y'
		and tcmpms.del_yn  = 'N'
	</select>
	
	<select id="selectMroPchsGwsgnDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsGwsgnDtl */
		select 
			tcmpg.mro_pchs_no
			,#{mtrl_no} as mtrl_no
			,tcmpg.sgw_cd
			,fn_get_cd('CH00000009', tcmpg.sgw_cd, 'nm', #{SESS_LANG}) as sgw_nm 
			,tcmpg.hars_cntn
			,tcmpg.prv_cntn
			,tcmpg.act_cntn
			,tcmpg.str_cntn
			,tcmpg.scr_cntn
			,case when tcmpg.vndr_no = 'Z' then '' 
				  else tcmpg.vndr_no
			 end
			,tcmpg.vndr_kyin_yn
			,tcmpg.vndr_same_yn
			,tcmpg.vndr_nm
			,tcmpg.vndr_type_cd
			,tcmpg.nat_cd
			,fn_get_cd('CO00000003',tcmpg.nat_cd,'NM',#{SESS_LANG})  as nat_cd_nm
			,tcmpg.vndr_addr
			,tcmpg.vndr_phon_no
			,tcmpg.vndr_rprs_nm
			,tcmpg.vndr_coreg_no
			,tcmpg.vndr_email
			,tcmpg.vndr_url
		from tb_ch_mro_pchs_gwsgn tcmpg 
		where tcmpg.mro_pchs_no  = #{mro_pchs_no}
	</select>
	
	<select id="selectMroPicDtlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPicDtlList */
		select
			tcmpgp.mro_pchs_no
			,#{mtrl_no} as mtrl_no
			,tcmpgp.picg_cd
			,tcmpgp.del_yn
		from tb_ch_mro_pchs_gwsgn_picg tcmpgp 
		where tcmpgp.mro_pchs_no = #{mro_pchs_no} 
		and tcmpgp.del_yn  ='N'
	</select>
	
	
	 <update id="deleteMroPchs" parameterType="sqlMap">
       update tb_ch_mro_pchs 
		   set del_yn = 'Y'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}
     </update>
     
     <update id="deleteMroPchsMtrl" parameterType="sqlMap">
       update tb_ch_mro_pchs_mtrl 
		   set del_yn = 'Y'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}
     </update>
     
     <update id="deleteMroPchsMtrlSbst" parameterType="sqlMap">
       update tb_ch_mro_pchs_mtrl_sbst 
		   set del_yn = 'Y'
		   	 ,usg_yn ='N'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}
     </update>
     
     <update id="deleteMroPchsGwsgn" parameterType="sqlMap">
       update tb_ch_mro_pchs_gwsgn 
		   set del_yn = 'Y'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}
     </update>
     
    <insert id="insertMroPchsMultiMtrl" parameterType="sqlMap">
       insert into tb_ch_mro_pchs_mtrl(
			mro_pchs_no
			,mtrl_no
			,mtrl_ko_nm
			,macl_cd
			,pchs_unit_cd
			,pchs_unit_nm
			,pchs_unit_weght
			,pchs_unit_nweght_qty
			,pchs_qty
			,impt_yn
			,vndr_no
			,vndr_nm
			,vndr_type_cd
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
				#{mro_pchs_no}
				,#{mtrl_no}
				,#{mtrl_nm}
				,#{macl_cd}
				,#{pchs_unit_cd}
				,#{pchs_unit_nm}
				,#{pchs_unit_weght}::numeric
				,#{pchs_unit_nweght_qty}::integer 
				,trim(#{pchs_qty})::integer
				,#{impt_yn}
			    ,#{vndr_no}
			    ,#{vndr_nm}
			    ,'2'
				,'N'
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
			   ,#{SESS_USR_ID}
			   ,to_char(now(), 'YYYYMMDDHH24MISS')
		) on conflict (mro_pchs_no,mtrl_no,vndr_no)
		do update set macl_cd = #{macl_cd}
				,mtrl_ko_nm = #{mtrl_nm}
				,pchs_unit_cd = #{pchs_unit_cd}
		 		,pchs_unit_nm = #{pchs_unit_nm}
		 		,pchs_unit_weght = #{pchs_unit_weght}::numeric
				,pchs_unit_nweght_qty = #{pchs_unit_nweght_qty}::integer
				,pchs_qty = #{pchs_qty}::integer
				,vndr_nm = #{vndr_nm}
				,impt_yn = #{impt_yn}
				,del_yn = #{del_yn}
			   ,upt_usr_id = #{SESS_USR_ID}
			   ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS') 
		where  tb_ch_mro_pchs_mtrl.mro_pchs_no = #{mro_pchs_no}::text 
			and tb_ch_mro_pchs_mtrl.mtrl_no = #{mtrl_no}
			and tb_ch_mro_pchs_mtrl.vndr_no = #{vndr_no}
    </insert>
    
    <update id="deleteMroPchsMultiMtrl" parameterType="sqlMap">
       update tb_ch_mro_pchs_mtrl 
		   set del_yn = 'Y'
		   	 ,upt_usr_id = #{SESS_USR_ID}
		     ,upt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}::text 
			and mtrl_no = #{mtrl_no}
			and vndr_no = #{vndr_no}
     </update>
     
     <select id="selectMroPchsMultiMtrlList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsMultiMtrlList */
		select 
			tcmpm.mro_pchs_no
			,tcmpm.mtrl_no
			,tcmpm.macl_cd
			,fn_get_cd('CH00000006',tcmpm.macl_cd,'NM',#{SESS_LANG})  as macl_cd_nm
			,tcmpm.mtrl_ko_nm
			,tcmpm.pchs_unit_cd
			,tcm.pchs_req_unit_cd as pchs_req_unit_cd
			,case when tcmpm.pchs_unit_cd = '6' then tcmpm.pchs_unit_nm
			            						else fn_get_cd('CH00000026',tcmpm.pchs_unit_cd,'NM','KO') 
			 end as pchs_unit_nm
			,case when tcm.pchs_req_unit_cd = '6' then tcm.pchs_req_unit_nm
                                                else fn_get_cd('CH00000026',tcm.pchs_req_unit_cd,'NM','KO')
             end as pchs_req_unit_nm
			,RTRIM(RTRIM(tcmpm.pchs_unit_weght::text,'0'),'.') as pchs_unit_weght
			,RTRIM(RTRIM(tcm.pchs_req_unit_weght::text,'0'),'.') as pchs_req_unit_weght
			,tcmpm.pchs_unit_nweght_qty::integer
			,tcmpm.pchs_qty::integer
			,tcmpm.impt_yn
			,tcmpm.ko_atfl_no
			,tcmpm.en_atfl_no
			,case when tcmpm.vndr_no = 'Z' then '' 
				  else tcmpm.vndr_no
			 end
			,tcmpm.vndr_kyin_yn
			,tcmpm.vndr_type_cd
			,tcmpm.nat_cd
			,fn_get_cd('CO00000003',tcmpm.nat_cd,'NM',#{SESS_LANG})  as nat_cd_nm
			,tcmpm.vndr_addr
			,tcmpm.vndr_phon_no
			,tcmpm.vndr_rprs_nm
			,tcmpm.vndr_coreg_no
			,tcmpm.vndr_email
			,tcmpm.vndr_url
			,tcmpm.upt_usr_id
			,tcmpm.upt_dt
			,tcmpm.mtrl_ko_nm as mtrl_nm
		    ,tcmpm.vndr_nm
		from tb_ch_mro_pchs_mtrl tcmpm 
		join tb_co_mtrl tcm
          on tcmpm.mtrl_no = tcm.mtrl_no and tcm.del_yn = 'N'
		where tcmpm.mro_pchs_no  = #{mro_pchs_no}
		and tcmpm.del_yn ='N'
	</select>

	<!-- 결제 후처리  -->
	<!-- aprv_no 를 이용한 mro구매번호 조회  -->
    <select id="selectMroPchsAprvNo" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsAprvNo */
		select tcmp.mro_pchs_no
		  from tb_ch_mro_pchs tcmp
		 where tcmp.aprv_no = #{aprv_no}
	</select>
	
	<!-- aprv_no 를 이용한 mro구매번호 조회  -->
    <select id="selectMroPchsAprvNoList" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroPchsAprvNoList */
		select tcmp.mro_pchs_no
		      ,tcmp.multi_yn 
		  from tb_ch_mro_pchs tcmp
		 where tcmp.aprv_no = #{aprv_no}
	</select>
	
	<update id="MroPchsAprvIng" parameterType="sqlMap">
       update tb_ch_mro_pchs 
		  set aprv_no = #{aprv_no}
		     ,aprv_crt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}::text
     </update>
	
	<update id="MroPchsAprvSucs" parameterType="sqlMap">
       update tb_ch_mro_pchs 
		  set pchs_prog_stt_cd = '30'
		     ,aprv_cmpt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}::text
     </update>
     
     <update id="MroPchsAprvFail" parameterType="sqlMap">
       update tb_ch_mro_pchs 
		   set pchs_prog_stt_cd = '40'
		    ,aprv_cmpt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}::text
     </update>
     
    <update id="MroPchsAprvCancel" parameterType="sqlMap">
       update tb_ch_mro_pchs 
		   set pchs_prog_stt_cd = '10'
		    ,aprv_cmpt_dt = to_char(now(), 'YYYYMMDDHH24MISS')
		where mro_pchs_no = #{mro_pchs_no}::text
     </update>
     
    <select id="selectRgltChkNo" parameterType="sqlMap" resultType="sqlMap">
		/* selectRgltChkNo */
		select (to_char(now(),'YYMMDD') || lpad(coalesce((select max(substring(rglt_chk_no,7,12)::integer + 1) from tb_ch_rglt_chk_mtrl where rglt_chk_no like to_char(now(),'YYMMDD') || '%'),1)::varchar,6,'0')) as rglt_chk_no
	</select>
	
	<insert id="MrpPchsAprvSucsInsertMtrl" parameterType="sqlMap">
		insert into tb_co_mtrl(
			 mtrl_no
			 ,rglt_chk_wkpl_id
			 ,mtrl_clsf_cd
			 ,mtrl_kind_cd
			 ,macl_cd
			 ,mtrl_ko_nm
		 	 ,mtrl_en_nm
			 ,mtrl_zh_nm
			 ,mtrl_reg_usr_id
			 ,mtrl_reg_da
			 ,mtrl_puse_cd
			 ,mtrl_puse_cntn
			 ,pchs_unit_cd
			 ,pchs_req_unit_cd
			 ,pchs_unit_nm
			 ,pchs_req_unit_nm
			 ,pchs_unit_weght
			 ,pchs_req_unit_weght
			 ,pchs_unit_nweght_qty
			 ,phase_cd
			 ,impt_yn
			 ,rglt_chk_req_yn
			 ,rglt_chk_yn
			 ,usg_yn
			 ,del_yn
			 ,crt_usr_id
			 ,crt_dt
			 ,upt_usr_id
			 ,upt_dt
		) values (
			 #{mtrl_no}
			 ,#{rglt_chk_wkpl_id}
			 ,'2'
			 ,'3'
			 ,#{macl_cd}
			 ,#{mtrl_ko_nm}
			 ,#{mtrl_ko_nm}
			 ,#{mtrl_ko_nm}
			 ,#{rglt_chk_req_usr_id}
			 ,to_char(now(), 'YYYYMMDD')
			 ,#{mtrl_puse_cd}
			 ,#{mtrl_puse_cntn}
			 ,#{pchs_unit_cd}
			 ,#{pchs_unit_cd}
			 ,#{pchs_unit_nm}
			 ,#{pchs_unit_nm}
			 ,case when COALESCE(#{pchs_unit_weght}::text,'')  = '' then null 
   				  else #{pchs_unit_weght}::numeric
  	 			 end 
  	 		 ,case when COALESCE(#{pchs_unit_weght}::text,'')  = '' then null 
   				  else #{pchs_unit_weght}::numeric
  	 			 end 
			 ,case when COALESCE(#{pchs_unit_nweght_qty}::text,'')  = '' then null 
   				  else #{pchs_unit_nweght_qty}::integer
  	 			 end 	
			 ,#{phase_cd}
			 ,#{impt_yn}
			 ,'Y'
			 ,'N'
			 ,'Y'	
			 ,'N'
			 ,#{rglt_chk_req_usr_id}
			 ,to_char(now(), 'YYYYMMDDHH24MISS')
			 ,#{rglt_chk_req_usr_id}
			 ,to_char(now(), 'YYYYMMDDHH24MISS')
		)
   
    </insert>
	
     <insert id="MrpPchsAprvSucsInsertRgltChk" parameterType="sqlMap">
       insert into tb_ch_rglt_chk(
			rglt_chk_no
			,chk_req_clsf_cd
			,chk_type_cd
			,wkpl_id
			,rglt_chk_prog_stt_cd
			,email_send_yn
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
			,rglt_chk_req_usr_id
			,rglt_chk_req_da
		) values (
			#{rglt_chk_no}
		  	,'2'
		  	,'1'
			,#{wkpl_id}
			,'30'
			,'Y'
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDD')
		)
    </insert>
     
	<insert id="MrpPchsAprvSucsInsertRgltChkMtrl" parameterType="sqlMap">
		/* MrpPchsAprvSucsInsertRgltChkMtrl */
		insert into tb_ch_rglt_chk_mtrl (
			 rglt_chk_no
			,chk_req_clsf_cd
			,mtrl_no
			,mtrl_clsf_cd
			,mtrl_kind_cd
			,mtrl_type_cd
			,mtrl_grp_cd
			,macl_cd
			,mtrl_ko_nm
			,mtrl_en_nm
			,mtrl_zh_nm
			,mtrl_reg_usr_id
			,mtrl_reg_da
			,oem_odm_yn
			,qdrg_yn
			,imk_item_no
			,imk_item_ctgr_cd
			,imk_item_ctgr_nm
			,msds_rev_no
			,mtrl_puse_cd
			,mtrl_puse_cntn
			,pchs_unit_cd
			,pchs_req_unit_cd
			,pchs_unit_nm
			,pchs_req_unit_nm
			,pchs_unit_weght
			,pchs_req_unit_weght
			,pchs_unit_nweght_qty
			,mtrl_fspt_infr_estn_yn
			,mtrl_fspt_vl
			,phase_cd
			,impt_yn
			,usg_yn
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
			#{rglt_chk_no}
			,'2'
			,#{mtrl_no}
			,'2'
			,'3'
			,null
			,null
			,#{macl_cd}
			,#{mtrl_ko_nm}
			,#{mtrl_ko_nm}
			,#{mtrl_ko_nm}
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDD')
			,null
			,null
			,null
			,null
			,null
			,null
			,#{mtrl_puse_cd}
			,#{mtrl_puse_cntn}
			,#{pchs_unit_cd}
			,#{pchs_unit_cd}
			,#{pchs_unit_nm}
			,#{pchs_unit_nm}
			,#{pchs_unit_weght}::numeric
			,#{pchs_unit_weght}::numeric
			,case when COALESCE(#{pchs_unit_nweght_qty}::text,'')  = '' then null 
   				  else #{pchs_unit_nweght_qty}::integer
  	 			 end
	        ,#{mtrl_fspt_infr_estn_yn}
	        ,case when #{mtrl_fspt_vl}::text = '' then NULL
	              when #{mtrl_fspt_vl} = NULL then NULL
	              else #{mtrl_fspt_vl}::numeric
	          end
			,#{phase_cd}
			,#{impt_yn}
			,'Y'	
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
         
     <insert id="MrpPchsAprvSucsInsertRgltChkMsds" parameterType="sqlMap">
       insert into tb_ch_rglt_chk_msds(
			rglt_chk_no
			,chk_req_clsf_cd
			,mtrl_no
			,msds_ver
			,enact_da
			,rev_da
			,reg_da
			,reg_usr_id
			,ko_atfl_no
			,en_atfl_no
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
			#{rglt_chk_no}
			,'2'
			,#{mtrl_no}
			,#{msds_ver}
			,replace(replace(#{enact_da},'-',''),'-','')
			,replace(replace(#{rev_da},'-',''),'-','')
			,to_char(now(), 'YYYYMMDD')
			,#{rglt_chk_req_usr_id}
			,case when #{ko_atfl_no}::text  = '' then null 
				   				else #{ko_atfl_no}::INTEGER 
 	 		end
			,case when #{en_atfl_no}::text  = '' then null 
				   				else #{en_atfl_no}::INTEGER 
  	 		end
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
    <insert id="MrpPchsAprvSucsInsertRgltChkSbst" parameterType="sqlMap">
       insert into tb_ch_rglt_chk_sbst(
			rglt_chk_no
			,chk_req_clsf_cd
			,mtrl_no
			,sbst_no
			,sbst_seq
			,sbst_type_cd
			,cas_no
			,sbst_nm
			,sbst_rati
			,sbst_note
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
			#{rglt_chk_no}
			,'2'
			,#{mtrl_no}
			,#{sbst_no}
			,#{sbst_seq}	
			,#{sbst_type_cd}
			,#{cas_no}
			,#{sbst_ko_nm}
			,#{sbst_rati}::numeric
			,#{sbst_note}
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
    <insert id="MrpPchsAprvSucsInsertRgltChkGwsgn" parameterType="sqlMap">
       insert into tb_ch_rglt_chk_gwsgn(
			rglt_chk_no
			,chk_req_clsf_cd
			,mtrl_no
			,sgw_cd
			,hars_cntn
			,prv_cntn
			,act_cntn
			,str_cntn
			,scr_cntn
			,vndr_no
			,vndr_kyin_yn
			,vndr_nm
			,vndr_type_cd
			,nat_cd
			,vndr_addr
			,vndr_pst_no
			,vndr_phon_no
			,vndr_fax_no
			,vndr_rprs_nm
			,vndr_coreg_no
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
			#{rglt_chk_no}
			,'2'
			,#{mtrl_no}
			,#{sgw_cd}
			,#{hars_cntn}
			,#{prv_cntn}
			,#{act_cntn}
			,#{str_cntn}
			,#{scr_cntn}
			,#{vndr_no}
			,#{vndr_kyin_yn}
			,#{vndr_nm}
			,#{vndr_type_cd}
			,#{nat_cd}
			,#{vndr_addr}
			,null
			,#{vndr_phon_no}
			,null
			,#{vndr_rprs_nm}
			,#{vndr_coreg_no}
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
    <insert id="MrpPchsAprvSucsInsertRgltChkGwsgnPicg" parameterType="sqlMap">
       insert into tb_ch_rglt_chk_gwsgn_picg(
			rglt_chk_no
			,chk_req_clsf_cd
			,mtrl_no
			,picg_cd
			,print_yn
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		) values (
			#{rglt_chk_no}
			,'2'
			,#{mtrl_no}
			,#{picg_cd}
			,'N'
			,'N'
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
			,#{rglt_chk_req_usr_id}
			,to_char(now(), 'YYYYMMDDHH24MISS')
		)
    </insert>
    
    <!-- MRO 규제요청 구성물질의 예상규제 추가 -->
	<insert id="MroPchsAprvSucsInsertRgltChkRglt" parameterType="sqlMap">
        /* MroPchsAprvSucsInsertRgltChkRglt */
        insert into tb_ch_rglt_chk_rglt (  
        	 rglt_chk_no
        	,chk_req_clsf_cd
        	,mtrl_no
        	,rglt_no
        	,rglt_chk_doma_cd
        	,nat_cd
			,rglt_type_cd
			,law_cd
			,rglt_nm
			,rglt_abbr
			,sort_seq
			,del_yn
			,crt_usr_id
			,crt_dt
			,upt_usr_id
			,upt_dt
		)
		select #{rglt_chk_no} as rglt_chk_no
		      ,'2' as chk_req_clsf_cd
		      ,#{mtrl_no} as mtrl_no
		      ,b.rglt_no
		      ,b.rglt_chk_doma_cd
		      ,b.nat_cd 
		      ,b.rglt_type_cd 
		      ,b.law_cd 
		      ,b.rglt_nm 
		      ,b.rglt_abbr
		      ,b.sort_seq 
		      ,'N'
		      ,#{username}
			  ,to_char(now(), 'YYYYMMDDHH24MISS')
			  ,#{username}
			  ,to_char(now(), 'YYYYMMDDHH24MISS')
		  from tb_ch_rglt b
		  where del_yn = 'N'
		    and usg_yn = 'Y'
    </insert>
    
    <select id="selectMroMtrlNo" parameterType="sqlMap" resultType="sqlMap">
		/* selectMroMtrlNo */
		select 'M' || LPAD((nextval('mro_mtrl_no_seq'::regclass))::text, 6, '0') AS mtrl_no
	</select>
    
    <insert id="MrpPchsAprvSucsInsertRgltChkMtrlSite" parameterType="sqlMap">
		/* MrpPchsAprvSucsInsertRgltChkMtrlSite */
		insert into tb_co_mtrl_site (
			 mtrl_no
             ,wkpl_id
             ,plant_cd
             ,del_yn
             ,crt_usr_id
             ,crt_dt
             ,upt_usr_id
             ,upt_dt
        ) 
	  	select #{mtrl_no}
	         ,cd.cd as wkpl_id
	         ,(select max(cr.cd) from tb_co_cd_rel cr where cd.cd_grp_no=cr.up_cd_grp_no and cd.cd=cr.up_cd) as plant_cd
	         ,'N'
             ,#{rglt_chk_req_usr_id}
             ,to_char(now(),'YYYYMMDDHH24MISS')
             ,#{rglt_chk_req_usr_id}
             ,to_char(now(),'YYYYMMDDHH24MISS')
	      from tb_co_cd cd
	     where cd_grp_no = 'CO00000006'
	       and usg_yn = 'Y' 
	       and del_yn = 'N'
	</insert>
	
	<update id="MrpPchsAprvSucsUpdateRgltChkPchsMtrl" parameterType="sqlMap">
		/* MrpPchsAprvSucsUpdateRgltChkPchsMtrl */
		update tb_ch_mro_pchs_mtrl 
		   set mtrl_no = #{mtrl_no}
		   <if test='vndr_no != null and vndr_no != ""'>
		      ,vndr_no = #{vndr_no}
		   </if>
		 where mro_pchs_no = #{mro_pchs_no}
	</update>
	
	
</mapper>