<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kist.portal.sh.sftchk.mapper.SftChkMapper">

	<select id="selectOprbTgtChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbTgtChkList */
		select oprb_chk_tgt_id 
		      ,wkpl_id 
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,oprb_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = oprb_chk_supe_usr_id) as oprb_chk_supe_usr_nm
		      ,oprb_chk_supe_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = oprb_chk_supe_spic_usr_id) as oprb_chk_supe_spic_usr_nm
		      ,oprb_chk_tgt_nm 
		      ,oprb_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = oprb_chk_wkpl_loc_id) as oprb_chk_wkpl_loc_nm
		      ,oprb_chk_dtl_loc_nm 
		      ,oprb_chk_note_txt 
		      ,usg_yn 
		      ,crt_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = crt_usr_id) as fscr_nm
		      ,to_char(crt_dt, 'YYYY-MM-DD') || ' ' || to_char(crt_dt, 'HH24:MI') as crt_dt 
		  from tb_sh_oprb_chk_tgt soct
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and wkpl_id = #{wkpl_id}
		 </if>
		 <if test='oprb_chk_tgt_nm != null and oprb_chk_tgt_nm != ""'>
		   and oprb_chk_tgt_nm like '%' || #{oprb_chk_tgt_nm} || '%'
		 </if>
		 <if test='oprb_chk_supe_usr_id != null and oprb_chk_supe_usr_id != ""'>
		   and (oprb_chk_supe_usr_id = #{oprb_chk_supe_usr_id} or oprb_chk_supe_spic_usr_id = #{oprb_chk_supe_usr_id})
		 </if>
		 <if test='oprb_chk_wkpl_loc_id != null and oprb_chk_wkpl_loc_id != ""'>
		   and oprb_chk_wkpl_loc_id = #{oprb_chk_wkpl_loc_id}
		 </if>
		 <if test='usg_yn != null and usg_yn != ""'>
		   and usg_yn = #{usg_yn}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = soct.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
	</select>
	
	<select id="selectOprbChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkList */
		select soc.oprb_chk_id
			  ,soc.oprb_chk_tgt_id 
		      ,soc.wkpl_id 
		      ,fn_get_cmpy(soc.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,fn_get_cd('ST00000002', soc.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,oprb_chk_rspn_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_rspn_usr_id) as oprb_chk_rspn_usr_nm
			  ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_spic_usr_id) as oprb_chk_spic_usr_nm
			  ,oprb_chk_supe_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soct.oprb_chk_supe_usr_id) as oprb_chk_supe_usr_nm
			  ,oprb_chk_supe_spic_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soct.oprb_chk_supe_spic_usr_id) as oprb_chk_supe_spic_usr_nm
		      ,soct.oprb_chk_tgt_nm 
		      ,soct.oprb_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = soct.oprb_chk_wkpl_loc_id) as oprb_chk_wkpl_loc_nm
		      ,soct.oprb_chk_dtl_loc_nm 
		      ,substring(soc.oprb_chk_schd_dt , 0, 5) || '-' || substring(soc.oprb_chk_schd_dt, 5, 2) || '-' || substring(soc.oprb_chk_schd_dt, 7, 2) as oprb_chk_schd_dt
		      ,case when soc.oprb_chk_hm = '' and soc.oprb_chk_dt = '' then ''
		      		else substring(soc.oprb_chk_dt , 0, 5) || '-' || substring(soc.oprb_chk_dt, 5, 2) || '-' || substring(soc.oprb_chk_dt, 7, 2) || ' ' || substring(soc.oprb_chk_hm, 0, 3) || ':' || substring(soc.oprb_chk_hm, 3, 2) end as oprb_chk_dt_hm
		      ,soc.oprb_chk_prst_cd
		      ,fn_get_cd('SH00000048', soc.oprb_chk_prst_cd,'NM',#{SESS_LANG}) as oprb_chk_prst_cd_nm	-- 진행상태 코드
		  from tb_sh_oprb_chk_tgt soct
		  join tb_sh_oprb_chk soc
		    on soct.oprb_chk_tgt_id = soc.oprb_chk_tgt_id
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and soc.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='oprb_chk_tgt_nm != null and oprb_chk_tgt_nm != ""'>
		   and soct.oprb_chk_tgt_nm like '%' || #{oprb_chk_tgt_nm} || '%'
		 </if>
		 <if test='sch_oprb_chk_st_dt != null and sch_oprb_chk_st_dt != ""'>
		   <if test='sch_oprb_chk_ed_dt != null and sch_oprb_chk_ed_dt != ""'>
		    <![CDATA[
			and soc.oprb_chk_schd_dt <= #{sch_oprb_chk_ed_dt}
			and soc.oprb_chk_schd_dt >= #{sch_oprb_chk_st_dt}
			]]>
			</if>
		 </if>
		 <if test='oprb_chk_rspn_usr_id != null and oprb_chk_rspn_usr_id != ""'>
		   and (soc.oprb_chk_rspn_usr_id = #{oprb_chk_rspn_usr_id})
		 </if>
		 <if test='oprb_chk_spic_usr_id != null and oprb_chk_spic_usr_id != ""'>
		   and (soc.oprb_chk_spic_usr_id = #{oprb_chk_spic_usr_id})
		 </if>
		 <if test='oprb_chk_wkpl_loc_id != null and oprb_chk_wkpl_loc_id != ""'>
		   and soct.oprb_chk_wkpl_loc_id = #{oprb_chk_wkpl_loc_id}
		 </if>
		 <if test='oprb_chk_prst_cd != null and oprb_chk_prst_cd != ""'>
		   and soc.oprb_chk_prst_cd = #{oprb_chk_prst_cd}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = soc.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
	</select>
	
	<select id="selectOprbChkKey" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectOprbChkKey */
		select concat('OPRB', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(oprb_chk_tgt_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_oprb_chk_tgt soct 
		 where 1=1
		   and substring(oprb_chk_tgt_id, 1, 10) = concat('OPRB', to_char(now(), 'YYMMDD'))
	</select>
	
	<!-- 작업 시작 전 점검 대상 저장 -->
    <insert id="insertOprbChkTgt" parameterType="sqlMap">
        /* insertOprbChkTgt */
        insert into tb_sh_oprb_chk_tgt (
			oprb_chk_tgt_id 
		   ,wkpl_id 
		   ,oprb_chk_supe_usr_id 
		   ,oprb_chk_supe_spic_usr_id
		   ,oprb_chk_tgt_nm 
		   ,oprb_chk_wkpl_loc_id 
		   ,oprb_chk_dtl_loc_nm 
		   ,oprb_chk_note_txt 
		   ,usg_yn 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{oprb_chk_tgt_id}
		   ,#{wkpl_id}
		   ,#{oprb_chk_supe_usr_id}
		   ,#{oprb_chk_supe_spic_usr_id}
		   ,#{oprb_chk_tgt_nm}
		   ,#{oprb_chk_wkpl_loc_id}
		   ,#{oprb_chk_dtl_loc_nm}
		   ,#{oprb_chk_note_txt}
		   ,#{usg_yn}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <!-- 작업 시작 전 점검 대상 수정 -->
    <update id="updateOprbChkTgt" parameterType="sqlMap">
        /* updateOprbChkTgt */
        update tb_sh_oprb_chk_tgt 
		   set wkpl_id = #{wkpl_id}
		      ,oprb_chk_supe_usr_id = #{oprb_chk_supe_usr_id}
		      ,oprb_chk_supe_spic_usr_id = #{oprb_chk_supe_spic_usr_id}
		      ,oprb_chk_tgt_nm = #{oprb_chk_tgt_nm}
		      ,oprb_chk_wkpl_loc_id = #{oprb_chk_wkpl_loc_id}
		      ,oprb_chk_dtl_loc_nm = #{oprb_chk_dtl_loc_nm}
		      ,oprb_chk_note_txt = #{oprb_chk_note_txt}
		      ,usg_yn = #{usg_yn}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}
    </update>
    
    <!-- 작업 시작 전 점검 대상 장비 저장 -->
    <insert id="insertOprbChkTgtEqp" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(oprb_chk_eqp_sn), '0') + 1 
			  from tb_sh_oprb_chk_tgt_eqp socte 
			 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}     
	    </selectKey>
        /* insertOprbChkTgtEqp */
        insert into tb_sh_oprb_chk_tgt_eqp (
			oprb_chk_tgt_id 
		   ,oprb_chk_eqp_sn 
		   ,oprb_chk_eqp_type_cd 
		   ,oprb_chk_eqp_nm 
		   ,wkpl_id 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{oprb_chk_tgt_id}
		   ,#{sn}::numeric
		   ,#{oprb_chk_eqp_type_cd}
		   ,#{oprb_chk_eqp_nm}
		   ,#{wkpl_id}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <!-- 작업 시작 전 점검 대상 장비 수정 -->
    <update id="updateOprbChkTgtEqp" parameterType="sqlMap">
        /* updateOprbChkTgtEqp */
        update tb_sh_oprb_chk_tgt_eqp 
		   set oprb_chk_eqp_type_cd = #{oprb_chk_eqp_type_cd}
		      ,oprb_chk_eqp_nm = #{oprb_chk_eqp_nm}
		      ,wkpl_id = #{wkpl_id}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}
		   and oprb_chk_eqp_sn = #{oprb_chk_eqp_sn}::numeric
    </update>
    
    <!-- 작업 시작 전 점검 대상 장비 수정 -->
    <delete id="deleteOprbChkTgtEqp" parameterType="sqlMap">
        /* deleteOprbChkTgtEqp */
        delete from tb_sh_oprb_chk_tgt_eqp 
		 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}
		   and oprb_chk_eqp_sn = #{oprb_chk_eqp_sn}::numeric
    </delete>
    
    <select id="selectOprbChkTgtMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkTgtMgnt */
		select wkpl_id
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,oprb_chk_tgt_id
		      ,oprb_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = oprb_chk_supe_usr_id) as oprb_chk_supe_usr_nm
		      ,oprb_chk_supe_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = oprb_chk_supe_spic_usr_id) as oprb_chk_supe_spic_usr_nm
		      ,oprb_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = oprb_chk_wkpl_loc_id) as oprb_chk_wkpl_loc_nm
		      ,oprb_chk_dtl_loc_nm
		      ,oprb_chk_tgt_nm
		      ,oprb_chk_note_txt
		      ,usg_yn
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = upt_usr_id) as lsch_nm
		  from tb_sh_oprb_chk_tgt soct
		 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}
	</select>
	
	<select id="selectOprbChkTgtEqp" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkTgtEqp */
		select oprb_chk_eqp_sn
		      ,oprb_chk_eqp_type_cd
		      ,oprb_chk_eqp_nm
		  from tb_sh_oprb_chk_tgt_eqp socte 
		 where oprb_chk_tgt_id = #{oprb_chk_tgt_id}
	</select>
	
	<select id="selectOprbChkMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkMgnt */
		select distinct soct.wkpl_id
		      ,fn_get_cd('ST00000002', soct.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,soct.oprb_chk_tgt_id
		      ,soc.oprb_chk_rspn_usr_id
		      ,soc.oprb_chk_spic_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_rspn_usr_id) as oprb_chk_rspn_usr_nm
			  ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_spic_usr_id) as oprb_chk_spic_usr_nm
			  ,soct.oprb_chk_supe_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soct.oprb_chk_supe_usr_id) as oprb_chk_supe_usr_nm
			  ,soct.oprb_chk_supe_spic_usr_id
			  ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soct.oprb_chk_supe_spic_usr_id) as oprb_chk_supe_spic_usr_nm
		      ,soct.oprb_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = soct.oprb_chk_wkpl_loc_id) as oprb_chk_wkpl_loc_nm
		      ,soct.oprb_chk_dtl_loc_nm
		      ,soct.oprb_chk_tgt_nm
		      ,soct.oprb_chk_note_txt
		      ,soct.usg_yn
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soct.upt_usr_id) as lsch_nm
		  from tb_sh_oprb_chk_tgt soct
		  join tb_sh_oprb_chk soc
		    on soct.oprb_chk_tgt_id = soc.oprb_chk_tgt_id
		 where soc.oprb_chk_id = #{oprb_chk_id}
	</select>
	
	<select id="selectOprbChkEqp" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkEqp */
		select distinct soc.oprb_chk_id 
			  ,substring(soc.oprb_chk_schd_dt , 0, 5) || '-' || substring(soc.oprb_chk_schd_dt, 5, 2) || '-' || substring(soc.oprb_chk_schd_dt, 7, 2) as oprb_chk_schd_dt
		      ,soc.oprb_chk_rspn_usr_id
		      ,soc.oprb_chk_spic_usr_id
		      ,case when soc.oprb_chk_hm = '' and soc.oprb_chk_dt = '' then ''
		      		else substring(soc.oprb_chk_dt , 0, 5) || '-' || substring(soc.oprb_chk_dt, 5, 2) || '-' || substring(soc.oprb_chk_dt, 7, 2) || ' ' || substring(soc.oprb_chk_hm, 0, 3) || ':' || substring(soc.oprb_chk_hm, 3, 2) end as oprb_chk_dt_hm
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_rspn_usr_id ) as oprb_chk_rspn_usr_nm
			  ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
			    from tb_co_user tcu 
			    where tcu.usr_id = soc.oprb_chk_spic_usr_id ) as oprb_chk_spic_usr_nm
			  ,soc.oprb_chk_prst_cd
		      ,fn_get_cd('SH00000048', soc.oprb_chk_prst_cd,'NM',#{SESS_LANG}) as oprb_chk_prst_cd_nm
		      ,case when NULLIF(sc.crin_id, '') is null then 'N'
		            else 'Y' end as crin_yn
		  from tb_sh_oprb_chk_tgt soct
		  join tb_sh_oprb_chk soc
		    on soct.oprb_chk_tgt_id = soc.oprb_chk_tgt_id
		  left join tb_sh_crin sc 
		    on soc.oprb_chk_id = sc.lnk_chk_id
		 where soc.oprb_chk_tgt_id = #{oprb_chk_tgt_id}
		   and soc.oprb_chk_schd_dt like #{sch_oprb_chk_schd_mt} || '%'
	</select>
	
	<select id="selectOprbChkTgtAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkTgtAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_oprb_chk_tgt soct	
		    on u.usr_id = soct.crt_usr_id 
		 where (u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		          or soct.oprb_chk_supe_spic_usr_id = #{SESS_ID}
		          or soct.oprb_chk_supe_usr_id = #{SESS_ID})
		   and soct.oprb_chk_tgt_id = #{tgt_id}              
		   and u.usg_yn = 'Y'
	</select>
	
	<select id="selectOprbChkAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_oprb_chk soc	
		    on u.usr_id = soc.oprb_chk_rspn_usr_id
		 where (u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		         or exists (select 1 from tb_sh_oprb_chk_tgt soct
		         			 where soc.oprb_chk_tgt_id = soct.oprb_chk_tgt_id
		         			   and soct.oprb_chk_supe_spic_usr_id = #{SESS_ID}))
		   and soc.oprb_chk_id = #{oprb_chk_id}  
		   and soc.oprb_chk_prst_cd in ('10', '20')            
		   and u.usg_yn = 'Y'
	</select>
	
	<select id="selectOprbChkBasicRglt" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkBasicRglt */
		select soc.oprb_chk_id
		      ,soc.oprb_chk_dt 
		      ,soc.oprb_chk_hm 
		      ,substring(soc.oprb_chk_hm,1,2) as oprb_chk_hm_h 
		      ,substring(soc.oprb_chk_hm,3,4) as oprb_chk_hm_s 
		      ,soc.oprb_chk_rspn_usr_id 
		      ,soc.wkpl_id
		      ,substring(soc.oprb_chk_schd_dt , 0, 5) || '-' || substring(soc.oprb_chk_schd_dt, 5, 2) || '-' || substring(soc.oprb_chk_schd_dt, 7, 2) as oprb_chk_schd_dt
		      ,soct.oprb_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = soct.oprb_chk_wkpl_loc_id) as oprb_chk_wkpl_loc_nm
		      ,soct.oprb_chk_dtl_loc_nm
		      ,soct.oprb_chk_note_txt
		      ,soct.oprb_chk_supe_usr_id
		      ,soct.oprb_chk_tgt_nm
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_rspn_usr_id ) as oprb_chk_rspn_usr_nm
			  ,(select case when 'KO' = 'KO' then tcu.usr_ko_nm 
						    when 'KO' = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = soc.oprb_chk_spic_usr_id ) as oprb_chk_spic_usr_nm
			  ,oprb_chk_spic_usr_id
		      ,sc.crin_id
		      ,case when NULLIF(sc.crin_id, '') is null then 'N'
		            else 'Y' end as crin_yn
		  from tb_sh_oprb_chk soc 
		  join tb_sh_oprb_chk_tgt soct
		    on soct.oprb_chk_tgt_id = soc.oprb_chk_tgt_id
		  left join tb_sh_crin sc
		    on soc.oprb_chk_id = sc.lnk_chk_id
		 where soc.oprb_chk_id = #{oprb_chk_id}
	</select>
	
	<select id="selectOprbChkCrinRslt" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkCrinRslt */
		select actn_hope_dt 
		      ,crin_actn_schd_usr_id
		      ,crin_txt 
		      ,crin_img_atfl_no 
		      ,crin_risk_tp_cd
		      ,fn_get_cd('SH00000063', crin_risk_tp_cd,'NM',#{SESS_LANG}) as crin_risk_tp_cd_nm
		      ,crin_risk_tp_cd_2
		      ,fn_get_cd('SH00000068', crin_risk_tp_cd_2,'NM',#{SESS_LANG}) as crin_risk_tp_cd_2_nm
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sc.crin_actn_schd_usr_id ) as crin_actn_schd_usr_nm
		  from tb_sh_crin sc 
		  join tb_sh_oprb_chk soc
		    on sc.lnk_chk_id = soc.oprb_chk_id
		 where soc.oprb_chk_id = #{oprb_chk_id}
	</select>
	
	<select id="selectWknsChkCrinRslt" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkCrinRslt */
		select actn_hope_dt 
		      ,crin_actn_schd_usr_id
		      ,crin_txt 
		      ,crin_img_atfl_no 
		      ,crin_risk_tp_cd
		      ,fn_get_cd('SH00000063', crin_risk_tp_cd,'NM',#{SESS_LANG}) as crin_risk_tp_cd_nm
		      ,crin_risk_tp_cd_2
		      ,fn_get_cd('SH00000068', crin_risk_tp_cd_2,'NM',#{SESS_LANG}) as crin_risk_tp_cd_2_nm
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sc.crin_actn_schd_usr_id ) as crin_actn_schd_usr_nm
		  from tb_sh_crin sc 
		  join tb_sh_circ_chk soc
		    on sc.lnk_chk_id = soc.circ_chk_id
		 where soc.circ_chk_id = #{circ_chk_id}
	</select>
	
	<select id="selectOprbChkRsltList" parameterType="sqlMap" resultType="sqlMap">
		/* selectOprbChkRsltList */
		select oprn_bf_chec_cl_cd 
		      ,oprn_bf_chec_dtl_cl_cd
		      ,oprn_bf_chec_sn
		      ,chec_lang_cd
		      ,fn_get_cd('ST00000007', oprn_bf_chec_cl_cd,'NM',#{SESS_LANG}) as oprn_bf_chec_cl_cd_nm
		      ,oprn_bf_chec_in_cl_cd 
		      ,oprn_bf_chec_txt 
		      ,chec_chk_rslt_vl 
		  from tb_sh_oprb_chk_rslt socr
		 where oprb_chk_id = #{oprb_chk_id}
		 order by oprn_bf_chec_cl_cd asc, oprn_bf_chec_dtl_cl_cd asc, oprn_bf_chec_sn asc
	</select>
	
	<select id="selectOprbCrinKey" parameterType="sqlMap" resultType="String">
		/* selectOprbCrinKey */
		select concat('CRIN', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(crin_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_crin
		 where 1=1
		   and substring(crin_id, 1, 10) = concat('CRIN', to_char(now(), 'YYMMDD'))
	</select>
	
	<!-- 시정 지시서 insert -->
    <insert id="insertOprbChkCrinRslt" parameterType="sqlMap">
        /* insertOprbChkCrinRslt */
        insert into tb_sh_crin (
		 	crin_id 
		   ,wkpl_id 
		   ,crin_cl_cd 
		   ,actn_hope_dt 
		   ,crin_actn_schd_usr_id 
		   ,crin_txt 
		   ,crin_img_atfl_no 
		   ,lnk_chk_id 
		   ,crin_chk_dt
		   ,crin_chk_hm
		   ,crin_chk_wkpl_loc_id
		   ,crin_chk_dtl_loc_nm
		   ,crin_chk_supe_usr_id
		   ,crin_chk_note_txt
		   ,crin_chk_tgt_nm
		   ,crin_risk_tp_cd
		   ,crin_risk_tp_cd_2
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{crin_id}
		   ,#{wkpl_id}
		   ,'CRN01'
		   ,#{actn_hope_dt}
		   ,#{crin_actn_schd_usr_id}
		   ,#{crin_txt}
		   ,#{crin_img_atfl_no}
		   ,#{oprb_chk_id}
		   ,#{crin_chk_dt}
		   ,#{crin_chk_hm}
		   ,#{crin_chk_wkpl_loc_id}
		   ,#{crin_chk_dtl_loc_nm}
		   ,#{crin_chk_supe_usr_id}
		   ,#{crin_chk_note_txt}
		   ,#{crin_chk_tgt_nm}
		   ,#{crin_risk_tp_cd}
		   ,#{crin_risk_tp_cd_2}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <!-- 시정 지시서 insert -->
    <insert id="insertWknsChkCrinRslt" parameterType="sqlMap">
        /* insertWknsChkCrinRslt */
        insert into tb_sh_crin (
		 	crin_id 
		   ,wkpl_id 
		   ,crin_cl_cd 
		   ,actn_hope_dt 
		   ,crin_actn_schd_usr_id 
		   ,crin_txt 
		   ,crin_img_atfl_no 
		   ,lnk_chk_id 
		   ,crin_chk_dt
		   ,crin_chk_hm
		   ,crin_chk_wkpl_loc_id
		   ,crin_chk_dtl_loc_nm
		   ,crin_chk_supe_usr_id
		   ,crin_chk_note_txt
		   ,crin_chk_tgt_nm
		   ,crin_risk_tp_cd
		   ,crin_risk_tp_cd_2
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{crin_id}
		   ,#{wkpl_id}
		   ,#{crin_cl_cd}
		   ,#{actn_hope_dt}
		   ,#{crin_actn_schd_usr_id}
		   ,#{crin_txt}
		   ,#{crin_img_atfl_no}
		   ,#{circ_chk_id}
		   ,#{crin_chk_dt}
		   ,#{crin_chk_hm}
		   ,#{crin_chk_wkpl_loc_id}
		   ,#{crin_chk_dtl_loc_nm}
		   ,#{crin_chk_supe_usr_id}
		   ,#{crin_chk_note_txt}
		   ,#{crin_chk_tgt_nm}
		   ,#{crin_risk_tp_cd}
		   ,#{crin_risk_tp_cd_2}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <!-- 시정 지시서 insert -->
    <insert id="insertCrrDtCrinMb" parameterType="sqlMap">
        /* insertCrrDtCrinMb */
        insert into tb_sh_crin (
		 	crin_id 
		   ,wkpl_id 
		   ,crin_cl_cd 
		   ,actn_hope_dt 
		   ,crin_actn_schd_usr_id 
		   ,crin_txt 
		   ,crin_img_atfl_no 
		   ,lnk_chk_id 
		   ,crin_chk_dt
		   ,crin_chk_hm
		   ,crin_chk_wkpl_loc_id
		   ,crin_chk_dtl_loc_nm
		   ,crin_chk_supe_usr_id
		   ,crin_chk_note_txt
		   ,crin_chk_tgt_nm
		   ,crin_risk_tp_cd
		   ,crin_risk_tp_cd_2
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{crin_id}
		   ,#{wkpl_id}
		   ,'CRN04'
		   ,#{actn_hope_dt}
		   ,#{crin_actn_schd_usr_id}
		   ,#{crin_txt}
		   ,#{crin_img_atfl_no}::numeric
		   ,#{circ_chk_id}
		   ,#{crin_chk_dt}
		   ,#{crin_chk_hm}
		   ,#{crin_chk_wkpl_loc_id}
		   ,#{crin_chk_dtl_loc_nm}
		   ,#{crin_chk_supe_usr_id}
		   ,#{crin_chk_note_txt}
		   ,#{crin_chk_tgt_nm}
		   ,#{crin_risk_tp_cd}
		   ,#{crin_risk_tp_cd_2}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <!-- 시정 지시서 update -->
    <update id="updateOprbChkCrinRslt" parameterType="sqlMap">
        /* updateOprbChkCrinRslt */
        update tb_sh_crin
		    set wkpl_id = #{wkpl_id}
		       ,actn_hope_dt = #{actn_hope_dt}
		       ,crin_actn_schd_usr_id = #{crin_actn_schd_usr_id}
		       ,crin_txt = #{crin_txt}
		       ,crin_img_atfl_no = #{crin_img_atfl_no}
		       ,crin_chk_dt = #{crin_chk_dt}
		       ,crin_chk_hm = #{crin_chk_hm}
		       ,crin_chk_wkpl_loc_id = #{crin_chk_wkpl_loc_id}
		       ,crin_chk_dtl_loc_nm = #{crin_chk_dtl_loc_nm}
		       ,crin_chk_supe_usr_id = #{crin_chk_supe_usr_id}
		       ,crin_chk_note_txt = #{crin_chk_note_txt}
		       ,crin_chk_tgt_nm = #{crin_chk_tgt_nm}
		       ,crin_risk_tp_cd = #{crin_risk_tp_cd}
		       ,crin_risk_tp_cd_2 = #{crin_risk_tp_cd_2}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where crin_id = #{crin_id}
    </update>
    
    <!-- 작업 시작 전 점검 기본 정보 update -->
    <update id="updateOprbChkBasicRglt" parameterType="sqlMap">
        /* updateOprbChkBasicRglt */
        update tb_sh_oprb_chk 
		    set oprb_chk_dt = #{oprb_chk_dt}
		       ,oprb_chk_hm = #{oprb_chk_hm}
		       ,oprb_chk_rspn_usr_id = #{oprb_chk_rspn_usr_id}
		       ,oprb_chk_spic_usr_id = #{oprb_chk_spic_usr_id}
		       ,oprb_chk_prst_cd = #{oprb_chk_prst_cd}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where oprb_chk_id = #{oprb_chk_id}
    </update>
    
    <!-- 작업 시작 전 점검 Status 정보 update -->
    <update id="updateOprbChkStatus" parameterType="sqlMap">
        /* updateOprbChkStatus */
        update tb_sh_oprb_chk 
		    set oprb_chk_prst_cd = #{oprb_chk_prst_cd}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where oprb_chk_id = #{oprb_chk_id}
    </update>
    
    <!-- 순회점검 기본 정보 update -->
    <update id="updateWknsChkRglt" parameterType="sqlMap">
        /* updateWknsChkRglt */
        update tb_sh_circ_chk 
		    set circ_chk_dt = #{circ_chk_dt}
		       ,circ_chk_hm = #{circ_chk_hm}
		       ,circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
		       ,circ_chk_prst_cd = #{circ_chk_prst_cd}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where circ_chk_id = #{circ_chk_id}
    </update>
    
    <!-- 순회점검 Status 정보 update -->
    <update id="updateWknsChkStatus" parameterType="sqlMap">
        /* updateWknsChkStatus */
        update tb_sh_circ_chk 
		    set circ_chk_prst_cd = #{circ_chk_prst_cd}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where circ_chk_id = #{circ_chk_id}
    </update>
    
    <!-- 작업 시작 전 점검 결과 update -->
    <update id="updateOprbChkRsltList" parameterType="sqlMap">
        /* updateOprbChkRsltList */
        update tb_sh_oprb_chk_rslt 
		    set chec_chk_rslt_vl = #{chec_chk_rslt_vl}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where oprb_chk_id = #{oprb_chk_id}
		    and oprn_bf_chec_cl_cd = #{oprn_bf_chec_cl_cd}
		    and oprn_bf_chec_dtl_cl_cd = #{oprn_bf_chec_dtl_cl_cd}
		    and oprn_bf_chec_sn = #{oprn_bf_chec_sn}::numeric
		    and chec_lang_cd = #{chec_lang_cd}
    </update>
    
    <!-- 시정지시서 삭제 -->
    <update id="deleteOprbChkCrinRslt" parameterType="sqlMap">
        /* deleteOprbChkCrinRslt */
        delete from tb_sh_crin where crin_id = #{crin_id}
    </update>
    
    <select id="selectCircTgtChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCircTgtChkList */
		select circ_chk_tgt_id 
		      ,wkpl_id 
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,circ_chk_supe_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
		      ,circ_chk_tgt_nm 
		      ,circ_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
		      ,circ_chk_dtl_loc_nm 
		      ,circ_chk_note_txt 
		      ,usg_yn 
		      ,crt_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = crt_usr_id) as fscr_nm
		      ,to_char(crt_dt, 'YYYY-MM-DD') || ' ' || to_char(crt_dt, 'HH24:MI') as crt_dt
		  from tb_sh_circ_chk_tgt scct
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and wkpl_id = #{wkpl_id}
		 </if>
		 <if test='circ_chk_tgt_nm != null and circ_chk_tgt_nm != ""'>
		   and circ_chk_tgt_nm like '%' || #{circ_chk_tgt_nm} || '%'
		 </if>
		 <if test='circ_chk_supe_usr_id != null and circ_chk_supe_usr_id != ""'>
		   and circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
		 </if>
		 <if test='circ_chk_wkpl_loc_id != null and circ_chk_wkpl_loc_id != ""'>
		   and circ_chk_wkpl_loc_id = #{circ_chk_wkpl_loc_id}
		 </if>
		 <if test='usg_yn != null and usg_yn != ""'>
		   and usg_yn = #{usg_yn}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = scct.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='sch_gb != null and sch_gb == "tourch"'>
		   and chec_cl_cd = 'CE008'
		 </if>
		 <if test='sch_gb != null and sch_gb == "tour"'>
		   and chec_cl_cd != 'CE008'
		 </if>
	</select>
	
	<select id="selectWkChkTgtAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectWkChkTgtAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_circ_chk_tgt scct	
		    on u.usr_id = scct.crt_usr_id 
		 where u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		   and scct.circ_chk_tgt_id = #{circ_chk_tgt_id}              
		   and u.usg_yn = 'Y'
	</select>
	
	<select id="selectWknsChkTgtMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkTgtMgnt */
		select scct.wkpl_id
		      ,fn_get_cd('ST00000002', scct.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,scct.circ_chk_tgt_id
		      ,scct.circ_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = scct.circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
		      ,scct.circ_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = scct.circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
		      ,scct.circ_chk_dtl_loc_nm
		      ,scct.circ_chk_tgt_nm
		      ,scct.circ_chk_note_txt
		      ,scct.usg_yn
		      ,scct.circ_chk_cyc_cd
		      ,fn_get_cd('SH00000021', scct.circ_chk_cyc_cd,'NM',#{SESS_LANG}) as circ_chk_cyc_cd_nm	-- 점검 주기
		      ,scct.chec_cl_cd
		      ,fn_get_cd('ST00000018', scct.chec_cl_cd,'NM',#{SESS_LANG}) as chec_cl_cd_nm	-- 체크리스트 구분
		  from tb_sh_circ_chk_tgt scct
		 where scct.circ_chk_tgt_id = #{circ_chk_tgt_id}
	</select>
	
	<select id="selectWknsChkTgtAtndList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkTgtAtndList */
		select circ_chk_atnd_sn 
		      ,circ_chk_atnd_cl_cd 
		      ,circ_chk_atnc_usr_id 
		      ,circ_chk_atnd_nm
		      ,circ_chk_atnd_pstn_nm 
		      ,circ_chk_atnd_dept_nm 
		      ,circ_chk_atnd_tphn 
		      ,circ_chk_atnd_emad 
		  from tb_sh_circ_chk_tgt_atnd sccta 
		 where circ_chk_tgt_id = #{circ_chk_tgt_id}
	</select>
	
	<update id="updateWknsChkTgt" parameterType="sqlMap">
        /* updateWknsChkTgt */
        update tb_sh_circ_chk_tgt
		   set wkpl_id = #{wkpl_id}
		      ,circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
		      ,circ_chk_tgt_nm = #{circ_chk_tgt_nm}
		      ,circ_chk_cyc_cd = #{circ_chk_cyc_cd}
		      ,circ_chk_wkpl_loc_id = #{circ_chk_wkpl_loc_id}
		      ,circ_chk_dtl_loc_nm = #{circ_chk_dtl_loc_nm}
		      ,circ_chk_note_txt = #{circ_chk_note_txt}
		      ,chec_cl_cd = #{chec_cl_cd}
		      ,usg_yn = #{usg_yn}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where circ_chk_tgt_id = #{circ_chk_tgt_id}
    </update>
	
	<!-- 순회점검 참석자 insert -->
    <insert id="insertWknsTgtAtndList" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(circ_chk_atnd_sn), '0') + 1 
			  from tb_sh_circ_chk_tgt_atnd sccta 
			 where circ_chk_tgt_id = #{circ_chk_tgt_id}     
	    </selectKey>
        /* insertWknsTgtAtndList */
        insert into tb_sh_circ_chk_tgt_atnd (
			circ_chk_tgt_id 
		   ,circ_chk_atnd_sn 
		   ,wkpl_id 
		   ,circ_chk_atnd_cl_cd 
		   ,circ_chk_atnc_usr_id 
		   ,circ_chk_atnd_nm
		   ,circ_chk_atnd_pstn_nm
		   ,circ_chk_atnd_dept_nm 
		   ,circ_chk_atnd_tphn 
		   ,circ_chk_atnd_emad 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{circ_chk_tgt_id}
		   ,#{sn}
		   ,#{wkpl_id}
		   ,#{circ_chk_atnd_cl_cd}
		   ,#{circ_chk_atnc_usr_id}
		   ,#{circ_chk_atnd_nm}
		   ,#{circ_chk_atnd_pstn_nm}
		   ,#{circ_chk_atnd_dept_nm}
		   ,#{circ_chk_atnd_tphn}
		   ,#{circ_chk_atnd_emad}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <update id="updateWknsTgtAtndList" parameterType="sqlMap">
        /* updateWknsTgtAtndList */
        update tb_sh_circ_chk_tgt_atnd
		   set wkpl_id = #{wkpl_id}
		      ,circ_chk_atnd_cl_cd = #{circ_chk_atnd_cl_cd}
		      ,circ_chk_atnc_usr_id = #{circ_chk_atnc_usr_id}
		      ,circ_chk_atnd_nm = #{circ_chk_atnd_nm}
		      ,circ_chk_atnd_pstn_nm = #{circ_chk_atnd_pstn_nm}
		      ,circ_chk_atnd_dept_nm = #{circ_chk_atnd_dept_nm}
		      ,circ_chk_atnd_tphn = #{circ_chk_atnd_tphn}
		      ,circ_chk_atnd_emad = #{circ_chk_atnd_emad}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where circ_chk_tgt_id = #{circ_chk_tgt_id}
		   and circ_chk_atnd_sn = #{circ_chk_atnd_sn}::numeric
    </update>
    
    <update id="deleteWknsTgtAtndList" parameterType="sqlMap">
        /* deleteWknsTgtAtndList */
        delete from tb_sh_circ_chk_tgt_atnd
		 where circ_chk_tgt_id = #{circ_chk_tgt_id}
		   and circ_chk_atnd_sn = #{circ_chk_atnd_sn}::numeric
    </update>
    
    <select id="selectWknsChkTgtKey" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectWknsChkTgtKey */
		select concat('WTGT', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(circ_chk_tgt_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_circ_chk_tgt scct 
		 where 1=1
		   and substring(circ_chk_tgt_id, 1, 10) = concat('WTGT', to_char(now(), 'YYMMDD'))
	</select>
	
	<insert id="insertWknsChkTgt" parameterType="sqlMap">
        /* insertWknsChkTgt */
        insert into tb_sh_circ_chk_tgt (
		 	circ_chk_tgt_id 
		   ,wkpl_id 
		   ,circ_chk_supe_usr_id 
		   ,circ_chk_tgt_nm
		   ,circ_chk_cyc_cd 
		   ,circ_chk_wkpl_loc_id
		   ,circ_chk_dtl_loc_nm
		   ,circ_chk_note_txt
		   ,chec_cl_cd
		   ,usg_yn
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{circ_chk_tgt_id}
		   ,#{wkpl_id}
		   ,#{circ_chk_supe_usr_id}
		   ,#{circ_chk_tgt_nm}
		   ,#{circ_chk_cyc_cd}
		   ,#{circ_chk_wkpl_loc_id}
		   ,#{circ_chk_dtl_loc_nm}
		   ,#{circ_chk_note_txt}
		   ,#{chec_cl_cd}
		   ,#{usg_yn}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <select id="selectWknsChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkList */
		select circ_chk_id 
		      ,wkpl_id 
		      ,fn_get_cd('ST00000002', wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,circ_chk_tgt_nm 
		      ,circ_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = scc.circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
		      ,circ_chk_dtl_loc_nm
		      ,circ_chk_dt
		      ,circ_chk_hm
		      ,substring(circ_chk_dt , 0, 5) || '-' || substring(circ_chk_dt, 5, 2) || '-' || substring(circ_chk_dt, 7, 2) || ' ' || substring(circ_chk_hm, 0, 3) || ':' || substring(circ_chk_hm, 3, 2) as circ_chk_dttm
		      ,circ_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = scc.circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
		      ,circ_chk_prst_cd
		      ,fn_get_cd('SH00000048', scc.circ_chk_prst_cd,'NM',#{SESS_LANG}) as circ_chk_prst_cd_nm	-- 진행상태 코드
		  from tb_sh_circ_chk scc  
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and scc.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='circ_chk_tgt_nm != null and circ_chk_tgt_nm != ""'>
		   and scc.circ_chk_tgt_nm like '%' || #{circ_chk_tgt_nm} || '%'
		 </if>
		 <if test='sch_circ_chk_st_dt != null and sch_circ_chk_st_dt != ""'>
		   <if test='sch_circ_chk_ed_dt != null and sch_circ_chk_ed_dt != ""'>
		    <![CDATA[
			and scc.circ_chk_schd_dt <= #{sch_circ_chk_ed_dt}
			and scc.circ_chk_schd_dt >= #{sch_circ_chk_st_dt}
			]]>
			</if>
		 </if>
		 <if test='circ_chk_supe_usr_id != null and circ_chk_supe_usr_id != ""'>
		   and scc.circ_chk_supe_usr_id = #{circ_chk_supe_usr_id}
		 </if>
		 <if test='circ_chk_wkpl_loc_id != null and circ_chk_wkpl_loc_id != ""'>
		   and scc.circ_chk_wkpl_loc_id = #{circ_chk_wkpl_loc_id}
		 </if>
		 <if test='circ_chk_prst_cd != null and circ_chk_prst_cd != ""'>
		   and scc.circ_chk_prst_cd = #{circ_chk_prst_cd}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = scc.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
		 <if test='sch_gb != null and sch_gb == "tourch"'>
		   and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd = 'CE008'
		   			  )
		 </if>
		 <if test='sch_gb != null and sch_gb == "tour"'>
		   and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd != 'CE008'
		   			  )
		 </if>
	</select>
	
	<select id="selectWkChkAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectWkChkAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_circ_chk scc	
		    on u.usr_id = scc.circ_chk_supe_usr_id 
		 where u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		   and scc.circ_chk_id = #{circ_chk_id}  
		   and scc.circ_chk_prst_cd in ('10', '20')             
		   and u.usg_yn = 'Y'
	</select>
	
	<select id="selectWknsChkMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkMgnt */
		select circ_chk_id 
		      ,circ_chk_tgt_id
			  ,scc.wkpl_id
			  ,fn_get_cd('ST00000002', scc.wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
			  ,circ_chk_supe_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = circ_chk_supe_usr_id) as circ_chk_supe_usr_nm
			  ,circ_chk_tgt_nm
			  ,circ_chk_dt
			  ,circ_chk_hm
			  ,substring(circ_chk_hm,1,2) as circ_chk_hm_h
			  ,substring(circ_chk_hm,3,4) as circ_chk_hm_s
			  ,circ_chk_cyc_cd
			  ,fn_get_cd('SH00000021', scc.circ_chk_cyc_cd,'NM',#{SESS_LANG}) as circ_chk_cyc_cd_nm	-- 점검 주기
			  ,scc.circ_chk_wkpl_loc_id 
			  ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = scc.circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
		      ,scc.circ_chk_dtl_loc_nm 
		      ,scc.circ_chk_note_txt 
		      ,scc.upt_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = scc.upt_usr_id) as lsch_nm
		      ,crin_id
		      ,case when NULLIF(sc.crin_id, '') is null then 'N'
		            else 'Y' end as crin_yn
		  from tb_sh_circ_chk scc
		  left join tb_sh_crin sc
		    on scc.circ_chk_id = sc.lnk_chk_id
		 where circ_chk_id = #{circ_chk_id}
	</select>
	
	<select id="selectWknsChkAtndList" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkAtndList */
		select circ_chk_atnd_sn 
		      ,circ_chk_atnd_cl_cd 
		      ,circ_chk_atnc_usr_id 
		      ,circ_chk_atnd_nm
		      ,circ_chk_atnd_pstn_nm
		      ,circ_chk_atnd_dept_nm 
		      ,circ_chk_atnd_tphn 
		      ,circ_chk_atnd_emad 
		  from tb_sh_circ_chk_atnd scca 
		 where circ_chk_id = #{circ_chk_id}
	</select>
	
	<select id="selectWknsChkResult" parameterType="sqlMap" resultType="sqlMap">
		/* selectWknsChkResult */
		select circ_chk_id 
		      ,chec_chk_cl_cd 
		      ,circ_chk_chec_sn 
		      ,chec_lang_cd 
		      ,circ_chk_chec_in_cl_cd 
		      ,fn_get_cd('ST00000019', chec_chk_cl_cd,'NM',#{SESS_LANG}) as chec_chk_cl_cd_nm
		      ,circ_chk_tgt_id 
		      ,wkpl_id 
		      ,chec_chk_rslt_vl 
		      ,chec_txt
		  from tb_sh_circ_chk_chec sccc 
		 where circ_chk_id = #{circ_chk_id}
		   and chec_lang_cd = 'KO'
		 order by chec_chk_cl_cd asc, circ_chk_chec_sn asc
	</select>
	
	<!-- 순회점검 참석자 insert -->
    <insert id="insertWknsAtndList" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(circ_chk_atnd_sn), '0') + 1 
			  from tb_sh_circ_chk_atnd scca 
			 where circ_chk_id = #{circ_chk_id}     
	    </selectKey>
        /* insertWknsAtndList */
        insert into tb_sh_circ_chk_atnd (
			circ_chk_id 
		   ,circ_chk_atnd_sn 
		   ,wkpl_id 
		   ,circ_chk_tgt_id
		   ,circ_chk_atnd_cl_cd 
		   ,circ_chk_atnc_usr_id 
		   ,circ_chk_atnd_nm
		   ,circ_chk_atnd_pstn_nm
		   ,circ_chk_atnd_dept_nm 
		   ,circ_chk_atnd_tphn 
		   ,circ_chk_atnd_emad 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{circ_chk_id}
		   ,#{sn}
		   ,#{wkpl_id}
		   ,#{circ_chk_tgt_id}
		   ,#{circ_chk_atnd_cl_cd}
		   ,#{circ_chk_atnc_usr_id}
		   ,#{circ_chk_atnd_nm}
		   ,#{circ_chk_atnd_pstn_nm}
		   ,#{circ_chk_atnd_dept_nm}
		   ,#{circ_chk_atnd_tphn}
		   ,#{circ_chk_atnd_emad}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <update id="updateWknsAtndList" parameterType="sqlMap">
        /* updateWknsAtndList */
        update tb_sh_circ_chk_atnd
		   set wkpl_id = #{wkpl_id}
		      ,circ_chk_atnd_cl_cd = #{circ_chk_atnd_cl_cd}
		      ,circ_chk_atnc_usr_id = #{circ_chk_atnc_usr_id}
		      ,circ_chk_atnd_nm = #{circ_chk_atnd_nm}
		      ,circ_chk_atnd_pstn_nm = #{circ_chk_atnd_pstn_nm}
		      ,circ_chk_atnd_dept_nm = #{circ_chk_atnd_dept_nm}
		      ,circ_chk_atnd_tphn = #{circ_chk_atnd_tphn}
		      ,circ_chk_atnd_emad = #{circ_chk_atnd_emad}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where circ_chk_id = #{circ_chk_id}
		   and circ_chk_atnd_sn = #{circ_chk_atnd_sn}::numeric
    </update>
    
    <update id="deleteWknsAtndList" parameterType="sqlMap">
        /* deleteWknsAtndList */
        delete from tb_sh_circ_chk_atnd
		 where circ_chk_id = #{circ_chk_id}
		   and circ_chk_atnd_sn = #{circ_chk_atnd_sn}::numeric
    </update>
    
    <!-- 작업 시작 전 점검 결과 update -->
    <update id="updateWknsChkRsltList" parameterType="sqlMap">
        /* updateWknsChkRsltList */
        update tb_sh_circ_chk_chec 
		    set chec_chk_rslt_vl = #{chec_chk_rslt_vl}
		       ,upt_usr_id = #{SESS_ID}
		       ,upt_dt = now()
		  where circ_chk_id = #{circ_chk_id}
		    and chec_chk_cl_cd = #{chec_chk_cl_cd}
		    and circ_chk_chec_sn = #{circ_chk_chec_sn}::numeric
		    and chec_lang_cd = #{chec_lang_cd}
    </update>
    
    <select id="selectJntTgtChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntTgtChkList */
		select jnt_chk_tgt_id 
		      ,wkpl_id 
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,jnt_chk_supe_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
		      ,jnt_chk_tgt_nm 
		      ,jnt_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
		      ,jnt_chk_dtl_loc_nm 
		      ,jnt_chk_note_txt 
		      ,usg_yn 
		      ,crt_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = crt_usr_id) as fscr_nm
		      ,to_char(crt_dt, 'YYYY-MM-DD') || ' ' || to_char(crt_dt, 'HH24:MI') as crt_dt
		  from tb_sh_jnt_chk_tgt sjct
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and wkpl_id = #{wkpl_id}
		 </if>
		 <if test='jnt_chk_tgt_nm != null and jnt_chk_tgt_nm != ""'>
		   and jnt_chk_tgt_nm like '%' || #{jnt_chk_tgt_nm} || '%'
		 </if>
		 <if test='jnt_chk_supe_usr_id != null and jnt_chk_supe_usr_id != ""'>
		   and jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
		 </if>
		 <if test='jnt_chk_wkpl_loc_id != null and jnt_chk_wkpl_loc_id != ""'>
		   and jnt_chk_wkpl_loc_id = #{jnt_chk_wkpl_loc_id}
		 </if>
		 <if test='jnt_chk_dtl_loc_nm != null and jnt_chk_dtl_loc_nm != ""'>
		   and jnt_chk_dtl_loc_nm like '%' || #{jnt_chk_dtl_loc_nm} || '%'
		 </if>
		 <if test='usg_yn != null and usg_yn != ""'>
		   and usg_yn = #{usg_yn}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = sjct.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
	</select>
	
	<select id="selectJnChkAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectJnChkAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_jnt_chk_tgt sjct	
		    on u.usr_id = sjct.crt_usr_id 
		 where u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		   and sjct.jnt_chk_tgt_id = #{jnt_chk_tgt_id}              
		   and u.usg_yn = 'Y' 
	</select>
	
	<select id="selectJntChkTgtMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntChkTgtMgnt */
		select wkpl_id
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,jnt_chk_tgt_id
		      ,jnt_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
		      ,jnt_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
		      ,jnt_chk_dtl_loc_nm
		      ,jnt_chk_tgt_nm
		      ,jnt_chk_note_txt
		      ,usg_yn
		      ,chec_cl_cd
		      ,fn_get_cd('ST00000018', chec_cl_cd,'NM',#{SESS_LANG}) as chec_cl_cd_nm	
		  from tb_sh_jnt_chk_tgt sjct
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
	</select>
	
	<select id="selectJntChkTgtAtndList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntChkTgtAtndList */
		select jnt_chk_atnd_sn 
		      ,jnt_chk_atnd_cl_cd 
		      ,jnt_chk_atnc_usr_id 
		      ,jnt_chk_atnd_nm 
		      ,jnt_chk_atnd_pstn_nm
		      ,jnt_chk_atnd_dept_nm 
		      ,jnt_chk_atnd_tphn 
		      ,jnt_chk_atnd_emad 
		  from tb_sh_jnt_chk_tgt_atnd sjcta 
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
		 order by sjcta.jnt_chk_atnd_sn
	</select>
	
	<select id="selectJntTgtDtList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntTgtDtList */
		select to_char(jnt_chk_schd_dttm, 'YYYYMMDD') as jnt_chk_schd_dt
		      ,to_char(jnt_chk_schd_dttm, 'HH24MI') as jnt_chk_schd_tm
		      ,jnt_chk_ttl
		      ,jnt_chk_tgt_id
		  from tb_sh_jnt_chk_plan sjcp 
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
	</select>
	
	<update id="updateJntChkTgt" parameterType="sqlMap">
        /* updateJntChkTgt */
        update tb_sh_jnt_chk_tgt
		   set wkpl_id = #{wkpl_id}
		      ,jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
		      ,jnt_chk_tgt_nm = #{jnt_chk_tgt_nm}
		      ,jnt_chk_wkpl_loc_id = #{jnt_chk_wkpl_loc_id}
		      ,jnt_chk_dtl_loc_nm = #{jnt_chk_dtl_loc_nm}
		      ,jnt_chk_note_txt = #{jnt_chk_note_txt}
		      ,chec_cl_cd = #{chec_cl_cd}
		      ,usg_yn = #{usg_yn}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
    </update>
    
    <select id="selectJntChkTgtKey" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectJntChkTgtKey */
		select concat('JTGT', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(jnt_chk_tgt_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from tb_sh_jnt_chk_tgt sjct 
		 where 1=1
		   and substring(jnt_chk_tgt_id, 1, 10) = concat('JTGT', to_char(now(), 'YYMMDD'))
	</select>
	
	<insert id="insertJntChkTgt" parameterType="sqlMap">
        /* insertJntChkTgt */
        insert into tb_sh_jnt_chk_tgt (
		 	jnt_chk_tgt_id 
		   ,wkpl_id 
		   ,jnt_chk_supe_usr_id 
		   ,jnt_chk_tgt_nm
		   ,jnt_chk_wkpl_loc_id
		   ,jnt_chk_dtl_loc_nm
		   ,jnt_chk_note_txt
		   ,chec_cl_cd
		   ,usg_yn
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{jnt_chk_tgt_id}
		   ,#{wkpl_id}
		   ,#{jnt_chk_supe_usr_id}
		   ,#{jnt_chk_tgt_nm}
		   ,#{jnt_chk_wkpl_loc_id}
		   ,#{jnt_chk_dtl_loc_nm}
		   ,#{jnt_chk_note_txt}
		   ,#{chec_cl_cd}
		   ,#{usg_yn}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <insert id="insertJntTgtAtndList" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(jnt_chk_atnd_sn), '0') + 1 
			  from tb_sh_jnt_chk_tgt_atnd sjcta 
			 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}     
	    </selectKey>
        /* insertJntTgtAtndList */
        insert into tb_sh_jnt_chk_tgt_atnd (
			jnt_chk_tgt_id 
		   ,jnt_chk_atnd_sn 
		   ,wkpl_id 
		   ,jnt_chk_atnd_cl_cd 
		   ,jnt_chk_atnc_usr_id 
		   ,jnt_chk_atnd_nm 
		   ,jnt_chk_atnd_pstn_nm
		   ,jnt_chk_atnd_dept_nm 
		   ,jnt_chk_atnd_tphn 
		   ,jnt_chk_atnd_emad 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{jnt_chk_tgt_id}
		   ,#{sn}
		   ,#{wkpl_id}
		   ,#{jnt_chk_atnd_cl_cd}
		   ,#{jnt_chk_atnc_usr_id}
		   ,#{jnt_chk_atnd_nm}
		   ,#{jnt_chk_atnd_pstn_nm}
		   ,#{jnt_chk_atnd_dept_nm}
		   ,#{jnt_chk_atnd_tphn}
		   ,#{jnt_chk_atnd_emad}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <update id="updateJntTgtAtndList" parameterType="sqlMap">
        /* updateJntTgtAtndList */
        update tb_sh_jnt_chk_tgt_atnd
		   set wkpl_id = #{wkpl_id}
		      ,jnt_chk_atnd_cl_cd = #{jnt_chk_atnd_cl_cd}
		      ,jnt_chk_atnc_usr_id = #{jnt_chk_atnc_usr_id}
		      ,jnt_chk_atnd_nm = #{jnt_chk_atnd_nm}
		      ,jnt_chk_atnd_pstn_nm = #{jnt_chk_atnd_pstn_nm}
		      ,jnt_chk_atnd_dept_nm = #{jnt_chk_atnd_dept_nm}
		      ,jnt_chk_atnd_tphn = #{jnt_chk_atnd_tphn}
		      ,jnt_chk_atnd_emad = #{jnt_chk_atnd_emad}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
		   and jnt_chk_atnd_sn = #{jnt_chk_atnd_sn}::numeric
    </update>
    
    <update id="deleteJntTgtAtndList" parameterType="sqlMap">
        /* deleteJntTgtAtndList */
        delete from tb_sh_jnt_chk_tgt_atnd
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
		   and jnt_chk_atnd_sn = #{jnt_chk_atnd_sn}::numeric
    </update>
    
    <insert id="insertJntTgtDtList" parameterType="sqlMap">
        /* insertJntTgtDtList */
        insert into tb_sh_jnt_chk_plan (
		 	jnt_chk_tgt_id 
		   ,jnt_chk_schd_dttm
		   ,wkpl_id 
		   ,jnt_chk_ttl 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		 ) values (
		 	#{jnt_chk_tgt_id}
		   ,to_timestamp(#{jnt_chk_schd_dttm}, 'YYYYMMDDHH24mi')
		   ,#{wkpl_id}
		   ,#{jnt_chk_ttl}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		 )
    </insert>
    
    <update id="updateJntTgtDtList" parameterType="sqlMap">
        /* updateJntTgtDtList */
        update tb_sh_jnt_chk_plan
		   set jnt_chk_schd_dttm = to_timestamp(#{jnt_chk_schd_dttm}, 'YYYYMMDDHH24mi')
		      ,wkpl_id = #{wkpl_id}
		      ,jnt_chk_ttl = #{jnt_chk_ttl}
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
		   and jnt_chk_schd_dttm = to_timestamp(#{jnt_chk_schd_dttm}, 'YYYYMMDDHH24mi')
    </update>
    
    <update id="deleteJntTgtDtList" parameterType="sqlMap">
        /* deleteJntTgtDtList */
        delete from tb_sh_jnt_chk_plan
		 where jnt_chk_tgt_id = #{jnt_chk_tgt_id}
		   and jnt_chk_schd_dttm = to_timestamp(#{jnt_chk_schd_dttm}, 'YYYYMMDDHH24mi')
    </update>
    
    <select id="selectCoprChkList" parameterType="sqlMap" resultType="sqlMap">
		/* selectCoprChkList */
		select jnt_chk_id 
		      ,wkpl_id 
		      ,fn_get_cd('ST00000002', wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,jnt_chk_tgt_nm 
		      ,to_char(to_timestamp(jnt_chk_schd_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as jnt_chk_schd_dt
		      ,jnt_chk_wkpl_loc_id 
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = sjc.jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
		      ,jnt_chk_dtl_loc_nm
		      ,jnt_chk_dt
		      ,jnt_chk_hm
		      ,case when jnt_chk_dt != '' then to_char(to_timestamp(jnt_chk_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') || ' ' || to_char(to_timestamp(jnt_chk_hm, 'HH24MI'), 'HH24:MI') 
		            else ''
		            end as jnt_chk_dttm
		      ,jnt_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = sjc.jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
		      ,jnt_chk_prst_cd
		      ,fn_get_cd('SH00000048', sjc.jnt_chk_prst_cd,'NM',#{SESS_LANG}) as jnt_chk_prst_cd_nm	-- 진행상태 코드
		  from tb_sh_jnt_chk sjc  
		 where 1=1
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and sjc.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='jnt_chk_tgt_nm != null and jnt_chk_tgt_nm != ""'>
		   and sjc.jnt_chk_tgt_nm like '%' || #{jnt_chk_tgt_nm} || '%'
		 </if>
		 <if test='sch_jnt_chk_schd_st_dt != null and sch_jnt_chk_schd_st_dt != ""'>
		   <if test='sch_jnt_chk_schd_ed_dt != null and sch_jnt_chk_schd_ed_dt != ""'>
		    <![CDATA[
			and sjc.jnt_chk_schd_dt <= #{sch_jnt_chk_schd_ed_dt}
			and sjc.jnt_chk_schd_dt >= #{sch_jnt_chk_schd_st_dt}
			]]>
			</if>
		 </if>
		 <if test='jnt_chk_supe_usr_id != null and jnt_chk_supe_usr_id != ""'>
		   and sjc.jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
		 </if>
		 <if test='jnt_chk_wkpl_loc_id != null and jnt_chk_wkpl_loc_id != ""'>
		   and sjc.jnt_chk_wkpl_loc_id = #{jnt_chk_wkpl_loc_id}
		 </if>
		 <if test='jnt_chk_prst_cd != null and jnt_chk_prst_cd != ""'>
		   and sjc.jnt_chk_prst_cd = #{jnt_chk_prst_cd}
		 </if>
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = sjc.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>
	</select>
	
	<select id="selectCoprChkAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectCoprChkAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_jnt_chk sjc	
		    on u.usr_id = sjc.jnt_chk_supe_usr_id 
		 where u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		   and sjc.jnt_chk_id = #{jnt_chk_id} 
		   and sjc.jnt_chk_prst_cd in ('10', '20')                
		   and u.usg_yn = 'Y'
	</select>
	
	<select id="selectCoprChkMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectCoprChkMgnt */
		select wkpl_id
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,jnt_chk_tgt_id
		      ,jnt_chk_id
		      ,jnt_chk_supe_usr_id
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = jnt_chk_supe_usr_id) as jnt_chk_supe_usr_nm
		      ,jnt_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
		      ,jnt_chk_dtl_loc_nm
		      ,jnt_chk_tgt_nm
		      ,jnt_chk_note_txt
		      ,upt_usr_id 
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = upt_usr_id) as lsch_nm
		      ,jnt_chk_dt
		      ,jnt_chk_hm
		      ,substring(sjc.jnt_chk_hm,1,2) as jnt_chk_hm_h 
		      ,substring(sjc.jnt_chk_hm,3,4) as jnt_chk_hm_s 
		      ,jnt_chk_atfl_no
		      ,jnt_chk_rslt_txt
		  from tb_sh_jnt_chk sjc
		 where jnt_chk_id = #{jnt_chk_id}
	</select>
	
	<select id="selectJntChkAtndList" parameterType="sqlMap" resultType="sqlMap">
		/* selectJntChkAtndList */
		select jnt_chk_atnd_sn 
		      ,jnt_chk_atnd_cl_cd 
		      ,fn_get_cd('SH00000022', jnt_chk_atnd_cl_cd, 'NM', #{SESS_LANG}) as jnt_chk_atnd_cl_cd_nm
		      ,jnt_chk_atnc_usr_id 
		      ,jnt_chk_atnd_nm
		      ,jnt_chk_atnd_pstn_nm
		      ,jnt_chk_atnd_dept_nm 
		      ,jnt_chk_atnd_tphn 
		      ,jnt_chk_atnd_emad 
		  from tb_sh_jnt_chk_atnd sjca 
		 where jnt_chk_id = #{jnt_chk_id}
		 order by sjca.jnt_chk_atnd_sn
	</select>
	
	<update id="updateJntChkMgnt" parameterType="sqlMap">
        /* updateJntChkMgnt */
        update tb_sh_jnt_chk
		   set wkpl_id = #{wkpl_id}
		      ,jnt_chk_supe_usr_id = #{jnt_chk_supe_usr_id}
		      ,jnt_chk_dt = #{jnt_chk_dt}
		      ,jnt_chk_hm = #{jnt_chk_hm}
		      ,jnt_chk_atfl_no = #{jnt_chk_atfl_no}::numeric
		      ,jnt_chk_rslt_txt = #{jnt_chk_rslt_txt}
		      ,jnt_chk_prst_cd = #{jnt_chk_prst_cd}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where jnt_chk_id = #{jnt_chk_id}
    </update>
    
    <update id="updateCoprAprvInfo" parameterType="sqlMap">
        /* updateCoprAprvInfo */
        update tb_sh_jnt_chk
		   set jnt_chk_prst_cd = #{jnt_chk_prst_cd}
		      ,jnt_aprv_no = #{jnt_aprv_no}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where jnt_chk_id = #{jnt_chk_id}
    </update>
    
    <update id="updateTourAprvInfo" parameterType="sqlMap">
        /* updateTourAprvInfo */
        update tb_sh_circ_chk
		   set circ_aprv_no = #{circ_aprv_no}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where circ_chk_id = #{circ_chk_id}
    </update>
    
    <update id="updateCoprChkAprvAf" parameterType="sqlMap">
        /* updateCoprChkAprvAf */
        update tb_sh_jnt_chk
		   set jnt_aprv_no = #{jnt_aprv_no}
		      ,jnt_chk_prst_cd = #{jnt_chk_prst_cd}
		      ,upt_dt = now()
		 where jnt_aprv_no = #{jnt_aprv_no}
    </update>
    
    <update id="updateTourChkAprvAf" parameterType="sqlMap">
        /* updateTourChkAprvAf */
        update tb_sh_circ_chk
		   set circ_aprv_no = #{circ_aprv_no}
		      ,circ_chk_prst_cd = #{circ_chk_prst_cd}
		      ,upt_dt = now()
		 where circ_aprv_no = #{circ_aprv_no}
    </update>
    
    <select id="selectCoprChkAprvDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectCoprChkAprvDtl */
		select wkpl_id
		      ,jnt_chk_tgt_id
		      ,jnt_chk_id
		      ,jnt_chk_supe_usr_id
		      ,jnt_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = jnt_chk_wkpl_loc_id) as jnt_chk_wkpl_loc_nm
		      ,jnt_chk_dtl_loc_nm
		      ,jnt_chk_tgt_nm
		      ,jnt_chk_note_txt
		      ,upt_usr_id 
		      ,jnt_chk_dt
		      ,jnt_chk_hm
		      ,jnt_chk_atfl_no
		      ,jnt_chk_rslt_txt
		      ,jnt_aprv_no
		  from tb_sh_jnt_chk sjc
		 where jnt_aprv_no = #{jnt_aprv_no}
	</select>
	
	<select id="selectTourChkAprvDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectTourChkAprvDtl */
		select wkpl_id
		      ,circ_chk_tgt_id
		      ,circ_chk_id
		      ,circ_chk_supe_usr_id
		      ,circ_chk_wkpl_loc_id
		      ,(select swl.upp_incl_wkpl_loc_nm
		          from tb_sh_wkpl_loc swl 
		         where swl.wkpl_loc_id = circ_chk_wkpl_loc_id) as circ_chk_wkpl_loc_nm
		      ,circ_chk_dtl_loc_nm
		      ,circ_chk_tgt_nm
		      ,circ_chk_note_txt
		      ,upt_usr_id 
		      ,circ_chk_dt
		      ,circ_chk_hm
		      ,circ_chk_atfl_no
		      ,circ_aprv_no
		  from tb_sh_circ_chk scc
		 where circ_aprv_no = #{circ_aprv_no}
	</select>
    
    <insert id="insertJntAtndList" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(jnt_chk_atnd_sn), '0') + 1 
			  from tb_sh_jnt_chk_atnd sjca 
			 where jnt_chk_id = #{jnt_chk_id}     
	    </selectKey>
        /* insertJntTgtAtndList */
        insert into tb_sh_jnt_chk_atnd (
		    jnt_chk_id
		   ,jnt_chk_tgt_id 
		   ,jnt_chk_atnd_sn 
		   ,wkpl_id 
		   ,jnt_chk_atnd_cl_cd 
		   ,jnt_chk_atnc_usr_id 
		   ,jnt_chk_atnd_nm 
		   ,jnt_chk_atnd_dept_nm 
		   ,jnt_chk_atnd_pstn_nm
		   ,jnt_chk_atnd_tphn 
		   ,jnt_chk_atnd_emad 
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
		    #{jnt_chk_id}
		   ,#{jnt_chk_tgt_id}
		   ,#{sn}
		   ,#{wkpl_id}
		   ,#{jnt_chk_atnd_cl_cd}
		   ,#{jnt_chk_atnc_usr_id}
		   ,#{jnt_chk_atnd_nm}
		   ,#{jnt_chk_atnd_dept_nm}
		   ,#{jnt_chk_atnd_pstn_nm}
		   ,#{jnt_chk_atnd_tphn}
		   ,#{jnt_chk_atnd_emad}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <update id="updateJntAtndList" parameterType="sqlMap">
        /* updateJntAtndList */
        update tb_sh_jnt_chk_atnd
		   set wkpl_id = #{wkpl_id}
		      ,jnt_chk_atnd_cl_cd = #{jnt_chk_atnd_cl_cd}
		      ,jnt_chk_atnc_usr_id = #{jnt_chk_atnc_usr_id}
		      ,jnt_chk_atnd_nm = #{jnt_chk_atnd_nm}
		      ,jnt_chk_atnd_dept_nm = #{jnt_chk_atnd_dept_nm}
		      ,jnt_chk_atnd_pstn_nm = #{jnt_chk_atnd_pstn_nm}
		      ,jnt_chk_atnd_tphn = #{jnt_chk_atnd_tphn}
		      ,jnt_chk_atnd_emad = #{jnt_chk_atnd_emad}
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where jnt_chk_id = #{jnt_chk_id}
		   and jnt_chk_atnd_sn = #{jnt_chk_atnd_sn}::numeric
    </update>
    
    <update id="deleteJntAtndList" parameterType="sqlMap">
        /* deleteJntAtndList */
        delete from tb_sh_jnt_chk_atnd
		 where jnt_chk_id = #{jnt_chk_id}
		   and jnt_chk_atnd_sn = #{jnt_chk_atnd_sn}::numeric
    </update>
	
	<!-- 시정지시서 목록 조회 -->											
	<select id="selectCrinList" parameterType="sqlMap" resultType="sqlMap">										
		/* selectCrinList  */									
		select a.wkpl_id					
			  ,fn_get_cmpy(a.wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm				
		      ,a.crin_id									
		      ,a.crin_chk_tgt_nm									
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm									
		      ,a.crin_cl_cd									
		      ,fn_get_cd('SH00000053', a.crin_cl_cd, 'NM', #{SESS_LANG}) as crin_cl_nm									
		      ,a.crin_chk_wkpl_loc_id									
		      ,(select l.upp_incl_wkpl_loc_nm 									
		          from tb_sh_wkpl_loc l									
		         where l.wkpl_id = a.wkpl_id									
		           and l.wkpl_loc_id = a.crin_chk_wkpl_loc_id									
		       ) as crin_chk_wkpl_loc_nm									
		      ,a.crin_chk_dtl_loc_nm									
		      ,to_char(to_timestamp(a.crin_chk_dt || a.crin_chk_hm, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD HH24:MI') as crin_chk_dttm
		      ,to_char(to_timestamp(a.actn_hope_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as actn_hope_dt									
		      ,to_char(to_timestamp(b.acco_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as acco_dt									
		      ,a.crin_chk_supe_usr_id 									
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 									
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 							
				            else u.usr_zh_nm 							
				       end as usr_nm							
			      from tb_co_user u								
			     where u.usr_id = a.crin_chk_supe_usr_id								
			   ) as crin_chk_supe_usr_nm								
			  ,a.crin_actn_schd_usr_id								
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 									
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 							
				            else u.usr_zh_nm 							
				       end as usr_nm							
			      from tb_co_user u								
			     where u.usr_id = a.crin_actn_schd_usr_id								
			   ) as crin_actn_schd_usr_nm								
			  ,(select u.dept_cd 								
			      from tb_co_user u								
			     where u.usr_id = a.upt_usr_id								
			   ) as dept_cd								
			  ,case when b.crin_prst_cd is null or b.crin_prst_cd = '' then '10' else b.crin_prst_cd end crin_prst_cd								
			  ,case when b.crin_prst_cd is null or b.crin_prst_cd = '' then fn_get_cd('SH00000060', '10', 'NM', #{SESS_LANG}) else fn_get_cd('SH00000060', b.crin_prst_cd, 'NM', #{SESS_LANG}) end crin_prst_nm		
			  ,crin_risk_tp_cd
		      ,fn_get_cd('SH00000063', a.crin_risk_tp_cd, 'NM', #{SESS_LANG}) as crin_risk_tp_cd_nm
		      ,crin_risk_tp_cd_2
		      ,fn_get_cd('SH00000068', a.crin_risk_tp_cd_2, 'NM', #{SESS_LANG}) as crin_risk_tp_cd_2_nm						
		  from tb_sh_crin a									
		  left outer join tb_sh_crin_actn b on a.crin_id = b.crin_id									
		 <where>									
		 <if test='wkpl_id != null and wkpl_id != ""'>									
		   and a.wkpl_id = #{wkpl_id}									
		 </if>									
		 <if test='crin_cl_cd != null and crin_cl_cd != ""'>									
		   and a.crin_cl_cd = #{crin_cl_cd}									
		 </if>									
		 <if test='crin_chk_wkpl_loc_id != null and crin_chk_wkpl_loc_id != ""'>									
		   and a.crin_chk_wkpl_loc_id = #{crin_chk_wkpl_loc_id}									
		 </if>									
		 <if test='crin_chk_supe_usr_id != null and crin_chk_supe_usr_id != ""'>									
		   and a.crin_chk_supe_usr_id = #{crin_chk_supe_usr_id}									
		 </if>	
		 <if test='crin_actn_schd_usr_id != null and crin_actn_schd_usr_id != ""'>									
		   and a.crin_actn_schd_usr_id = #{crin_actn_schd_usr_id}									
		 </if>									
		 <if test='crin_prst_cd != null and crin_prst_cd != ""'>									
		   and case when b.crin_prst_cd is null or b.crin_prst_cd = '' then '10' else b.crin_prst_cd end = #{crin_prst_cd}									
		 </if>
		 
		 <if test='crin_chk_st_dt != null and crin_chk_st_dt != ""'>
		   <if test='crin_chk_ed_dt != null and crin_chk_ed_dt != ""'>
		    <![CDATA[
			and a.crin_chk_dt <= replace(#{crin_chk_ed_dt},'-','')
			and a.crin_chk_dt >= replace(#{crin_chk_st_dt},'-','')
			]]>
			</if>
		 </if>
		 <if test='crin_chk_tgt_nm != null and crin_chk_tgt_nm != ""'>									
		   and a.crin_chk_tgt_nm like '%' || #{crin_chk_tgt_nm} || '%'									
		 </if>	
		 <if test='actn_hope_dt != null and actn_hope_dt != ""'>									
		   and a.actn_hope_dt = replace(#{actn_hope_dt},'-','')									
		 </if>		
		 <if test='cmpy_cd != null and cmpy_cd != ""'>
		   and exists (select 1
		      			 from tb_sh_wkpl w
		      			where w.wkpl_id = a.wkpl_id 
		      			  and w.cmpy_cd = #{cmpy_cd}
		   			  )
		 </if>				
		 </where>									
	</select>										
											
	<!-- 시정지시서 상세 조회 -->										
	<select id="selectCrinBasicDtl" parameterType="sqlMap" resultType="sqlMap">										
		/* selectCrinBasicDtl  */									
		select a.crin_id									
		      ,a.wkpl_id									
		      ,a.crin_chk_tgt_nm									
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm									
		      ,a.crin_cl_cd									
		      ,fn_get_cd('SH00000053', a.crin_cl_cd, 'NM', #{SESS_LANG}) as crin_cl_nm									
		      ,to_char(to_timestamp(a.crin_chk_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as crin_chk_dt									
		      ,substring(a.crin_chk_hm,0,3) || ':' || substring(a.crin_chk_hm,3,2) as crin_chk_hm
		      ,substring(a.crin_chk_hm,0,3) as crin_chk_hm_h
		      ,substring(a.crin_chk_hm,3,2) as crin_chk_hm_s									
		      ,a.crin_chk_supe_usr_id									
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 									
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 							
				            else u.usr_zh_nm 							
				       end as usr_nm							
			      from tb_co_user u								
			     where u.usr_id = a.crin_chk_supe_usr_id								
			   ) as crin_chk_supe_usr_nm								
			  ,a.crin_chk_wkpl_loc_id								
			  ,(select l.upp_incl_wkpl_loc_nm 								
		          from tb_sh_wkpl_loc l									
		         where l.wkpl_loc_id = a.crin_chk_wkpl_loc_id									
		       ) as crin_chk_wkpl_loc_nm									
			  ,a.crin_chk_dtl_loc_nm								
			  ,a.crin_chk_tgt_nm						
			  ,(select lang_cd 
	              from tb_co_user tcu
	             where tcu.usr_id = a.crin_actn_schd_usr_id) as lang_cd		
		      ,to_char(to_timestamp(a.actn_hope_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as actn_hope_dt									
		      ,a.crin_actn_schd_usr_id									
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 									
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 							
				            else u.usr_zh_nm 							
				       end as usr_nm							
			      from tb_co_user u								
			     where u.usr_id = a.crin_actn_schd_usr_id								
			   ) as crin_actn_schd_usr_nm								
		      ,a.crin_txt									
		      ,a.crin_img_atfl_no									
		      ,a.lnk_chk_id		
		      ,a.crin_chk_note_txt		
		      ,a.crin_risk_tp_cd
		      ,fn_get_cd('SH00000063', a.crin_risk_tp_cd, 'NM', #{SESS_LANG}) as crin_risk_tp_cd_nm	
		      ,a.crin_risk_tp_cd_2
		      ,fn_get_cd('SH00000068', a.crin_risk_tp_cd_2, 'NM', #{SESS_LANG}) as crin_risk_tp_cd_2_nm			
		  from tb_sh_crin a									
		 where a.crin_id = #{crin_id}									
	</select>										
											
	<!-- 시정지시서 상세 조치 조회 -->										
	<select id="selectCrinActnDtl" parameterType="sqlMap" resultType="sqlMap">										
		/* selectCrinActnDtl  */									
		select a.crin_id									
		      ,a.wkpl_id									
		      ,to_char(to_timestamp(a.acco_dt, 'YYYYMMDDHH24MISS'), 'YYYY-MM-DD') as acco_dt									
		      ,case when a.acco_hm is null or a.acco_hm = '' then '' else substring(a.acco_hm,0,3) || ':' || substring(a.acco_hm,3,2) end as acco_hm
		      ,case when a.acco_hm is null or a.acco_hm = '' then '' else substring(a.acco_hm,0,3) end as acco_hm_h
		      ,case when a.acco_hm is null or a.acco_hm = '' then '' else substring(a.acco_hm,3,2) end as acco_hm_s
		      ,a.crin_actn_rspn_usr_id									
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 									
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 							
				            else u.usr_zh_nm 							
				       end as usr_nm							
			      from tb_co_user u								
			     where u.usr_id = a.crin_actn_rspn_usr_id								
			   ) as crin_actn_rspn_usr_nm								
			  ,a.actn_txt								
			  ,a.crin_img_atfl_no								
			  ,a.crin_prst_cd								
			  ,a.crin_aprv_no								
		  from tb_sh_crin_actn a									
		 where a.crin_id = #{crin_id}									
	</select>										
											
	<!-- 시정지시서 키 채번 -->										
	<select id="selectCrinkey" parameterType="sqlMap" resultType="string">										
		/* selectCrinkey */									
	   select 'CRIN' || to_char(now(), 'YYMMDD') || LPAD((coalesce(substring(max(crin_id), 11), '0')::integer + 1)::text, 4, '0')
  		 from tb_sh_crin a
		where a.crin_id like 'CRIN' || to_char(now(), 'YYMMDD') || '%'						
	</select>										
											
	<!-- 시정지시서 등록 -->										
	<insert id="insertCrinBasicDtl" parameterType="sqlMap">										
        /* insertCrinBasicDtl */											
        with upsert as (											
		update tb_sh_crin									
		   set crin_cl_cd    		= #{crin_cl_cd}							
		      ,actn_hope_dt    			= #{actn_hope_dt}						
		      ,crin_actn_schd_usr_id	= #{crin_actn_schd_usr_id}								
		      ,crin_txt          		= #{crin_txt}							
		      ,crin_img_atfl_no	= case when #{crin_img_atfl_no}::text  = '' then null 								
								   		   	   else #{crin_img_atfl_no}::INTEGER 
						    	 	   	  end		
		      ,crin_chk_dt			    = #{crin_chk_dt}						
		      ,crin_chk_hm			    = #{crin_chk_hm}						
		      ,crin_chk_wkpl_loc_id	= #{crin_chk_wkpl_loc_id}								
		      ,crin_chk_dtl_loc_nm		= #{crin_chk_dtl_loc_nm}							
		      ,crin_chk_supe_usr_id	    = #{crin_chk_supe_usr_id}								
		      ,crin_chk_note_txt		= #{crin_chk_note_txt}						
		      ,crin_chk_tgt_nm			= #{crin_chk_tgt_nm}	
		      ,crin_risk_tp_cd      = #{crin_risk_tp_cd}			
		      ,crin_risk_tp_cd_2      = #{crin_risk_tp_cd_2}		
		      ,upt_usr_id       			= #{username}						
		      ,upt_dt            		= current_timestamp
		 where crin_id = #{crin_id} RETURNING *									
		)									
        insert into tb_sh_crin (											
        	   crin_id										
			  ,wkpl_id								
			  ,crin_cl_cd								
			  ,actn_hope_dt								
			  ,crin_actn_schd_usr_id								
			  ,crin_txt								
			  ,crin_img_atfl_no								
			  ,crin_chk_dt								
			  ,crin_chk_hm								
			  ,crin_chk_wkpl_loc_id								
			  ,crin_chk_dtl_loc_nm								
			  ,crin_chk_supe_usr_id								
			  ,crin_chk_note_txt								
			  ,crin_chk_tgt_nm		
			  ,crin_risk_tp_cd		
			  ,crin_risk_tp_cd_2					
			  ,crt_usr_id								
			  ,crt_dt								
			  ,upt_usr_id								
			  ,upt_dt								
		)									
		select #{crin_id}									
		      ,#{wkpl_id}									
	 		  ,#{crin_cl_cd}								
	 		  ,#{actn_hope_dt}								
			  ,#{crin_actn_schd_usr_id}								
			  ,#{crin_txt}								
			  ,case when #{crin_img_atfl_no}::text  = '' then null 								
	   			    else #{crin_img_atfl_no}::INTEGER 							
   	 		    end								
   	 		  ,#{crin_chk_dt}								
   	 		  ,#{crin_chk_hm}								
   	 		  ,#{crin_chk_wkpl_loc_id}								
   	 		  ,#{crin_chk_dtl_loc_nm}								
   	 		  ,#{crin_chk_supe_usr_id}								
   	 		  ,#{crin_chk_note_txt}								
   	 		  ,#{crin_chk_tgt_nm}			
   	 		  ,#{crin_risk_tp_cd}	
   	 		  ,#{crin_risk_tp_cd_2}				
			  ,#{username}								
			  ,current_timestamp								
			  ,#{username}								
			  ,current_timestamp								
	     where not exists (select * from upsert)										
    </insert>											
    											
    <!-- 시정지시서 조치 등록 -->											
	<insert id="insertCrinActnDtl" parameterType="sqlMap">										
        /* insertCrinActnDtl */											
        with upsert as (											
		update tb_sh_crin_actn									
		   set crin_cl_cd    		= #{crin_cl_cd}							
		      ,acco_dt    				= #{acco_dt}					
		      ,acco_hm					= #{acco_hm}				
		      ,crin_actn_rspn_usr_id	= #{crin_actn_rspn_usr_id}								
		      ,actn_txt          		= #{actn_txt}							
		      ,crin_img_atfl_no	= case when #{crin_img_atfl_no}::text  = '' then null 								
								   		   	   else #{crin_img_atfl_no}::INTEGER 
						    	 	   	  end		
		      ,crin_prst_cd			= #{crin_prst_cd}						
		      ,upt_usr_id       			= #{username}						
		      ,upt_dt            		= current_timestamp
		 where crin_id = #{crin_id} RETURNING *									
		)									
        insert into tb_sh_crin_actn (											
        	   crin_id										
			  ,wkpl_id								
			  ,crin_cl_cd								
			  ,acco_dt								
			  ,acco_hm								
			  ,crin_actn_rspn_usr_id								
			  ,actn_txt								
			  ,crin_img_atfl_no								
			  ,crin_prst_cd								
			  ,crt_usr_id								
			  ,crt_dt								
			  ,upt_usr_id								
			  ,upt_dt								
		)									
		select #{crin_id}									
		      ,#{wkpl_id}									
	 		  ,#{crin_cl_cd}								
	 		  ,#{acco_dt}								
	 		  ,#{acco_hm}								
			  ,#{crin_actn_rspn_usr_id}								
			  ,#{actn_txt}								
			  ,case when #{crin_img_atfl_no}::text  = '' then null 								
	   			    else #{crin_img_atfl_no}::INTEGER 							
   	 		    end								
   	 		  ,#{crin_prst_cd}								
			  ,#{username}								
			  ,current_timestamp								
			  ,#{username}								
			  ,current_timestamp								
	     where not exists (select * from upsert)										
    </insert>	

	<select id="selectSftChkListCnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectSftChkListCnt */
		select 
			(select count(*) from tb_sh_oprb_chk soc where oprb_chk_schd_dt = to_char(now(), 'YYYYMMDD') and oprb_chk_rspn_usr_id = #{SESS_ID}) as oprnbgnbfchkcnt
		   ,(select count(*) from tb_sh_oprb_chk soc where oprb_chk_schd_dt = to_char(now(), 'YYYYMMDD') and oprb_chk_prst_cd in ('40', '50', '60') and oprb_chk_rspn_usr_id = #{SESS_ID}) as myoprnbgnbfchkcnt
		   ,(select count(*) from tb_sh_circ_chk scc where circ_chk_schd_dt = to_char(now(), 'YYYYMMDD') and circ_chk_supe_usr_id = #{SESS_ID} and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd != 'CE008'
		   			  )) as wknstourchkcnt
		   ,(select count(*) from tb_sh_circ_chk scc where circ_chk_schd_dt = to_char(now(), 'YYYYMMDD') and circ_chk_prst_cd in ('40', '50', '60') and circ_chk_supe_usr_id = #{SESS_ID} and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd != 'CE008'
		   			  )) as mywknstourchkcnt
		   ,(select count(*) from tb_sh_circ_chk scc where circ_chk_schd_dt = to_char(now(), 'YYYYMMDD') and circ_chk_supe_usr_id = #{SESS_ID} and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd = 'CE008'
		   			  )) as wknstourchkchcnt
		   ,(select count(*) from tb_sh_circ_chk scc where circ_chk_schd_dt = to_char(now(), 'YYYYMMDD') and circ_chk_prst_cd in ('40', '50', '60') and circ_chk_supe_usr_id = #{SESS_ID} and exists (select 1
		      			 from tb_sh_circ_chk_tgt scct
		      			where scc.circ_chk_tgt_id = scct.circ_chk_tgt_id 
		      			  and scct.chec_cl_cd = 'CE008'
		   			  )) as mywknstourchkchcnt
		   ,(select count(*) from tb_sh_crin sc left join tb_sh_crin_actn sca on sc.crin_id = sca.crin_id where crin_actn_schd_usr_id = #{SESS_ID} and actn_hope_dt = to_char(now(), 'YYYYMMDD')) as crrdrtcnt
		   ,(select count(*) from tb_sh_crin sc left join tb_sh_crin_actn sca on sc.crin_id = sca.crin_id where crin_prst_cd = '30' and actn_hope_dt = to_char(now(), 'YYYYMMDD') and crin_actn_schd_usr_id = #{SESS_ID}) as mycrrdrtcnt
	</select>				
	
	<select id="selectCrinChkAuth" parameterType="sqlMap" resultType="sqlMap">
		/* selectCrinChkAuth */
		select u.usr_id 
		  from tb_co_user u
		  join tb_sh_crin sc	
		    on u.usr_id = sc.crin_actn_schd_usr_id 
		  left join tb_sh_crin_actn sca 
		    on sc.crin_id = sca.crin_id
		 where u.dept_cd = (select r.dept_cd 
		                      from tb_co_user r
		                     where r.usr_id = #{SESS_ID}
		                       and r.usg_yn = 'Y'
		                    )
		   and sc.crin_id = #{crin_id}  
		   and (sca.crin_prst_cd in ('01', '10', '20', '', '40') or crin_prst_cd is null)            
		   and u.usg_yn = 'Y'
	</select>
	
		<!-- 연구실 정기안전정검 목록 조회  -->
	<select id="selectLabssaftyChkMgntList" parameterType="sqlMap" resultType="sqlMap">
		/* selectLabssaftyChkMgntList  */
		select a.labs_sft_chk_id
			  ,a.wkpl_id 
		      ,(select fn_get_cd('CO00000009', b.cmpy_cd, 'NM', #{SESS_LANG}) as cmpy_nm
		          from tb_sh_wkpl b
		         where b.wkpl_id = a.wkpl_id 
		       ) as cmpy_nm
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.labs_sft_chk_yrmn
		      ,a.labs_sft_chk_orga_nm
		      ,a.labs_sft_chk_nm
		      ,a.labs_sft_chk_atfl_no
		      ,(select 
					atfl_nm as name
		        from tb_co_atfl
				where atfl_no = labs_sft_chk_atfl_no limit 1) as atfl_no
			  ,(select 
					atfl_no || '-' || atfl_seq as key
		        from tb_co_atfl
				where atfl_no = labs_sft_chk_atfl_no limit 1) as atfl_key
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
			  ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as dept_cd
		  from shscsm_labs_sft_chk a
		  where LENGTH(labs_sft_chk_yrmn) = 4
		  <if test='wkpl_id != null and wkpl_id != ""'>
		   and a.wkpl_id = #{wkpl_id}
		 </if>
		 <if test='wem_year != null and wem_year != ""'>
		   and substring(labs_sft_chk_yrmn, 0,5) = #{wem_year}
		 </if>
		  order by upt_dt asc
	</select>
	
	<!-- 연구실 정기안전정검 상세 조회 -->
	<select id="selectLabsSaftyChkDtl" parameterType="sqlMap" resultType="sqlMap">
		/* selectLabsSaftyChkDtl */
		select a.wkpl_id
		      ,a.labs_sft_chk_id
		      ,fn_get_cd('ST00000002', a.wkpl_id, 'NM', #{SESS_LANG}) as wkpl_nm
		      ,a.labs_sft_chk_yrmn
		      ,a.labs_sft_chk_orga_nm
		      ,a.labs_sft_chk_nm
		      ,a.labs_sft_chk_txt
		      ,a.labs_sft_chk_atfl_no
			  ,to_char(a.upt_dt, 'YYYY-MM-DD') as upt_dt
		      ,(select case when #{SESS_LANG} = 'KO' then u.usr_ko_nm 
				            when #{SESS_LANG} = 'EN' then u.usr_en_nm 
				            else u.usr_zh_nm 
				       end as usr_nm
			      from tb_co_user u
			     where u.usr_id = a.upt_usr_id
			   ) as lsch_nm
		  from shscsm_labs_sft_chk a
		 where a.labs_sft_chk_id = #{labs_sft_chk_id}
	</select>
	
	<!-- 연구실 정기안전점검 등록 -->
	<insert id="insertLabsSaftyChkDtl" parameterType="sqlMap">
        /* insertLabsSaftyChkDtl */
        with upsert as (
		update shscsm_labs_sft_chk
		   set labs_sft_chk_yrmn    	 = #{labs_sft_chk_yrmn}
		   	  ,labs_sft_chk_orga_nm		 = #{labs_sft_chk_orga_nm}
		      ,labs_sft_chk_nm    		 = #{labs_sft_chk_nm}
		      ,labs_sft_chk_txt			 = #{labs_sft_chk_txt}
		      ,labs_sft_chk_atfl_no = case when #{labs_sft_chk_atfl_no}::text  = '' then null 
							   			    	else #{labs_sft_chk_atfl_no}::INTEGER 
					    	 		    end
		      ,upt_usr_id       		 = #{username}
		      ,upt_dt            	 = current_timestamp
		 where labs_sft_chk_id = #{labs_sft_chk_id} RETURNING *
		)
        insert into shscsm_labs_sft_chk (
        	   wkpl_id
			  ,labs_sft_chk_id
			  ,labs_sft_chk_yrmn
			  ,labs_sft_chk_orga_nm
			  ,labs_sft_chk_nm
			  ,labs_sft_chk_txt
			  ,labs_sft_chk_atfl_no
			  ,crt_usr_id
			  ,crt_dt
			  ,upt_usr_id
			  ,upt_dt
		)
		select #{wkpl_id}
		      ,#{labs_sft_chk_id}
	 		  ,#{labs_sft_chk_yrmn}
	 		  ,#{labs_sft_chk_orga_nm}
	 		  ,#{labs_sft_chk_nm}
			  ,#{labs_sft_chk_txt}
			  ,case when #{labs_sft_chk_atfl_no}::text  = '' then null 
	   			    else #{labs_sft_chk_atfl_no}::INTEGER 
   	 		    end
			  ,#{username}
			  ,current_timestamp
			  ,#{username}
			  ,current_timestamp
	     where not exists (select * from upsert)
    </insert>
    
    <!-- 연구실 정기안전점검 키 채번 -->
	<select id="selectLabsSaftyChkDtlkey" parameterType="sqlMap" resultType="string">
		/* selectLabsSaftyChkDtlkey */
		select concat('LABS', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(labs_sft_chk_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from shscsm_labs_sft_chk slsc
		 where 1=1
		   and substring(labs_sft_chk_id, 1, 10) = concat('LABS', to_char(now(), 'YYMMDD'))
	</select>
	
	<!--  연구실 일상점검 목록 조회 -->
	<select id="selectLabsChkMgntList" parameterType="sqlMap" resultType="sqlMap">
		/* selectLabsChkMgntList */
		select labs_sft_chk_id
		      ,fn_get_cmpy(wkpl_id, 'NM', #{SESS_LANG}) as cmpy_nm
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장
		      ,substring(labs_sft_chk_yrmn, 0,5) || '-' || substring(labs_sft_chk_yrmn, 5,2) as labs_sft_chk_yrmn
		      ,labs_sft_chk_nm
		      ,labs_sft_chk_note_txt
		      ,(select u.dept_cd
			      from tb_co_user u
			     where u.usr_id = upt_usr_id) as dept_cd
		      ,(select distinct
						case when (select count(*) from shscsd_labs_sft_chk_tgt where labs_sft_chk_exct_yn = 'Y' and labs_sft_chk_id = slsc.labs_sft_chk_id) = (select count(*) from shscsd_labs_sft_chk_tgt where labs_sft_chk_id = slsc.labs_sft_chk_id)
						then 'Y' 
						else 'N'
						end as fin_yn
				from shscsd_labs_sft_chk_tgt where labs_sft_chk_id = slsc.labs_sft_chk_id)
		  from shscsm_labs_sft_chk slsc
		 where length(labs_sft_chk_yrmn) = 6
	  	 <if test='wkpl_id != null and wkpl_id != ""'>
		   and wkpl_id = #{wkpl_id}
		 </if>
		 <if test='wem_year != null and wem_year != ""'>
		   and substring(labs_sft_chk_yrmn, 0,5) = #{wem_year}
		 </if>
		 order by crt_dt ASC
	</select>
    
    <!-- 연구실 일상점검 상세 기본정보 조회 -->
	<select id="selectlabsChkMgnt" parameterType="sqlMap" resultType="sqlMap">
		/* selectlabsChkMgnt */
		select wkpl_id
		      ,fn_get_cd('ST00000002', wkpl_id,'NM',#{SESS_LANG}) as wkpl_nm	-- 사업장	
		      ,labs_sft_chk_id
		      ,substring(labs_sft_chk_yrmn, 0,5) || '-' || substring(labs_sft_chk_yrmn, 5,2) as labs_sft_chk_yrmn
		      ,labs_sft_chk_nm
		      ,labs_sft_chk_txt
		      ,labs_sft_chk_note_txt
		      ,(select case when #{SESS_LANG} = 'KO' then tcu.usr_ko_nm 
						    when #{SESS_LANG} = 'EN' then tcu.usr_en_nm 
						    else tcu.usr_zh_nm end as usr_nm 
				from tb_co_user tcu 
				where tcu.usr_id = upt_usr_id) as lsch_nm
			  ,to_char(upt_dt,'YYYY-MM-DD') as upt_dt
		  from shscsm_labs_sft_chk
		 where labs_sft_chk_id = #{labs_sft_chk_id}
	</select>
	
	<!-- 연구실 안전점검대상 조회 -->
	<select id="selectlabsChkTgt" parameterType="sqlMap" resultType="sqlMap">
		/* selectlabsChkTgt */
		select labs_sft_chk_sn
		      ,labs_rspn_org_cd
		      ,fn_get_dept(labs_rspn_org_cd) as labs_rspn_org_nm
		      ,labs_mgnt_usr_nm
		      ,mgnt_labs_cnt
		      ,labs_sft_chk_tgt_atfl_no
		      ,(select count(1) as cnt
				  from tb_co_atfl e
				 where e.atfl_no = labs_sft_chk_tgt_atfl_no
			   ) as labs_sft_chk_tgt_atfl_cnt
		      ,labs_sft_chk_exct_yn
		  from shscsd_labs_sft_chk_tgt 
		 where labs_sft_chk_id = #{labs_sft_chk_id}
	</select>
	
	<!-- 연구실 안전점검대상 채번 -->
	<select id="selectLabssftChkKey" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectLabssftChkKey */
		select concat('LABS', to_char(now(), 'YYMMDD'), coalesce(lpad((max(substring(labs_sft_chk_id , 11, 4)::integer) + 1)::text, 4, '0'),'0001')) as key
		  from shscsm_labs_sft_chk slsct 
		 where 1=1
		   and substring(labs_sft_chk_id, 1, 10) = concat('LABS', to_char(now(), 'YYMMDD'))
	</select>
	
	<!--연구실 일상점검 기본정보 저장 -->
    <insert id="insertLabssftChk" parameterType="sqlMap">
        /* insertLabssftChk */
        insert into shscsm_labs_sft_chk (
			labs_sft_chk_id 
		   ,wkpl_id 
		   ,labs_sft_chk_yrmn 
		   ,labs_sft_chk_nm
		   ,labs_sft_chk_txt
		   ,labs_sft_chk_note_txt
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt
		) values (
			#{labs_sft_chk_id}
		   ,#{wkpl_id}
		   ,#{labs_sft_chk_yrmn}
		   ,#{labs_sft_chk_nm}
		   ,#{labs_sft_chk_txt}
		   ,#{labs_sft_chk_note_txt}
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <!-- 연구실 일상점검 기본정보 업데이트 -->
	<update id="updateLabsChkTgt" parameterType="sqlMap">
        /* updateLabsChkTgt */
        update shscsm_labs_sft_chk
		   set wkpl_id = #{wkpl_id}
		   	  ,labs_sft_chk_yrmn = #{labs_sft_chk_yrmn}
		   	  ,labs_sft_chk_nm = #{labs_sft_chk_nm}
		   	  ,labs_sft_chk_txt = #{labs_sft_chk_txt}
		   	  ,labs_sft_chk_note_txt = #{labs_sft_chk_note_txt}
		      ,crt_usr_id = #{SESS_ID}
		      ,crt_dt = now()
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where labs_sft_chk_id = #{labs_sft_chk_id}
    </update>
    
    <!-- 연구실 안전점검대상 저장 -->
    <insert id="insertLabsTgtList" parameterType="sqlMap">
    	<selectKey resultType="int" keyProperty="sn" order="BEFORE">
	        select coalesce(max(labs_sft_chk_sn), '0') + 1 
			  from shscsd_labs_sft_chk_tgt slsct
			 where labs_sft_chk_id = #{labs_sft_chk_id}     
	    </selectKey>
        /* insertLabsTgtList */
        insert into shscsd_labs_sft_chk_tgt (
			labs_sft_chk_id 
		   ,labs_sft_chk_sn 
		   ,wkpl_id
		   ,labs_sft_chk_yrmn
		   ,labs_rspn_org_cd 
		   ,labs_mgnt_usr_nm
		   ,mgnt_labs_cnt
		   ,labs_sft_chk_exct_yn
		   ,labs_sft_chk_tgt_atfl_no
		   ,crt_usr_id 
		   ,crt_dt 
		   ,upt_usr_id 
		   ,upt_dt 
		) values (
			#{labs_sft_chk_id}
		   ,#{sn}::numeric
		   ,#{wkpl_id}
		   ,#{labs_sft_chk_yrmn}
		   ,#{labs_rspn_org_cd}
		   ,#{labs_mgnt_usr_nm}
		   ,#{mgnt_labs_cnt}::numeric
		   ,#{labs_sft_chk_exct_yn}
		   ,case when #{labs_sft_chk_tgt_atfl_no}::text  = '' then null 
								   			   else #{labs_sft_chk_tgt_atfl_no}::INTEGER 
						    	 		   end
		   ,#{SESS_ID}
		   ,now()
		   ,#{SESS_ID}
		   ,now()
		)
    </insert>
    
    <!-- 연구실 안전점검대상 업데이트 -->
    <update id="updateLabsTgtList" parameterType="sqlMap">
        /* updateLabsTgtList */
        update shscsd_labs_sft_chk_tgt
		   set wkpl_id = #{wkpl_id}
		      ,labs_rspn_org_cd = #{labs_rspn_org_cd}
		      ,labs_mgnt_usr_nm = #{labs_mgnt_usr_nm}
		      ,mgnt_labs_cnt = #{mgnt_labs_cnt}::numeric
		      ,labs_sft_chk_exct_yn = #{labs_sft_chk_exct_yn}
		      ,labs_sft_chk_tgt_atfl_no = case when #{labs_sft_chk_tgt_atfl_no}::text  = '' then null 
								   			   else #{labs_sft_chk_tgt_atfl_no}::INTEGER 
						    	 		   end
		      ,upt_usr_id = #{SESS_ID}
		      ,upt_dt = now()
		 where labs_sft_chk_id = #{labs_sft_chk_id}
		   and labs_sft_chk_sn = #{labs_sft_chk_sn}::numeric
    </update>
    
    <!-- 연구실 안전점검대상 삭제 -->
    <delete id="deleteLabsTgtList" parameterType="sqlMap">
        /* deleteLabsTgtList */
        delete from shscsd_labs_sft_chk_tgt 
		 where labs_sft_chk_id = #{labs_sft_chk_id}
		   and labs_sft_chk_sn = #{labs_sft_chk_sn}::numeric
    </delete>
    
    <!-- QR 코드 키 가져오기 -->
	<select id="selectSftOprnChkKeyVal" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectSftOprnChkKeyVal */
		select oprb_chk_id 
		  from tb_sh_oprb_chk soc 
		 where oprb_chk_tgt_id = #{tgtId}
		   and oprb_chk_schd_dt = to_char(now(), 'YYYYMMDD')
		   and oprb_chk_rspn_usr_id = #{SESS_ID}
		 limit 1
	</select>
	
	<!-- QR 코드 키 가져오기 -->
	<select id="selectSftWknsChkKeyVal" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectSftWknsChkKeyVal */
		select circ_chk_id 
		  from tb_sh_circ_chk scc 
		 where circ_chk_tgt_id = #{tgtId}
		   and circ_chk_schd_dt = to_char(now(), 'YYYYMMDD')
		   and circ_chk_supe_usr_id = #{SESS_ID}
		 limit 1
	</select>
	
	<!-- 제외 상태 업데이트 -->
    <update id="updateOprnExcept" parameterType="sqlMap">
        /* updateOprnExcept */
       update tb_sh_oprb_chk 
	      set oprb_chk_prst_cd = '70'
	    where oprb_chk_id = #{oprb_chk_id}
    </update>
    
    <select id="selectMbKeyChk" parameterType="sqlMap" useCache="false" resultType="string">
		/* selectMbKeyChk */
		select case when (select count(*) 
	                        from tb_sh_circ_chk_tgt scct
	                       where scct.circ_chk_tgt_id = scc.circ_chk_tgt_id
	                         and scct.chec_cl_cd = 'CE008') > 0 then 'Y' else 'N' end as gb 
		  from tb_sh_circ_chk scc 
		 where circ_chk_tgt_id = #{tgtId}
		   and circ_chk_schd_dt = to_char(now(), 'YYYYMMDD')
		   and circ_chk_supe_usr_id = #{SESS_ID}
		 limit 1
	</select>
</mapper>