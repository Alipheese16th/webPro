
DROP TABLE BOOK;
DROP TABLE BOOKCATEGORY; -- 참조키가 다른곳에 사용될경우 먼저 테이블 삭제 불가
DROP TABLE BOOKCATEGORY CASCADE CONSTRAINTS; -- 참조하는 테이블과 상관없이 강제 삭제 (주의)

CREATE TABLE BOOKCATEGORY(
    CATEGORY_CODE   NUMBER(4)    PRIMARY KEY,
    CATEGORY_NAME   VARCHAR2(30) UNIQUE,
    OFFICE_LOC      VARCHAR2(30) NOT NULL
);
SELECT * FROM BOOKCATEGORY;
CREATE TABLE BOOK(
    BOOKNO        VARCHAR2(10) PRIMARY KEY,
    BOOKNAME      VARCHAR2(50),
    PUBLISHER     VARCHAR2(30),
    PUBYEAR       NUMBER(4) DEFAULT EXTRACT(YEAR FROM SYSDATE),
    CATEGORY_CODE NUMBER(4) NOT NULL,
    FOREIGN KEY(CATEGORY_CODE) REFERENCES BOOKCATEGORY(CATEGORY_CODE)
);
SELECT * FROM BOOK;
COMMIT;

INSERT INTO BOOKCATEGORY VALUES (
    (SELECT CATEGORY_CODE FROM BOOKCATEGORY WHERE CATEGORY_NAME = '철학')
    ,'철학','3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (200,'인문','3층 인문실');
INSERT INTO BOOKCATEGORY VALUES (300,'자연과학','4층 과학실');
INSERT INTO BOOKCATEGORY VALUES (400,'IT','4층 과학실');

INSERT INTO BOOK(BOOKNO,BOOKNAME,PUBLISHER,PUBYEAR,CATEGORY_CODE)
    VALUES ('100A01','철학자의 삶','이젠출판',2021,100);
INSERT INTO BOOK 
    VALUES ('400A01','이것이DB다','다음출판',2022,400);
COMMIT;

SELECT BOOKNO 책번호,BOOKNAME 책이름,PUBLISHER 출판사,PUBYEAR 출판년도,
        CATEGORY_NAME 책분류,OFFICE_LOC 사무실
    FROM BOOK B1, BOOKCATEGORY B2
    WHERE B1.CATEGORY_CODE = B2.CATEGORY_CODE;
    
--------------------------------------------------------------------------------
--★ 본 시험 ★-- 
DROP TABLE STUDENT;
DROP TABLE MAJOR;

CREATE TABLE MAJOR(
    MAJOR_CODE       NUMBER(4) PRIMARY KEY,
    MAJOR_NAME       VARCHAR2(30),
    MAJOR_OFFICE_LOC VARCHAR2(30)    
);
SELECT * FROM MAJOR;
INSERT INTO MAJOR 
    VALUES(1,'컴퓨터공학','A101호');
INSERT INTO MAJOR 
    VALUES(2,'빅데이터','A102호');
    
CREATE TABLE STUDENT(
    STUDENT_CODE    NUMBER(4) PRIMARY KEY,
    STUDENT_NAME    VARCHAR2(30),
    SCORE           NUMBER(3) CHECK(100>=SCORE AND SCORE>=0),
    MAJOR_CODE      NUMBER(4) NOT NULL,
    FOREIGN KEY(MAJOR_CODE) REFERENCES MAJOR(MAJOR_CODE)
);
SELECT * FROM STUDENT;
INSERT INTO STUDENT (STUDENT_CODE,STUDENT_NAME,SCORE,MAJOR_CODE)
    VALUES(101,'홍길동',99,1);
INSERT INTO STUDENT (STUDENT_CODE,STUDENT_NAME,SCORE,MAJOR_CODE)
    VALUES(102,'신길동',100,2);
COMMIT;
SELECT STUDENT_CODE 학번,STUDENT_NAME 이름,SCORE 점수,S.MAJOR_CODE 학과코드,
        MAJOR_NAME 학과명,MAJOR_OFFICE_LOC 학과사무실
    FROM STUDENT S, MAJOR M
    WHERE S.MAJOR_CODE = M.MAJOR_CODE;


