-운영체제는 알아서 프로세스를 관리해준다
이클립스도 하고 카톡도 실행하고
그런데 동시에하는게아니고
번갈아가면서 프로세스를 확인한다
거의 동시에 하는것처럼 보이는것

-배열은 동일자료형의 집합이다
다른데이터타입은 불가능.  비슷한 유형끼리 모아놓은 집합체
배열을 선언하면서 초기화 시킬때 int배열인지 string배열인지
선언을 해준다.

-배열은 객체데이터타입(참조데이터타입)처럼 잡힌다
즉 주소값만을 갖고있다. 그 배열의 데이터는 다른곳에 저장되어있다.

-배열의 시작순서는 0부터 시작  0,1,2,3,4,....
이 값들은 인덱스라고 부른다.

new -메모리공간을 할당해준다.
Scanner scanner = new Scanner(System.in)  스캐너 공간을 확보

int[] iArr = { 10, 20, 30, 40, 50 };
배열변수를 선언하면서 초기화(값 대입)
int[] iArr2 = new int[5];
배열변수를 선언하면서  메모리공간5개확보(안에는 0값만 들어잇음)
int[] iArr3;   //변수만 선언
iArr3 = new int[3]; //메모리공간 확보 
		
확장for문 
for(int temp : iArr3) {
System.out.println(temp);
}
temp가 배열안의 값을 순서대로 가져온다. 배열갯수만큼 반복.
확장for문의 temp로 값을 초기화시켜도 for문이 끝나면
temp는 사라지기때문에 근본적인 배열값은 바뀌지않음
확장for문은 출력할때만 쓴다.

-배열의 치명적인 단점.
한번 배열방이 세팅되면 그 이후엔 갯수를 조정할수가 없음
추가로 목록이 더 늘어나면 변경이 불가
그래서 대체제로 나온게 java Collection 사용방법도 비슷함.

참조형데이터의 주소는 16진수로 쓴다.
주소값은 16진수

System.arraycopy(src, srcPos, dest, destPos, length);
배열 복제를 이렇게 간단하게 쓸수있는 메소드

기초데이터타입은 프로그래머가 반드시 초기화를 해놓아야한다.
참조데이터타입은 메모리만 잡아놓으면 알아서 0으로 초기화된다

반복문과 배열을 활용하여
값을 전부 합산해서 평균값을 구하는 식을 만들수도있는데
평균값을 계산할때 double로 변환해줘야 정확한 값을 확인할수있다
또한 가장 큰값을 찾거나 가장 낮은값을 찾을 수있다.
최대값을 0으로 두고 if문으로 비교해가며 만족할때마다 최대값을 올린다.
그렇게 배열 목록을 전부 확인해보면 최대값이 정해진다.
반대로 최소값은 999로 두고 내리면서 확인하면된다.
또한 index도 저장하는 변수를 정해두면 if문을 만족할때만 저장이되기때문에
그 최대값의 키를 찾을수있다.








