
# 어제 이어서 17장 jstl

어제 배운 커스텀액션태그들을 활용해서
서블릿에서 프로세스처리하고 jsp에서 화면출력하기
간단하게 emp테이블 출력하는 페이지 만들어보았다
RequestDispatcher 객체를 활용해서 서블릿에서 jsp로 forward시켜서 
요청객체를 살려보내면 요청객체에 데이터가 들어있으니 el표현식으로 사용한다

--------------------------------------
# 18장 mvc패턴을 위해 슬슬 배워가는 단계 (모델1과 모델2의 중간)

frontcontroller와 command

## Front Controller
하나의 서블릿으로 모든 요청을 처리하는 프론트 컨트롤러

asdf.do
zxcv.do
qwer.do
라는 여러 요청들을 *.do 라는 매핑의 서블릿을 만들어서 한곳으로 집중시킨다

// URL : http://localhost:8090/ch18/select.do
// URI : /ch18/select.do
// conPath : /ch18

요청을 받은 frontController는 요청한 내용에 따라 작업을 분류해야한다
uri.substring(conPath.length()); 하면 컨패스를 뺀 값부터 출력
/select.do  요청에 따라 이부분만 달라지기때문에 이값으로 작업을 나누면된다
view라는 String형 변수를 하나 초기화 해두고,
각 작업마다 view변수에 각 전환할 페이지경로를 입력하면
마지막에 forward시 각각 다른 페이지로 간다

그러나 사실 다른페이지로 갈필요없이
뭔가 insert 하거나 update같은경우는 작업이 끝나면 다시 list를 보는게 보통이다.
작업이 끝나면 다시 select.do를 재요청해서 자기자신을 다른 uri로 재호출시키는것.
그러면 select.do관련 게시판 목록이 나온다.

## Command 구조
위와 같이 처리하면 컨트롤러에만 너무 코드가 집중되어서 엄청 방대해진다.
컨트롤러에서 직접 처리하지않고 작업별로 개별적인 command측에서 처리하도록함

select, insert, update, delete 4가지 작업별로 나눠서 클래스를 4개를 만들것인데
인터페이스를 먼저 만든다.
Service 라는 인터페이스를 생성해서 HttpServletRequest, HttpServletResponse 두개의 매개변수를 사용하는 추상메서드를 하나 정의해놓는다.
그리고 각 4개의 클래스를 하나의 인터페이스를 구현해서 메서드에 작업내용을 작성

컨트롤러에서 Service라는 인터페이스타입의 변수객체를 생성하고 초기화한다.
그리고 각 작업별로 호출하는 클래스를 위의 변수에 담아서 사용한다.
같은 변수의 메서드라도 구현한 하위클래스의 작업내용은 다를테니까 결과가 다르다.

즉 지금까지 배운걸 종합해보면
0. 웹브라우저를 사용하는 클라이언트가 요청시
1. 컨트롤러(*.do)를 통해서 작업을 분류해서 
2. 커맨드(service인터페이스를 구현한 클래스)를 호출해서 (같은 Service변수지만 생성할때 작업별로 다른 클래스생성자를 사용할것이기에 메서드내용은 다름)
3. dao를 호출해서
4. dto를 사용해서 db접근해 처리하고
5. jsp(view)페이지에서 응답한다

-----------------------------------
# 19장 MVC 패턴

다시한번 전체적으로 만들어본다.

- 테이블 생성
- sql쿼리문 작성.

- dto생성  
어차피 이제 jsp에서 매개변수를 받을것이 아닐테니 빈태그도 필요없다
그러나 EL표현식에서 객체변수값을 호출할때 getter가없으면 사용할수없으니
dto만들때 매개변수있는생성자함수, getter&setter정도는 필수적으로만들자

- dao생성
그동안 매번 getConnection 메서드를 만들어서 커넥션풀을 구현했는데 이번에는 다른방법으로 해본다.
클래스 멤버변수로 DataSource 형 변수를 초기화시킨다.
우리가 필요한 connection객체를 반환하는게 데이터소스이기때문
그리고 생성자함수에서
Context ctx = new InitialContext();
ds = (DataSource)ctx.lookup("경로");
이렇게하면 멤버변수 ds에 데이터소스내용이 들어있다
이제 커넥션이 필요할때마다 ds.getConnection() 을 사용하면됨

- Service 인터페이스생성
공통적으로 쓸 함수를 하나 선언 (매개변수 리퀘스트,리스폰스)

- Service인터페이스 구현할 모델 클래스 생성
타임스탬프형데이터가 있으면
매개변수로 받았을때는 String일테고 입력안했을경우 빈문자열일테니

String birthStr = request.getParameter("birth");
Timestamp birth = null;
if(!birthStr.equals("")) {
	birth = Timestamp.valueOf(birthStr+" 00:00:00");
}
라고해서 집어넣는다.

타임스탬프형은 이런식으로 ("1995-06-06"+" 00:00:00")
데이트형은 시간없이 날짜만

- 컨트롤러 작성
요청을 판별하고 그에따라 service.execute호출
뷰페이지로 forward

- jsp 문서들 작성
결과보여주는페이지,
회원가입(입력받는 form페이지)등

form태그 input type="date" 하면 크롬에서는 잘만 날짜입력이 되는데
브라우저(파이어폭스 등)에 따라서 이게 안될수도 있다. 그냥 text입력처럼..
다음에 jQuery 배울때 이부분에 대해서 또 다룰듯

회원가입하면 컨트롤러에서 처리하고나서 다시 memberList.do 로 forward해서 가서 해당 리스트 데이터를 갖고 뷰에서 출력한다. 회원가입작업시에 있던 결과데이터도 리퀘스트에 있을테니 리스트문서에서 c:if 태그를 이용해서 회원가입이 완료됬으면 알림창 알려줘보기.











집갈때마다 크롬 방문기록 임시파일 전체삭제(로그아웃 자동)
크롬 다크리더 풀고 화이트모드로 해주기


-----구글검색
jdbc에서의 데이트와 타임스탬프

커넥션풀과 싱글톤

URLEncoder

데이터베이스 디폴트와 낫널을 같이쓰는게 좋나

----잡담
회원가입할때 아이디중복여부 확인메세지가 아래에 문장 하나만 딱 출력된다. (우리는 촌스럽게 알림창이 뜬다든가 하는식밖에 아직 못해봄)
이 기능은 ajax를 사용한것. 요새는 거의 필수기능.
ajax기능을 할때는 jQuery를 한다


exerd 플러그인이랑
이클립스에서 js자동완성 해주는 플러그인
집에 설치했었나 기억이안난다

아참 학원에서도 컴퓨터바꿔서 설치다시해야됨 

---- 복습
img태그의 src경로는 상대경로로 적을수없다

서블릿의 url매핑은 중복되면 프로젝트 전체가 실행이 안된다

