request 객체에 setAttribute 해서
member 객체를 속성으로 넣어줬다고 치자
member 객체안의 데이터인 name값을 가져오려면
el표현식에서는 ${member.name} 이라고 간단하게 가져올수있따
단 getName 메서드가 member객체내에 선언되어있어야한다.
즉 getter & setter 가 필수적.

다시 알아보는 el표현식의 장점
request.getparamter() 로 매개변수값을 가져오는경우
매개변수가 없으면 null 이 나오고 널포인트익셉션으로 인해 오류가 날수도있다
el표현식에서는 만약 그 값이 없다면 그냥 값이 표현되지 않는다. 오류발생걱정없음
------------------------------------
16장 포워드는 오전에 1시간하고 넘어갔음
노트파일에서 보고 요약정리 
----------------------------------------------
# JSTL (JSP Standard Tag Library)
<c:if >  <c:for>  <c:set>
사용자 액션태그

6장에서 배웠던 액션태그는 표준액션태그 (기본적으로 사용할수있음)

이번에 배워볼 태그는 별도의 라이브러리를 설치해야 사용할수 있는 커스텀액션태그


파일첨부게시판할때 라이브러리 받은것은 자주사용하는것이 아니라 한 프로젝트에서만 
사용할 것이기때문에 cos.jar파일을 프로젝트 폴더내 web-inf - lib 폴더에 넣었는데

이번에는 jstl.jar와 standard.jar를 톰캣 폴더 lib폴더에 넣는다 항시 사용할것이기때문



커스텀액션태그를 사용하려면 위에 지시자로 선언부터해야 사용가능
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
이제 core 관련 태그를 사용할수 있다   가장 자주사용하는 태그

단 주의사항
uri에 ctrl + space 해서 자동완성할때
java.sun.com/jstl/core 는 고르면안된다 jsp가 중간에 빠져있다
이런거 조심 

<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
fmt 포맷태그 
포매팅(날짜, 숫자형식 등 변경) 또는 다국어지원 

<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions" %>
fn 함수관련 태그
자주사용하진 않는다

★액션태그는 반드시 태그닫는걸 중요하게 생각하자★

<c:forEach var="i" begin="1" end="3" step="1">
<p>${i }번째 안녕하세요</p>
</c:forEach>
var는 변수선언. 생략하면 변수없이 반복문실행
begin 시작숫자 end 끝날숫자
step 숫자가 늘어나는 크기

<fmt:formatNumber value="33333333.149" pattern="#,###.##"></fmt:formatNumber>
패턴 #,###.## 은 소수점은 2자리까지(자동반올림)
3자리마다 , 추가한다는 내용.

${fn:toUpperCase(param.id) }
fn태그는 el표기법안에서 fn:하고 함수를 사용가능
그러나 보통 아래처럼 자바식으로 처리할수 있기때문에 자주쓰지는않음
${param.id.toUpperCase() }
param.id는 스트링이기때문에 toUpperCase메서드를 호출할수있다


<% %> 스크립트코드에서만든 변수는 ${} EL표현식에서 사용할수 없다.
<c:set> 태그를 사용해서 변수선언해야 EL표현식에서 사용가능
<c:set var="변수명" value="값"/>

<c:set var="names" value="{"1","2","3"}"/>
<c:forEach items="${names }" var="name">
	<p>${name }</p>
</c:forEach>
이렇게하면 확장for문처럼 배열의 값이 하나씩 출력된다

여기서 begin , end속성을 넣으면 배열의 처음부터 끝까지만이 아니라 부분적으로도 출력이 가능하다

그런데 이 배열을 items속성으로 넣으면 var는 배열의 값을 담는 temp변수가 된다.
일반for문식으로 idx값을 사용하고싶다면 어떻게 할까
먼저 c:set으로 변수를 하나 선언한다 var="idx" value="0" 값은 0으로초기화
그리고 반복문안에서 실행할때마다 idx변수를 다시 c:set으로 +1값으로 재선언하는것
<c:set var="idx" value="0"/>
<c:forEach var="name" items="${names }">
<p>${idx }번째 ${name }</p>
<c:set var="idx" value="${idx+1 }"/>

-------------------------------
오후는 평가 필기문제

오라클을 설치시 기본적으로 path설정이 되어있다
0. 관리자계정접속
sqlplus system/비번   또는    sqlplus /as sysdba
1. 계정생성
create user scott identified by tiger; 오라클
2. 권한부여
grant dba to scott;  
3. 나가기
exit; 
4. scott 계정접속
sqlplus scott/tiger
5. 테이블 생성 / 시퀀스 생성
create table ();
create sequence nocache nocycle;
6. 인덱스 생성
7. 뷰 생성
---
mysql 설치후에
0. C:\Program Files\MySQL\MySQL Server 8.0\bin에서 cmd실행
1. mysql –u계정 -p비밀번호 실행 : 관리자 계정 root로 접속(설치시 비밀번호)  
mysql -uroot –pmysql
2. 데이터베이스 생성
create database kimdb;
3. 테이블삭제 / 테이블생성 / 시퀀스대신 auto_increment
필드 생성시 auto_increment 속성을 부여하면 시퀀스처럼 자동적으로 수 증가
테이블 삭제시 drop table if exists 테이블명;
라고 하면 만약 존재할경우에만 삭제한다.
뷰 생성
create or replace view 뷰명 as 서브쿼리;

-----
어제 잠을못자서 그런가 멍하다

## core태그 사용법

### 변수선언 태그 c:set

역시나 문서 상단에 taglib 지시자 사용해서 core 태그 불러오고
<c:set var="변수명" value="값"/> 으로 변수선언
${변수명} 으로 변수값 출력

그러나 변수 값에 특수문자를 넣으면 어떻게 될까 그대로 출력이 될까? 
<꺽쇄괄호>를 사용하면 태그로 인식해서 무시해버린다.
이럴때 사용하는 태그는 아래의

### 출력전용태그 c:out

value 속성에 넣은 값을 문자열로 출력한다.
<c:out value="${변수명 }" escapeXml="true" default="기본값"/>
escapeXml="true" : 특수문자 인식 (기본설정 true)
default : 만약 값이 없을경우 출력되는 기본값

### 변수를 삭제하는 태그

<c:remove var="변수명"/>
변수 삭제

---
이제 앞으로 계속 core태그를 사용할것이기때문에 taglib지시자를 템플레이트에 만들어두었다
jsp문서 생성시 기본적으로 구현됨
그동안 스크립트코드로 불러온 contextPath도 request.getContextPath() 를 명시하는것이 아닌
c:set 에다가 value="${pageContext.request.contextPath}"로 값을 정의한다.

그러나 템플레이트에 ${} 표현식 설정시 주의사항이 있다 
템플레이트설정에서 $를 한번만 쓰면 시스템의 변수를 가져온다는 뜻이 우선이기때문에
$${} 라고 $를 두번사용해야 평소에 사용하는 el표현식으로 이해한다
---

### 페이지전환 태그

jsp에서 스크립트릿 없이 redirect 하는법
<c:redirect url="경로"/>
forward는 <jsp:forward page="경로"/>

### 예외 처리 태그
<c:catch var="e"> 
예외발생할수있는내용
</c:catch>
c:catch 안에서 예외발생시 예외타입과 예외메세지가 e변수에 저장된다
위 내용 중간에 예외가 발생하면 아래의 내용은 수행되지않고 바로 빠져나간다.

### 조건문 if태그

<c:if test="${비교1 eq 비교2}">     -- ==보다는 eq를 사용
 test조건이 참일경우 실행하는 내용
</c:if>

그러나 else태그는 없다
c:if 로 반대의 조건을 또 써야한다

c:if 태그의 var 속성은 변수명을 입력하면
해당 조건이 참일경우 true , 거짓일경우 false 값이 할당된다.
scope는 위의 변수 범위설정 (기본값은 page)

그러나 문제가 여러경우의 조건을 확인해야할경우 일일히 if태그를 반복해서 작성해야한다.
이럴때 사용할수있는 태그는 아래

### choose when

<c:set var="visitNum" value="${param.visitNum }"/>
<c:choose>
	<c:when test="${visitNum eq 1 }">
		<h2>첫 방문 감사합니다</h2>
	</c:when>
	<c:when test="${visitNum > 1 && visitNum <= 5 }">
		<h2>자주 자주 방문해 주세요</h2>
	</c:when>
	<c:when test="${visitNum > 5 }">
		<h2>자주 방문해 주셔서 감사합니다</h2>
	</c:when>
	<c:when test="${empty visitNum || visitNum <= 0 }">
		<h2>제대로 된 방문 횟수를 받지 못했습니다</h2>
	</c:when>
</c:choose>

근데 이거라고 if보다 훨씬 편하고 그런건 아니라 그냥 이런게 있다고만 알아두자.

보통 헤더에서 사용자 로그인상태를 세션값으로 확인하는데
이 if태그를 사용해서 세션값이 존재하는경우와 아닌경우에 따라 헤더에 출력하는 내용이 달라진다 
-----
## fmt 태그사용법

### requestEncoding

utf-8 인코딩
form 태그 method = "post" 방식으로 전송하면 한글이 깨지는건 익히 알고있다
우리는 그동안 자바코드로 request.setCharacterEncoding("utf-8") 을 사용했었다
그러나 이제는 자바코드는 자바파일에 모아놓을것이니 jsp문서에서는 따로 커스텀액션태그를 사용하는것.

매개변수 받는 페이지에서
<fmt:requestEncoding value="utf-8" />
라고 명시하면 끝

### formatNumber

세자리마다 컴마(,) 찍는법
<fmt:formatNumber value="${num }" groupingUsed="true"/>
groupingUsed 속성을 true로 주면 된다
또는
<fmt:formatNumber value="${num }" pattern="#,###.##"/>
라고 패턴을 직접 지정할수 있다. 소수점도 몇자리까지 지정할지 선택함
패턴을 # 이아닌 0 으로 지정하면 변수값이 패턴보다 수가 적어도 부족한 자릿수는 0으로 채움. 소수점이 2자리여도 0을 3자리하면 0이 붙어서 나옴.

### formatDate 날짜 포맷

java.util 패키지에 있는 Date는 new Date() 하면 현재시점으로 객체 생성
java.sql 패키지의 Date는 매개변수없이 생성자 함수 불가능. 매개변수로 System.currentTimeMillis() 를 넣어줘야 가능

마찬가지로 java.sql에 있는 Timestamp 클래스도 System.currentTimeMillis() 를 넣어야 생성자함수 가능

보통 우리는 데이터베이스의 날짜데이터를 가져올때는 
sql패키지의 Date나 Timestamp 클래스를 사용할텐데 
시간까지 포함하려면 타임스탬프를 사용해야한다.

이미 sql패키지의 Date클래스를 import하고있는 문서에서
util패키지의 Date를 사용하고싶으면 임포트를 두개를 못해서 아래처럼 사용한다
new java.util.Date();
이러면 import없이 객체 생성가능. 사실 패키지 포함해야 정확한 클래스명이다.

<fmt:formatDate>  태그에서
value 속성으로 날짜형식의 데이터를 입력하고
type 속성으로 date(날짜만 출력) time(시간만 출력) both(둘다출력) 할건지 정하고
dateStyle이나 timeStyle속성은 short(짧게) medium(중간) long(길게) full(전체) 출력형식을 지정할수있다

그러나 더 상세하게 조정하려면 pattern 속성을 사용하면 된다.
yy년 MM월 dd일 (E요일) hh(12시간) HH(24시간) mm분 ss초 SSS밀리초 a(오전/오후)

------------------------------------------











