다시한번정리

자바스크립트의 함수는 독특하다
매개변수 2개짜리 함수에 3개를 넣어도 마지막 매개변수는 무시되고 앞의 두개만 사용된다.
혹은 매개변수를 1개만 넣으면 못받은 매개변수자리에는 undefined
함수에 리턴값이 없어도 undefined

익명함수는 선언적함수와는 다르게 함수구성을 아래쪽에두면 위에서 호출해도 실행이 안된다.
변수에 할당하기전에 변수를 호출했기때문

선언적함수는 함수만 선언하는것이기때문에 세미콜론안붙여도됨;
익명함수는 변수에 할당하는것이기때문에 세미콜론 필요

여러 라이브러리를 가져올때 함수의 이름이 같다면 순서에따라서 마지막에 정의된 함수가 호출이된다.

== : 내용이 같나
=== : 타입까지 같나

new Date().getTime();  현재 밀리세컨

-----
4.가변인자함수
가변 인자 함수 : 매개변수의 갯수에 따라 변하는 함수
자바에서는 함수의 오버로딩이 가능해서 함수를 중복정의 할수 있다.
하지만 자바스크립트에서는 그게 불가능하기때문에 가변인자함수를 사용한다.
기본적으로 함수가 실행될때 매개변수를 받으면 arguments배열에 자동적으로 넣어져서 들어온다. 즉 우리는 arguments배열을 활용하면되는것.

화살표함수 문법에서는 argument배열을 사용할수없다. 

Array() 내장함수
/* 내장함수 중 Array 함수 : 
*  매개변수가 0개 : length가 0인 배열생성
*  매개변수가 1개일 때 : 매개변수만큼의 크기를 가지는 배열생성
*  매개변수가 2개이상일때는 매개변수로 배열을 만든다.  */ 

### 함수형언어 (자바스크립트 파이썬 등) 에서는 
배열 끝에 , 를 넣어도 배열갯수가 늘어나지않고 무시된다.

----------------

5.내부함수
내부함수 사용이유 : 충돌을 피하고자 사용한다.
내부함수를 사용하지않고 함수를 여러개 정의해두면 다른 라이브러리들과 같은 이름의 함수로서 충돌날 일이 많기때문에 하나의 함수안에 내부함수를 사용하여 충돌을 피한다.

### Math.sqrt() 루트해주는 함수 (제곱의반대)

------

6.자기호출함수
위의 내부함수와 비슷한 이유로 충돌을 피하려고 사용한다.
함수선언전체를 괄호로 감싸고 ()를 붙여서 함수호출을 바로한다.
(function(x){return x*x})(x);
fun(x); 처럼 사용하는것. fun 이라는 변수이름대신 (함수내용)이 되는것.
함수를 만들자마자 일회성으로 사용할수있다.

------

7.콜백함수
매개변수에 함수가 들어오는것.
함수를 매개변수로 받아서 사용한다. 
저번에 사용한 forEach함수가 그렇다.

-------

8.클로저함수
함수를 리턴하는 것.
자바스크립트에서는 함수도 하나의 자료형이므로 매개변수로 쓸수도, 리턴도 할수있는것. 특정함수를 여러번수행하거나 이벤트처리를 할때 필요.

--------

9.자바스크립트 내장함수
(https://www.w3schools.com/jsref, http://devdocs.io/javascript)
----------
9-1. 타이머 함수
 - setTimeout(function, millisecond) ; 일정시간 후 함수를 한번 실행
 - setInterval(function, millisecond) ; 일정시간마다 함수를 반복해서 실행
 - clearTimeout(id) ; setTimeout 중지
 - clearInterval(id); setInterval 중지

타이머는 브라우저가 전부 로드 된 이후에 실행이된다.
기존함수와의 순서가 햇갈릴수있는데,
0초후에 실행하라고해도 바로실행되는게아닌 브라우저가 로드된이후에 실행.

----------
9-2. 인코딩과 디코딩
한글같은 유니코드 문자가 오작동을 일으킬수 있으므로 인코딩해야한다.
문자를 부호화하는 것이 인코딩, 반대로 돌리는것이 디코딩.

encodeURIComponent(uriConponent) ; 대부부의 문자를 모두 인코딩
decodeURIComponent(encodedURI);   대부분의 문자를 모두 디코딩

https://www.google.com/search?q=%EC%9D%B4%EC%A0%A0
https://www.google.com/search?q=이젠
이젠 -> 인코딩한 이젠 -> %EC%9D%B4%EC%A0%A0 -> 디코딩한 후 str로 해석
-----------
퀴즈 1초마다 배경이미지바꾸기. 시간출력

style 태그 body에서 css를 입혀봤자
document.write() 로 출력하면 다시 처음부터 브라우저에 출력하기때문에 css가 적용이 안된다. 따라서 해당 함수에 document.body.style....로 입혀야한다.
즉 document.write는 css를 초기화시키기때문에 주의가 필요하다.

document.body.style.fontSize = '2em';
style태그에서는 font-size 지만 위처럼 js에서는 fontSize 라고 대문자로 구분한다.

-----------------------------------------------------------------

# 6장 객체 

객체를 선언할때 const 상수로 지정해도
객체는 레퍼런스 주소를 참조하는것이기때문에 주소만 변경되지않으면 괜찮다.
즉 안의 데이터가 변경되도 에러가 안난다.

예를들어 아래의 객체가 있다고 하자
person = {'name':'홍길동','age':20};
그러면 홍길동이라는 이름명을 호출한다고 하면 
배열처럼 person['name']  라고 호출할수도 있고 (홀따옴표 필수)
자바의 객체처럼 person.name  으로 호출할수도 있다.
배열의 인덱스 값 (0,1,2) 이 name,age로 바뀐것


-------다운 받은 반정형 데이터 파일의 종류
데이터통계사이트에서 데이터를 다운받아 참고할때
csv 파일  (엑셀같은 형태)
json 파일 (js의 객체같은 형태)
xml 파일  (태그같은 형태)

1. *.csv
name,age
'홍길동',20
'신길동',30

2. *.json
{'name':'홍길동','age':20},
{'name':'신길동','age':30},
{'name':'신길동','age':30,'address':'서울'}

3. *.xml
<person>
	<name>홍길동</name>
	<age>20</age>
</person>
<person>
	<name>신길동</name>
	<age>30</age>
</person>

4. *.xlsx

5. *.txt

------
배열 출력할때 사용하는 for-in 문

객체는 일반for문은 사용불가하고 for-in문만 사용가능하다
key를 in문으로 받아와서 객체[key] 출력.

js에서는 웃기게도 객체에 데이터를 추가할수있다.
obj.address = '서울시';
그럼 address키가 생긴다.
