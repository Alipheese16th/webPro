# 반복문
v-for를 이용해서 반복문을 사용할수있다
v-for="asdf in array"
배열안의 데이터를 asdf라는 변수에 담아서 사용가능
v-for="(data,idx) in array"
이렇게 하면 두번째값은 인덱스가 들어온다
객체도 배열로서 다룰수있는데 이경우는
v-for="(value,key,idx) in object"
이런식으로 구성된다. 밸류값만 필요하면 한개만 명시하면되고
키값도 필요하면 2개, 인덱스까지 3개로 표현가능
근데 객체를 반복문으로 쓸일은 크게 없다

# 다른 뷰 인스턴스에 접근

뷰를 생성할때 const asdf = new Vue(); 이런식으로 만들고
asdf 라는 변수에 접근하여 다른 뷰 인스턴스의 데이터를 바꾸거나 할수있다


# Vue 컴포넌트

비슷한 내용의 뷰인스턴스가 반복되면 중복문제도 생기고 가독성이 떨어진다
재사용가능한 코드로 캡슐화 한다
뷰컴포넌트는 즉 뷰인스턴스이기도 하므로 모든 옵션객체 사용가능, 라이프사이클 훅 사용가능


1. 전역등록
Vue.component('사용자지정태그이름',{옵션});

이렇게 컴포넌트를 등록하면 나만의 태그로 사용이 가능하다


2. 지역등록
var child = {옵션}
new Vue({
	components:{
		'사용자지정태그이름':child
	}
});


굳이 모든 뷰에서 사용할 필요는 없다 (성능문제)
다른 뷰에 components 옵션으로 등록하는것으로 사용이 가능하다


# Vue Cli 로 뷰 설치하기

기본적으로 노드가 설치되어있어야함
터미널에서
node -v
npm -v  버전확인하고
npm install -g @vue/cli
뷰클리를 설치한다 (혹시 맥이나 리눅스라면 명령어 앞에 sudo를 붙여야 에러안남)
그후
vue --version 으로 제대로 깔렷나 확인
이제 원하는 폴더 위치에서 터미널 실행후
vue create 프로젝트명
으로 뷰프로젝트를 생성할수있다
옵션을 설정할수있는데 보통 router나 vuex는 기본으로 쓰니까 추가하고
나머지는 엔터로 쭉 넘기자

뷰클리를 설치하지않고 뷰프로젝트 생성하고싶으면
npx @vue/cli create 프로젝트명 으로 가능

이제 프로젝트구성파일을 살펴보자

node_modules 라는 폴더가있는데
vue.js에서 사용하는 npm 패키지들이 이곳에 모여있다
package.json 파일은 디펜던시, 개발디펜던시 설정파일
소스코드는 src폴더내에 모여있고
main.js 살펴보고 App.vue 살펴보고











