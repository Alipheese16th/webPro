
document.body.innerHTML += "문자열";
이렇게 해야 문자열이 추가가된다. = 할당연산자를 쓰면 기존에 있던 글자는 사라져버리니 주의
document.write()도 기존에 바디가 없을때 사용하는것.

substring(), indexOf(), lastIndexOf()

배열-----
자바스크립트에서 배열 방의 크기는 가변적. 
배열엔 숫자,문자,함수,객체,배열 다 넣을수있음 
배열은 형식상 object 타입이지만 따로생각하자.
push()  배열 끝쪽에 데이터 추가 함수
unshift() 배열 제일 앞쪽에 데이터 추가
pop()  마지막 배열방의 값을 return하고 삭제 
shift() 배열의 제일 앞의 값을 제거한다.
---------
반복문-----
 1.일반 for문
자바랑 같다 똑같이쓰면된다

 2. for-in문
자바의 확장for문과 살짝 다른데
자바는 for(타입 변수 : 배열) { 변수 }
를 사용하면 변수에 각 데이터가 순서대로 들어오는것인데,
자바스크립트에서는 index 번호가 들어오는것뿐이다.
for(idx in arr) { arr[idx] } 이런식으로 쓰면된다.

 3. forEach함수
forEach함수의 매개변수는 함수다.
그 매개변수로 사용되는 함수는 매개변수가 두개인데
첫번째는 데이터, 두번째는 인덱스
arr.forEach(function(data,idx){
    document.write(idx+'번째'+data);
});

4. forEach함수2
function(data) 매개변수를 하나만 받는다. 하지만 오버로딩같은게 아니고
두번째 매개변수에 값이 안들어와서 undefined 되는것뿐이다.
인덱스가 필요없고 data값만 필요할때 사용한다.
----------------
문자열을 배열처럼 쓸수있는게 자바스크립트와 파이썬 
다만 진짜 배열은 아니라 forEach함수나 for-in문은 쓸수없고 일반for문만 사용가능.
---------------------
금액에 , 넣는방법.
우선 숫자형을 문자열로 바꾼다.
3의배수로 나눈 나머지만큼 찍고, 3의배수로 찍는 식
var cntStr = String(cnt);
var temp = cntStr.length % 3;
for(idx=0;idx<cntStr.length;idx++){            
    if(temp==0){
        temp = 3;
        if(idx!=0){
            document.write(',');
        }
    }
    document.write(cntStr[idx]);
    temp--;
}
---------------------

new Date().getTime() 현재시점의 밀리세컨 리턴

배열함수 slice() , splice()
slice는 원본 영향없이 새로생성
slice(시작인덱스,마지막인덱스(생략시끝까지))
slice(beginIndex,lastIndex) substring처럼 인덱스값을 넣으면
원하는 길이만큼 복사해와서 새로운 배열을 리턴.

splice는 원본 배열을 수정
splice(시작지점,몇개삭제할건지)
arr.splice(3,2);  3번째부터 2개를 제거
arr.splice(0,1,'대체')   0번째부터 1개를 제거하는데 대체를 채움.

----------------------
# 5장 함수 ★
1.익명함수   (화살표함수)
람다식과 비슷해보인다.
() => { 내용 };
매개변수가 하나면 소괄호 생략가능, 두개나 0개면 불가능
내용도 한개면 중괄호 생략 가능

익명함수는 선언적 함수가 아니라 변수에 할당해서 호출하기때문에
순서대로 실행이된다.
선언적함수는 함수선언이 최우선되고 함수호출이 두번째지만
익명함수는 정의하기전에는 사용할수도없고 호출도 못한다. 딱 코드 순서대로 실행됨.

2.선언함수
이름을 가지고 혼자 선언하는 함수. 변수에 할당하는게 아니라 세미콜론 필요없음.
function 이름() { 내용 }

선언적 함수는 함수 구성 내용을 아래쪽에 두고 함수호출을 위해서 해도 실행이 된다. (선언 하는게 제일 먼저 실행이된다)

자바스크립트에서 함수는 오버로딩이 안된다.
즉 함수를 매개변수별로 여러개 정의하면(오버로딩) 위에서부터 아래로 확인한후 제일 아래의 함수식으로 정의된다. 덮어씌움. 오버로딩같은건 없다.

같은매개변수식으로 여러개를 정의해도 다무시하고 가장 아래의 함수를 정의한다.
중간에 함수호출을 해봐도 중간내용으로 호출되는게 아니고 가장 아래에 선언된 함수를 호출한다. (함수 선언이 제일 최우선 실행)

라이브러리를 여러개 받아왔을때 함수의 이름이 같아서 충돌이 난다든가 하는 경우가 있다. 이런 문제에서는 해당 스크립트 링크를 제일 아래로 내려본다든가 순서를 바꿔봐야할수가있다.

3.매개변수와 리턴값

매개변수2개짜리함수에 매개변수3개짜리로 실행을 해본다면? 
마지막매개변수는 무시된다.
매개변수2개짜리함수에 매개변수1개짜리로 실행을 해본다면?
나머지 매개변수가 undefined 된다.
함수 내용에 리턴을 안해버리면?
리턴값이 undefined 된다.

4.가변인자함수

5.내부함수

6.자기호출함수

7.콜백함수

8.클로저함수

9.내장함수



--------------구글검색
innerHTML
unshift
--------------------------복습
* 금액에 3자리마다 , 찍는 반복문 *
*반복문에서 splice로 배열 삭제시 길이 줄어들어서 i값 바뀌는거 생각해야함
i-- 해줘야함 안그러면 그다음꺼 확인안하고 넘어가버림 *

window.onload = function(){ 내용 }
브라우저 로드시 실행.

prompt사용시 주의점
1.아무것도입력안하고 확인 = 빈스트링
2. 취소 = null
Number() 변환시 null,빈스트링 둘다 0 으로 변환
parseInt() 변환시 null,빈스트링 둘다 NaN으로 변환
paerseInt()는 숫자문자혼합도 받을수있어서 주의가필요함 