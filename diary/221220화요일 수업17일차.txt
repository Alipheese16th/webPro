
# 자바 파일 입출력 (i/o)   

 ### 입출력이란?   
I/O란? 입력(Input)과 출력(Output)을 뜻 합니다. 프로그램에게 입력하는 것은 Input이며, 
프로그램에서 어떤 것을 출력하는 것을 Output이라고 합니다.
앞에서 살펴본 ‘System.out.println("HelloWorld~~");’ 구문이 바로 Output 입니다.
어떤 데이터를 ‘읽는다’ 라고 하면 입력(Input)이라고 생각 하면 되고, 
데이터를 ‘쓴다‘라고 하면 출력(Output)이라고 생각 하면 됩니다

(1) Input : 파일 데이터를 읽는다. 키보드의 데이터를 읽는다. 네트워크상의 데이터를 읽는다(전송)
(2) Output :파일에 데이터를 쓴다. 모니터에 데이터를 쓴다(출력). 네트워크상에 데이터를 쓴다(전송)


Java에서의 파일입출력 API
InputStream : 1byte단위 입력 API. 이미지, 동영상 등의 데이터에 주로 사용
OutputStream : 1byte단위 출력 API. 이미지, 동영상 등의 데이터에 주로 사용
Reader : 2byte단위 입력 API. 문자열에 주로 사용
Writer : 2byte단위 출력 API. 문자열에 주로 사용

   
|      |이미지동영상 등 데이터용(1byte단위)|문자열용(2byte단위)|
|:----:|:------------------------------------:|:--------------------:|
|입력 API|InputStream|Reader|
|출력 API|OutputStream|Writer|
    

스트림(Stream)이란 데이터를 운반(입출력)하는데 사용되는 연결통로. 
연속적인 데이터의 흐름을 물(stream)에 비유해서 붙여진 이름. 하나의 스트림으로 입출력을 
동시에 수행할 수 없다(단방향통신). 입출력을 동시에 수행하려면 2개의 스트림이 필요하다

 1. 파일로부터 데이터를 읽는 3단계 : 파일(연결통로)을 연다 -> 파일의 데이터를 읽는다(필요한 만큼 반복) -> 파일을 닫는다

 2. 파일에 데이터를 쓰는 3단계 : 파일(연결통로)을 연다 -> 파일에 데이터를 쓴다 -> 파일을 닫는다



 ### InputStream 사용법  
 1. InputStream(추상) 클래스를 상속받은 여러 가지 API 하위 클래스 중의 하나를 이용해서 
객체를 만든다. 또는 다른 클래스의 메소드에서 반환(리턴)되는 타입 객체를 얻는다.   
 2. read(), read(byte[]) 두 개의 메소드를 이용하여 데이터를 읽는다.   
   - read() 1byte씩 읽는다. 속도가 느리다  
   - read(byte[]) byte[]만큼씩 읽는다. 속도가 빠르다.  
 3. 예외 처리와 무조건 close() 실행   
   - I/O를 하면서 반드시 해야 하는 예외처리가 있습니다. IOException입니다. 
	반드시 하도록 컴파일러가 강요합니다    
   - I/O 작업 마지막은 close()로 외부 연결을 끝내야 합니다    

 ### OutputStream 사용법   
 1. OutputStream(추상) 클래스를 상속받은 여러가지 API 하위 클래스들 중의 하나를 이용해서 객체를 만든다. 
	또는 다른 클래스의 메소드에서 반환(리턴)되는 타입 객체를 얻는다.   
 2. write()메소드를 이용해서 데이터를 읽으면 됩니다.   
 3. write(int), write(byte[]), write(byte[], int, int) 세개의 메소드를 이용할 수 있습니다.   
 4. 예외 처리와 무조건 close() 실행   
   - I/O를 하면서 반드시 해야 하는 예외처리가 있습니다. IOException입니다. 
	반드시 하도록 컴파일러가 강요합니다   
   - I/O 작업 마지막은 close()로 외부 연결을 끝내야 합니다   

 ### 파일 읽고 쓰기   
 #### 읽고, 쓰기를 동시에 – 파일 복사  
 1. 파일을 읽고, 다른 파일에 쓰고, 결국은 파일 복사 입니다.  
 2. 작업순서 : InputStream, OutputStream 준비 > is로 읽어들인 데이터를 os으로 씀 > 외부연결 close()함.   
 3. read() : read(), read(byte[]) 등 다양한 메소드 이용 가능  
 4. write() : write(byte), write(byte[]), (write(byte[], int, int) 등 다양한 메소드 이용 가능  


 ### datastream    
Data Stream은 .dat 파일을 만들 때 사용하는 스트림으로 특징은 dat 파일을 읽기 위해서는 
어떤 타입이 어떤 순서로 들어있는지 알아야 읽을 수 있기 때문에 쉽게 읽어올 수 없다는 
특징을 가진다.    

 - DataOutputStream   
DataOutputStream은 자바의 기본 데이터 타입별로 출력하는 별도의 메소드들이 있으며, 
기본 데이터를 매개 변수로 호출한다. 
예를 들어, double 데이터를 출력하려면 writeDouble(double v), c
har 데이터를 출력하려면 writeChar(int v)를 이용한다. 
문자열을 출력할 때는 writeUTF(String str)을 사용한다.   

 - DataInputStream   
이전에 DataOutputStream을 이용해서 test.txt파일에 바이너리 형태로 입력했던 
자바 기본 데이터타입 데이터를 DataInputStream을 이용해서 다시 읽어올 수 있다. 
예를 들어, double 데이터를 읽으려면 readDouble(), char 데이터를 읽을 때는 
readChar()를 이용한다. 문자열을 읽을 때는 readUTF()을 사용한다.  




ㅡㅡㅡㅡㅡㅡ자꾸 까먹는다
1.  month-1 
2.   string은 equals  기본타입은 ==  
3.  주소 띄어쓰기 있는경우 nextLine
ㅡㅡㅡㅡㅡㅡ


입출력 구현 이미지
byte 타입 문자타입 으로 받아서 쓴다
한글이 깨지는경우



자바입출력 인풋스트림 아웃풋스트림


ctrl o  멤버확인

ctrl t  상속확인

ctrl shift f  정렬



파일객체변수