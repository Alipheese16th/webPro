# 오늘 답변글 기능을 만들것이다

원글의 답변글은 아래에 작성
또다른 답변글은 이전 답변글보다 위에 작성한다(최신이 위로)
답변의 답변글은 상위답변글이 원글로서 기준이된다.
---------------
답변글
글1
  글1-3
  글1-2
  글1-1
    글1-1-2
    글1-1-1
      글1-1-1-1
---------------

1. 모든글의 num은 1씩 증가

2. ref
원글이면 num과 같고, 답변글이면 원글의 ref와 같다

3. re_step
원글은 0, 답변글이면 다음과 같이 진행
 a. 원글과 같은 그룹(ref)이고 원글의 step보다 큰값을 가지고있는 글의 step값을 1 늘린다.
 b. 새로운 답변글은 원글의 +1

4. re_indent
원글은 0,
답변글이면 원글의 +1

----------------

즉 이미 답변글이 있을경우 re_step을 1늘려서 아래쪽으로 밀어내고 자신은 원글의 +1 로서 끼어드는것이다.
답변글의 답변글은 부모답변글보다 아래쪽에 있는 글이 있으면 step을 1늘려서 아래로 밀어내고 부모답변글의 step+1로서 끼어드는것

나름 머릿속에서 정리가됐다.
-----

이제 쿼리도 더 만져야한다
1. 답변글에 따라서 출력하는 모양새가 다를테니 출력하는 부분을 전체적으로 만져야하고
2. 답변글을 추가하는 로직이 필요하다.

글목록 출력하는 쿼리를 수정해야하는데
orderby 절에 ref 순으로 우선 출력하고 ref가 같다면 re_step순으로 출력해야하니까 콤마 로 두가지 정렬을 사용하자

답변글 다는 쿼리는 두개가 필요하다
기존 답변글을 아래로 밀어내는 update문
새 답변글을 적는 insert문
update문에서는 WHERE REF=220 AND RE_STEP > 0; 와 같이 같은 ref그룹내에서 원글보다 step이 큰 글들에 한해서 step값을 하나 올린다
새 답변글은 원글과 ref가 같아야하고 원글에 비해 step,indent가 1씩 높아야함 

이제 dao에서 우선 글목록 출력하는 쿼리부터 수정하고

list.jsp에서 글목록을 반복문으로 출력할때 if문에서 re_indent가 0보다 크다면 답변글일 테니 추가로 img를 출력하든 해야한다. 이번에는 들여쓰기같은 공백이미지를 width로 지정해서 indent에 따라 width크기를 조정하는 식으로 해보았다

dao에 답변전단계 메서드 작성 (원글의 ref,re_step 정보가 필요)
private으로 하고 아래의 답변글 추가 메서드 내에서 호출하는 식으로 했음
dao에 답변글 추가 메서드 작성
매개변수로 dto를 받아서 쿼리문을 실행할것인데
dto내용은 원글의 정보와 새 답글의 정보가 섞여있을것이다 

글 상세보기페이지에서 답글쓰기 버튼을 누르면 글쓰기 페이지로 넘어가는데 
글쓰기(writeForm)을 조정해서 파라미터로 num을 받으면 답글쓰기가 되는거고 num을 못받으면 새글쓰기가 되는것이다

답변글을 쓰기위해서는 원글의 정보가 필요하다
원글에 대한 정보 : ref, re_step, re_indent

글상세보기 -> 답글쓰기 버튼 -> 글쓰기폼으로 들어가면 글번호(num)파라미터를 받아서 오기때문에 구분이 가능하다 
num, ref, re_step 등 변수들을 0 으로 초기화시켜놓는다.
만약 답변글이 아닌 새 글이라면 해당 변수들은 그대로 0일것이고
num(글번호)로 dto 원글의 내용을 불러오더라도 답글쓰는 상황이 아니면 dto가 null일 것이다
ref,re_step,re_indent를 dto에서 가져와서 변수에 담아주고 
원글의 정보 3가지를 hidden으로 프로세스단에 매개변수보내자
만약 새글이라면 해당 값들은 0일것이고 답변글이라면 원글의 정보가 들어있을것이다

writePro프로세스단에서는 
받는 매개변수값이
num, ref, re_step, re_indent ( 0이던지, 원글의 정보이던지 )
writer, subject, content, email, pw (원글이던지 답변글이던지)
자바 빈으로 받으면 이 원글과 답변글의 정보가 섞여서 dto에 들어오게된다

만약 답변글이 아닌 원글을 쓰는것이라면 num이 0일테니까
num이 0이라면 if else문으로 나누어서 처리하면된다
원글일시 로직과 답변글일시 로직

기나긴 13장  페이징, 답변글이 끝낫다 
------------------------------------------------------------------------
# 14장 파일첨부
파일 저장위치는 db가 아닙니다.
보통 웹서버와 파일이 거리가 멀어지면 힘들기때문에
파일 이름만 데이터베이스에 저장하고 파일은 웹서버(톰캣 폴더)에 저장합니다.

파일첨부 기능을 넣으려면 라이브러리 하나를 다운받아야한다. 
http://www.servlets.com  에 들어가서 
COS File Upload Library(com.oreilly.servlet)  항목에 들어가서 
cos-22.05.zip 를 다운받는다 

cos.jar파일을 사용하면 되는데
우리가 전에 사용했던 ojdbc6.jar 와는 달리 모든 프로젝트에 항시 쓸것이 아니기때문에
원하는 프로젝트에만 적용할 것이다.

프로젝트 - 자바 리소스 - 라이브러리에 보면 라이브러리가 두개있는데
Apach Tomcat v9.0 은 톰켓 서버가 있는 폴더 내의 라이브러리고
JRE System Library 는 자바에 기본적으로 있는 라이브러리다.
JSTL 같은경우는 추후에 톰켓 라이브러리에 넣을것이다
이번에는 프로젝트에서만 사용할 경우에는 WEB_INF 내 lib 폴더에 jar파일을 넣어놓는다

우리의 목적은 파일을 받아서 서버에 저장하고 파일이름을 받는데 
파일 이름이 중복이라면?
스프링에서는 우리가 직접처리하는데 
이번에는 처리하는 로직을 불러올것이다 

-----
### form태그에서 파일을 입력받고 매개변수 전달하는 문서

form 태그 method = "post" 방식으로 해야 파일이 전달이 되고 추가적으로 form태그 속성이 enctype="multipart/form-data" 를 명시해줘야한다.
form태그로 보내는건 문자 text로만 보내기때문에 MultipartRequest가 필요하다

input type="file" name="file" 을 명시하면 파일첨부가 되고 매개변수로 보냄
-----
### 프로세스단

String path = request.getRealPath("fileUpFolder"); 톰캣 서버 절대경로 -- context path / fileUpFolder
int maxSize = 1024*1024*10; 업로드 최대 용량 (10MB)
String filename = "";  파일이름 초기화
String originalFilename = "";  오리지날파일이름 초기화

MultipartRequest mRequest = new MultipartRequest(request,path,maxSize,"utf-8", new DefaultFileRenamePolicy());
request : 파일 가져오는 요청 객체
path : 파일 저장할 경로
maxSize : 최대용량
"utf-8" : 파일 이름 깨질수도있으니 설정
new DefaultFileRenamePolicy() : 같은 이름의 파일이 있을경우 이름변경해주는 객체 

filename = mRequest.getFilesystemName(param);
서버에 저장된 파일 이름
originalFilename = mRequest.getOriginalFileName(param);
사용자가 첨부한 오리지날 파일이름

이렇게 되면 mRequest 객체의 매개변수들을 잘 넣고 생성만 해도 파일이 톰캣 서버에 잘 올라간다. 그러나 문제가 있다

톰캣서버에만 파일을 올리고 이클립스 소스 폴더에 파일이 없으면 
이클립스 소스에는 파일이 없으니까 소스 수정시 다시 동기화 하기때문에 톰캣에 있는 파일이 삭제되버린다.
항상 톰캣에서 워크스페이스 소스의 내용을 그대로 자신의 폴더로 복사해오기때문.

따라서 서버에 파일을 업로드 한 후 소스폴더에도 파일을 카피해서 전송해야한다.
단 개발자일때만 필요하고
개발이 끝난 후에는 이 로직은 빼는게 맞다. 어차피 소스 수정이 일어나지 않을테니.

하여간 서버폴더의 파일을 소스폴더에도 복사할것이다
예전에 자바를 배우던시절에 사용했던 fileCopy 로직을 다시 사용할것이다
인풋스트림, 아웃풋스트림 사용

-----
File file = new File("d:\\webPro\\note\\bts.mp4"); -- 기존에 있는 파일경로
is = new FileInputStream(file); -- 기존 파일에 빨때 꽂음
os = new FileOutputStream("d:/webPro/note/bts_copy.mp4"); -- 새로 쓸 파일
byte[] bs = new byte[(int) file.length()];  -- 파일length는 long타입이다  기가바이트일경우 엄청 길기때문에. 인트형으로 형변환 해줘야한다. 배열방의 수를 알려줘야하기때문

while(true) {
	int count = is.read(bs); -- 빨때꽂은걸 bs그릇에 담아
	if(count == -1) break;  -- 담은게 없으면 break
	os.write(bs, 0 , count);  -- bs그릇을 0번방부터 count 방까지 쏟아내
}
-----
----------
다시한번 해본다

form 태그
method는 post 방식을 해야 한다
enctype = "multipart/form-data" 
멀티파트 리퀘스트 객체를 이용해야 서버에 파일을 전송할수있다
리퀘스트 객체만으로는 파일을 다룰수가 없다.
또한 멀티파트 리퀘스트 객체에 요청을 위임했기 때문에 
request.getParameter()를 사용할 수 없다.
파일이 아닌 일반 매개변수를 받아오고싶다면 
멀티파트 리퀘스트 객체로 getParameter를 사용해야함

멀티파트리퀘스트 객체 생성시 서버폴더에는 파일이 전송됐을테지만
소스 수정시 바로 사라질테니 개발할 동안은 소스폴더에도 복사하는 로직을 수행해야함
File 클래스타입의 생성자에 서버파일 경로를 적어서 생성하고
인풋스트림, 아웃풋스트림을 사용하여
소스폴더 경로에 복사붙여넣기한다.















img src = 에는 절대경로는 쓸수없다.
conPath/상대경로를 사용해야함


------복습
다시말하지만 이클립스jsp 프로젝트를 함부로 복사하고 실행하면 큰일난다.
복사하고나서 반드시 poperties에 들어가서 context root를 변경해야한다
중복된 context root로 실행하면 터진다

오픈소스 라이브러리 - 사용자에게 소스가 공개된 오픈형 라이브러리

Enumeration 에 대해서 좀더 공부 
MultipartRequest 객체의 getFileNames() 메서드 리턴값이 이뉴머레이션이다
전에 jsp 과정에서 한번 또 나왓던거같은데 어느부분인지 기억이 안난다

스프링에서는 cos.jar가 아닌 다른 라이브러리를 사용한다

