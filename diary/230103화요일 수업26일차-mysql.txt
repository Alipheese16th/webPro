# TOP-N구문

ROWNUM
테이블에서 가져온 순서대로 번호매김

ROWNUM과 모든필드를 출력하고 싶다면
단순히 *를 붙히면 에러나고
ROWNUM , 테이블별칭.*  이렇게 사용해야 가능하다


INLINE VIEW를 이중으로 이용하면 그게 탑앤구문이다
첫번째로 원하는 기준으로 테이블을 정렬한 후
두번째로 ROWNUM을 부여한다
세번재로 ROWNUM을 조건절로 일부만 가져오기 가능



ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

11장 인덱스
 
CREATE INDEX index_name
ON table_name (column_name);


프라이머리키 생성시 자동 인덱스 생성


 ### 인덱스의 구조는 트리구조 
 - treeset과 비슷함 큰 수는 오른쪽 작은수는 왼쪽으로 정렬해 간다
 - 그러나 너무 한쪽으로 치우쳐지면 다시 중앙기준으로 정렬을 한다
 - 즉, 값의 추가나 삭제가 이루어질때마다 기존보다 비용이 커지고 성능이 떨어짐.
  하지만 검색은 최적화 되어있다.

결론: 인덱스는 검색에 좋고 수정에 안좋다.

인덱스 생성시에는 
IDX_테이블명_컬럼명 식으로 만든다

테이블 삭제시 관련된 인덱스 자동 삭제


ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

12장 트랜젝션

DML문에서 INSERT,UPDATE,DELETE 등의 데이터 수정작업을 진행하면
바로 DB에 반영되는것이 아닌, 트랜젝션에 진행상황이 저장된다.

COMMIT
트랜젝션의 진행상황을 DB에 반영한다. 확정 저장

ROLLBACK
트랜젝션을 초기화시킨다.
다시 처음으로 돌아가는것.

SAVEPOINT
그냥 롤백하면 그동안의 트랜젝션이 한번에 날라가니까
세이브포인트를 두어서 특정구간으로 돌아갈수 있다.

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
 # MySQL
mysql은 oracle과 다르게
유저별로 테이블을 다루는게 아니라
유저상관없이 모든 테이블에 접근이 가능하다
다만 mysql은 데이터베이스라는 영역으로 나뉘어져 관리된다.
데이터베이스를 하나 접속후에 작업시작
이번에는 kimdb라는 데이터베이스를 생성하고 접속한다 

mysql-installer-community-8.0.31.0
DEFAULT DEVELOPER
쭉쭉진행한다
커넥터 자바는 깔려야함
MYSQL 포트 = 3306
마리아DB도 MYSQL과 포트가 똑같아서 충돌할수 있으니 주의
비번은 mysql
적당히 다 설치끝내

C:\Program Files\MySQL\MySQL Server 8.0\bin

mysql은 소문자로 쓰는경향이 많다 

워크밴치는 기본설정에서는 commit이 자동으로 된다


show databases; -- database들의 리스트

create user user01 identified by 'password';
여기선 패스워드에 싱글커텐션마크가 필요하다

grant all on *.* to user01;
		모든데이터베이스의 모든테이블
		의 모든권한을 부여한다.

flush privileges 뜻 정확히 알기 

테이블만들때 데이터타입
데이터타입이 조금씩다르다
문자는 varchar
숫자는 numeric 이나 int
날짜는 date 날짜만   datetime 날짜와 시간까지 

drop table if exists 테이블명 

mysql은 시퀀스가 없다
대신 테이블을 생성할때 제약조건으로 auto_increment 를 줄수있다

foreign key는 반드시 아래쪽에써야한다

오라클은 옆에 쓰는경우가 많은데
mysql은 밑에다 쓰는경우가 많다
not null이나 default는 오른쪽에 쓰자 그냥 

outer join이 다르다 
right outer join .. on ..
left outer join .. on ..


nvl은 없고 ifnull이 있다

to_char 없다

시퀀스 없다

rownum 없다

top-n구문이 다르다 







기타ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
CREATE 테이블명 AS 서브쿼리   (괄호없음 AS사용함)

INSERT INTO 테이블명 서브쿼리   (괄호없음 AS사용안함)

SELECT절이나 WHERE절 FROM절에서의 서브쿼리는 소괄호이용 


서브쿼리로 테이블생성시 제약조건은 다 사라진다

DDL에서의 서브쿼리를 전부 훑어보자 
