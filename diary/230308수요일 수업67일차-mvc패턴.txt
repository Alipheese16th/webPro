오후에 평가 있음  통합구현.pdf파일 확인
# 통합구현
- 연계 데이터 구성하기 (테이블 생성)
- 연계 매커니즘 구성하기 (커넥션 풀)
- 내외부 연계 모듈 구현하기 (mvc패턴)

## 연계데이터구성하기
### UML
건축을 하려면 설계도면부터 그려야 한다
- 유스케이스 다이어그램
- 상호작용 다이어그램
### ERD
데이터 모델링 기술서
테이블 간 연관도
컬럼(속성)이 정의된 테이블 정의서
테이블 형식 및 범위 등을 확인 할수 있는 시스템

--------------------------------
어제 이어서 19장 mvc패턴

오늘은 하루종일 mvc패턴으로 게시판을 만들것이다.
컨트롤러에서 모든 요청을 받아서 적절한 서비스클래스를 호출해서 사용하고 뷰페이지로 전환

## 테이블, 시퀀스 설계 
- 테이블, 시퀀스 삭제
- 테이블, 시퀀스 생성
- 더미데이터 입력

## DAO에서 사용할 쿼리문 작성  
- 글목록 보기
  top-n구문
- 페이징
  전체 글갯수 구하는 쿼리
- 원글쓰기
  ref는 자신의 pk와 같고 step과 indent는 0
- 조회수올리기
  상세보기 페이지 접근시에 할 작업. pk를 매개변수로 받아서 해당글을 수정한다.
- 글 상세보기
  pk로 해당 글정보 출력
- 글 수정  
  글 상세보기 페이지에서 글수정이나 답변글 달기 버튼이 있음
- 글 삭제
- 답변글 달기 전 작업  
  원글의 REF와 같고 원글의 STEP보다 큰 글들만 STEP을 +1
  (자신이 끼어들 자리의 아래쪽 글들을 전부 한칸씩 내리는것)
- 답변글 달기  
  원글의 REF와 같고, 원글의 STEP보다 1크고 원글의 INDENT보다 1큼

## DTO 생성
- 멤버변수는 테이블 컬럼과 맞춰서 생성
- 생성자함수
- getter & setter
- toString

## DAO 생성
- 멤버변수로 DataSource형 변수 초기화
커넥션풀 
WAS(톰캣)에게 부탁
DataSource 객체를 만들어서 그 안에 커넥션 객체를 쌓아놔라

- 이번에는 싱글톤이 아니라 그냥 생성자함수
 생성자함수안에서 ds변수에 Context객체의 lookup메서드로 데이터소스객체 만들기
 
- 메서드들 쿼리문으로 구현
글상세보기페이지 쿼리는 하나의 글번호를 받아서 그 글의 정보를 출력하는쿼리인데
그전에 조회수를 올려야한다.
조회수 올리는 메서드를 Service클래스에서 따로 호출해도되고
dao메서드 내에서 private으로 만들어서 상세보기쿼리에서 호출해도되는데
이러면 주의할점이
글수정이나 답변글달기할때도 원글의 정보를 알아야해서 상세보기쿼리(dto 1개가져오는거)를 쓸텐데 이 상세보기쿼리메서드 안에 조회수올리는메서드를 호출하면 
글수정이나 답변글달기할때도 조회수가 올라가버려서 차라리 따로 메서드를 하나 더 만들든가
service클래스에서 조회수메서드를 호출하는게 낫다
이번에는 그냥 메서드(글번호에 따른 dto 1개 반환)를 두개만들었다(상세보기용, 글수정 or 답변글용) 상세보기용은 조회수업메서드호출

답변글 저장전 작업(원글에 이미 답변글이 존재한다면 그 글들을 아래로 한칸씩 내리는거) 메서드를 구현할때도 private으로 구현해서 답변글쓰기 메서드에서 호출해도된다.
아니면 따로 구현해서 그냥 두개호출해도되고. 이번에는 답변글쓰기 메서드에서 호출할거라 private으로 만듬

답변글쓰기메서드에서는
원글쓰기메서드에서 매개변수가 3개추가된다.(dto면 상관없음 그냥 dto사용할때 잘넣어)
원글의 ref,step,indent정보가 필요
그리고 pstmt.setInt()로 쿼리문에 집어넣을때 step과 indent는 +1 을 해줘야한다.


## 컨트롤러 , 서비스클래스, jsp문서

컨트롤러는 요청을 분류해서 서비스클래스들을 호출

### 1. 글목록

- listService
요청이 list.do로 접근하거나 list.do?pageNum=2 이런식으로 페이지번호를 받을경우도잇음
매개변수없을경우는 "1"로 초기화해서
Integer.parseInt로 숫자로 바꾼 변수를 이용해서
시작글번호와 끝번호를 알수있다. 그걸로 탑앤구문을 쓸거니까
그럼 이제 ArrayList를 받았을테니 request에 setAttribute해서 싣는다.

페이징도 처리해야한다. 전체 글갯수를 dao로 알아내서 여러공식들로 변수들을 정의하고
현재페이지,시작페이지,끝페이지, 페이지갯수, 블럭사이즈 5개의 변수를 실어야한다.

- list.jsp
컨트롤러에서 보내온 정보들을 el표현식으로 출력한다.
jstl태그들을 활용해서 조건문이나 반복문을 사용.
글제목부분이 제일 만질게 많다.
답글 들여쓰기부분에서는 
c:forEach var="i" begin="1" end="${dto.bindent }" 이렇게하면
bindent가 1일때는 한번만 실행, 2일때는 두번실행 이렇게 된다 
그 안에서 또 조건을 달아서
<c:if test="${i ne dto.bindent }">
	&nbsp; &nbsp; 
</c:if>
<c:if test="${i eq dto.bindent }">
	└─
</c:if>
이렇게 하면 마지막 반복문에서만 └─ 가 나온다.  
상세보기 페이지로 들어갈수있게 a태그로 하이퍼링크를 달아주는데 
매개변수로 글번호, 현재페이지 2개를 보내줘야함

### 2. 글쓰기
컨트롤러에 writeView.do 요청이 오면 글쓰는 form만 나타낼것이기때문에 db에 접근할일은없음
해당 jsp문서로 보냄.  write_view.jsp 페이지에서는 사용자에게서 입력받고
form태그 action으로 write.do 요청을 보냄
컨트롤러에서 write.do요청이 오면 writeService클래스에서 db에 글추가하고
list.do 요청해서 다시 게시판목록을 보여줌. 이상태에서는 writeResult속성이랑, list속성 두가지의 데이터를 리퀘스트가 갖고있음. writeResult에 따라 글쓰기완료 알림창을 뜸

### 3. 글 내용보기
contentView.do 요청이오면(파라미터로 글번호와, 현재페이지정보를 갖고있음) 컨트롤러에서 ContentService 클래스를 호출해서 dao로 작업하고 dto 1개 정보를 가지고 리퀘스트객체에 싣는다.
작업후에 content_view.jsp 문서에서 글정보를 출력











